/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1DeploymentStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DeploymentStatus{}

// V1DeploymentStatus DeploymentStatus is the most recently observed status of the Deployment.
type V1DeploymentStatus struct {
	// Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.
	AvailableReplicas *int32 `json:"availableReplicas,omitempty"`
	// Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.
	CollisionCount *int32 `json:"collisionCount,omitempty"`
	// Represents the latest available observations of a deployment's current state.
	Conditions []V1DeploymentCondition `json:"conditions,omitempty"`
	// The generation observed by the deployment controller.
	ObservedGeneration *int64 `json:"observedGeneration,omitempty"`
	// Total number of ready pods targeted by this deployment.
	ReadyReplicas *int32 `json:"readyReplicas,omitempty"`
	// Total number of non-terminated pods targeted by this deployment (their labels match the selector).
	Replicas *int32 `json:"replicas,omitempty"`
	// Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created.
	UnavailableReplicas *int32 `json:"unavailableReplicas,omitempty"`
	// Total number of non-terminated pods targeted by this deployment that have the desired template spec.
	UpdatedReplicas *int32 `json:"updatedReplicas,omitempty"`
}

// NewV1DeploymentStatus instantiates a new V1DeploymentStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DeploymentStatus() *V1DeploymentStatus {
	this := V1DeploymentStatus{}
	return &this
}

// NewV1DeploymentStatusWithDefaults instantiates a new V1DeploymentStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DeploymentStatusWithDefaults() *V1DeploymentStatus {
	this := V1DeploymentStatus{}
	return &this
}

// GetAvailableReplicas returns the AvailableReplicas field value if set, zero value otherwise.
func (o *V1DeploymentStatus) GetAvailableReplicas() int32 {
	if o == nil || IsNil(o.AvailableReplicas) {
		var ret int32
		return ret
	}
	return *o.AvailableReplicas
}

// GetAvailableReplicasOk returns a tuple with the AvailableReplicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeploymentStatus) GetAvailableReplicasOk() (*int32, bool) {
	if o == nil || IsNil(o.AvailableReplicas) {
		return nil, false
	}
	return o.AvailableReplicas, true
}

// HasAvailableReplicas returns a boolean if a field has been set.
func (o *V1DeploymentStatus) HasAvailableReplicas() bool {
	if o != nil && !IsNil(o.AvailableReplicas) {
		return true
	}

	return false
}

// SetAvailableReplicas gets a reference to the given int32 and assigns it to the AvailableReplicas field.
func (o *V1DeploymentStatus) SetAvailableReplicas(v int32) {
	o.AvailableReplicas = &v
}

// GetCollisionCount returns the CollisionCount field value if set, zero value otherwise.
func (o *V1DeploymentStatus) GetCollisionCount() int32 {
	if o == nil || IsNil(o.CollisionCount) {
		var ret int32
		return ret
	}
	return *o.CollisionCount
}

// GetCollisionCountOk returns a tuple with the CollisionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeploymentStatus) GetCollisionCountOk() (*int32, bool) {
	if o == nil || IsNil(o.CollisionCount) {
		return nil, false
	}
	return o.CollisionCount, true
}

// HasCollisionCount returns a boolean if a field has been set.
func (o *V1DeploymentStatus) HasCollisionCount() bool {
	if o != nil && !IsNil(o.CollisionCount) {
		return true
	}

	return false
}

// SetCollisionCount gets a reference to the given int32 and assigns it to the CollisionCount field.
func (o *V1DeploymentStatus) SetCollisionCount(v int32) {
	o.CollisionCount = &v
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *V1DeploymentStatus) GetConditions() []V1DeploymentCondition {
	if o == nil || IsNil(o.Conditions) {
		var ret []V1DeploymentCondition
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeploymentStatus) GetConditionsOk() ([]V1DeploymentCondition, bool) {
	if o == nil || IsNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *V1DeploymentStatus) HasConditions() bool {
	if o != nil && !IsNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []V1DeploymentCondition and assigns it to the Conditions field.
func (o *V1DeploymentStatus) SetConditions(v []V1DeploymentCondition) {
	o.Conditions = v
}

// GetObservedGeneration returns the ObservedGeneration field value if set, zero value otherwise.
func (o *V1DeploymentStatus) GetObservedGeneration() int64 {
	if o == nil || IsNil(o.ObservedGeneration) {
		var ret int64
		return ret
	}
	return *o.ObservedGeneration
}

// GetObservedGenerationOk returns a tuple with the ObservedGeneration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeploymentStatus) GetObservedGenerationOk() (*int64, bool) {
	if o == nil || IsNil(o.ObservedGeneration) {
		return nil, false
	}
	return o.ObservedGeneration, true
}

// HasObservedGeneration returns a boolean if a field has been set.
func (o *V1DeploymentStatus) HasObservedGeneration() bool {
	if o != nil && !IsNil(o.ObservedGeneration) {
		return true
	}

	return false
}

// SetObservedGeneration gets a reference to the given int64 and assigns it to the ObservedGeneration field.
func (o *V1DeploymentStatus) SetObservedGeneration(v int64) {
	o.ObservedGeneration = &v
}

// GetReadyReplicas returns the ReadyReplicas field value if set, zero value otherwise.
func (o *V1DeploymentStatus) GetReadyReplicas() int32 {
	if o == nil || IsNil(o.ReadyReplicas) {
		var ret int32
		return ret
	}
	return *o.ReadyReplicas
}

// GetReadyReplicasOk returns a tuple with the ReadyReplicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeploymentStatus) GetReadyReplicasOk() (*int32, bool) {
	if o == nil || IsNil(o.ReadyReplicas) {
		return nil, false
	}
	return o.ReadyReplicas, true
}

// HasReadyReplicas returns a boolean if a field has been set.
func (o *V1DeploymentStatus) HasReadyReplicas() bool {
	if o != nil && !IsNil(o.ReadyReplicas) {
		return true
	}

	return false
}

// SetReadyReplicas gets a reference to the given int32 and assigns it to the ReadyReplicas field.
func (o *V1DeploymentStatus) SetReadyReplicas(v int32) {
	o.ReadyReplicas = &v
}

// GetReplicas returns the Replicas field value if set, zero value otherwise.
func (o *V1DeploymentStatus) GetReplicas() int32 {
	if o == nil || IsNil(o.Replicas) {
		var ret int32
		return ret
	}
	return *o.Replicas
}

// GetReplicasOk returns a tuple with the Replicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeploymentStatus) GetReplicasOk() (*int32, bool) {
	if o == nil || IsNil(o.Replicas) {
		return nil, false
	}
	return o.Replicas, true
}

// HasReplicas returns a boolean if a field has been set.
func (o *V1DeploymentStatus) HasReplicas() bool {
	if o != nil && !IsNil(o.Replicas) {
		return true
	}

	return false
}

// SetReplicas gets a reference to the given int32 and assigns it to the Replicas field.
func (o *V1DeploymentStatus) SetReplicas(v int32) {
	o.Replicas = &v
}

// GetUnavailableReplicas returns the UnavailableReplicas field value if set, zero value otherwise.
func (o *V1DeploymentStatus) GetUnavailableReplicas() int32 {
	if o == nil || IsNil(o.UnavailableReplicas) {
		var ret int32
		return ret
	}
	return *o.UnavailableReplicas
}

// GetUnavailableReplicasOk returns a tuple with the UnavailableReplicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeploymentStatus) GetUnavailableReplicasOk() (*int32, bool) {
	if o == nil || IsNil(o.UnavailableReplicas) {
		return nil, false
	}
	return o.UnavailableReplicas, true
}

// HasUnavailableReplicas returns a boolean if a field has been set.
func (o *V1DeploymentStatus) HasUnavailableReplicas() bool {
	if o != nil && !IsNil(o.UnavailableReplicas) {
		return true
	}

	return false
}

// SetUnavailableReplicas gets a reference to the given int32 and assigns it to the UnavailableReplicas field.
func (o *V1DeploymentStatus) SetUnavailableReplicas(v int32) {
	o.UnavailableReplicas = &v
}

// GetUpdatedReplicas returns the UpdatedReplicas field value if set, zero value otherwise.
func (o *V1DeploymentStatus) GetUpdatedReplicas() int32 {
	if o == nil || IsNil(o.UpdatedReplicas) {
		var ret int32
		return ret
	}
	return *o.UpdatedReplicas
}

// GetUpdatedReplicasOk returns a tuple with the UpdatedReplicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeploymentStatus) GetUpdatedReplicasOk() (*int32, bool) {
	if o == nil || IsNil(o.UpdatedReplicas) {
		return nil, false
	}
	return o.UpdatedReplicas, true
}

// HasUpdatedReplicas returns a boolean if a field has been set.
func (o *V1DeploymentStatus) HasUpdatedReplicas() bool {
	if o != nil && !IsNil(o.UpdatedReplicas) {
		return true
	}

	return false
}

// SetUpdatedReplicas gets a reference to the given int32 and assigns it to the UpdatedReplicas field.
func (o *V1DeploymentStatus) SetUpdatedReplicas(v int32) {
	o.UpdatedReplicas = &v
}

func (o V1DeploymentStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DeploymentStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvailableReplicas) {
		toSerialize["availableReplicas"] = o.AvailableReplicas
	}
	if !IsNil(o.CollisionCount) {
		toSerialize["collisionCount"] = o.CollisionCount
	}
	if !IsNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}
	if !IsNil(o.ObservedGeneration) {
		toSerialize["observedGeneration"] = o.ObservedGeneration
	}
	if !IsNil(o.ReadyReplicas) {
		toSerialize["readyReplicas"] = o.ReadyReplicas
	}
	if !IsNil(o.Replicas) {
		toSerialize["replicas"] = o.Replicas
	}
	if !IsNil(o.UnavailableReplicas) {
		toSerialize["unavailableReplicas"] = o.UnavailableReplicas
	}
	if !IsNil(o.UpdatedReplicas) {
		toSerialize["updatedReplicas"] = o.UpdatedReplicas
	}
	return toSerialize, nil
}

type NullableV1DeploymentStatus struct {
	value *V1DeploymentStatus
	isSet bool
}

func (v NullableV1DeploymentStatus) Get() *V1DeploymentStatus {
	return v.value
}

func (v *NullableV1DeploymentStatus) Set(val *V1DeploymentStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DeploymentStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DeploymentStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DeploymentStatus(val *V1DeploymentStatus) *NullableV1DeploymentStatus {
	return &NullableV1DeploymentStatus{value: val, isSet: true}
}

func (v NullableV1DeploymentStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DeploymentStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


