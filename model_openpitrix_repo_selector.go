/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OpenpitrixRepoSelector type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenpitrixRepoSelector{}

// OpenpitrixRepoSelector struct for OpenpitrixRepoSelector
type OpenpitrixRepoSelector struct {
	CreateTime *string `json:"create_time,omitempty"`
	SelectorKey *string `json:"selector_key,omitempty"`
	SelectorValue *string `json:"selector_value,omitempty"`
}

// NewOpenpitrixRepoSelector instantiates a new OpenpitrixRepoSelector object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenpitrixRepoSelector() *OpenpitrixRepoSelector {
	this := OpenpitrixRepoSelector{}
	return &this
}

// NewOpenpitrixRepoSelectorWithDefaults instantiates a new OpenpitrixRepoSelector object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenpitrixRepoSelectorWithDefaults() *OpenpitrixRepoSelector {
	this := OpenpitrixRepoSelector{}
	return &this
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *OpenpitrixRepoSelector) GetCreateTime() string {
	if o == nil || IsNil(o.CreateTime) {
		var ret string
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixRepoSelector) GetCreateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *OpenpitrixRepoSelector) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given string and assigns it to the CreateTime field.
func (o *OpenpitrixRepoSelector) SetCreateTime(v string) {
	o.CreateTime = &v
}

// GetSelectorKey returns the SelectorKey field value if set, zero value otherwise.
func (o *OpenpitrixRepoSelector) GetSelectorKey() string {
	if o == nil || IsNil(o.SelectorKey) {
		var ret string
		return ret
	}
	return *o.SelectorKey
}

// GetSelectorKeyOk returns a tuple with the SelectorKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixRepoSelector) GetSelectorKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SelectorKey) {
		return nil, false
	}
	return o.SelectorKey, true
}

// HasSelectorKey returns a boolean if a field has been set.
func (o *OpenpitrixRepoSelector) HasSelectorKey() bool {
	if o != nil && !IsNil(o.SelectorKey) {
		return true
	}

	return false
}

// SetSelectorKey gets a reference to the given string and assigns it to the SelectorKey field.
func (o *OpenpitrixRepoSelector) SetSelectorKey(v string) {
	o.SelectorKey = &v
}

// GetSelectorValue returns the SelectorValue field value if set, zero value otherwise.
func (o *OpenpitrixRepoSelector) GetSelectorValue() string {
	if o == nil || IsNil(o.SelectorValue) {
		var ret string
		return ret
	}
	return *o.SelectorValue
}

// GetSelectorValueOk returns a tuple with the SelectorValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixRepoSelector) GetSelectorValueOk() (*string, bool) {
	if o == nil || IsNil(o.SelectorValue) {
		return nil, false
	}
	return o.SelectorValue, true
}

// HasSelectorValue returns a boolean if a field has been set.
func (o *OpenpitrixRepoSelector) HasSelectorValue() bool {
	if o != nil && !IsNil(o.SelectorValue) {
		return true
	}

	return false
}

// SetSelectorValue gets a reference to the given string and assigns it to the SelectorValue field.
func (o *OpenpitrixRepoSelector) SetSelectorValue(v string) {
	o.SelectorValue = &v
}

func (o OpenpitrixRepoSelector) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenpitrixRepoSelector) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreateTime) {
		toSerialize["create_time"] = o.CreateTime
	}
	if !IsNil(o.SelectorKey) {
		toSerialize["selector_key"] = o.SelectorKey
	}
	if !IsNil(o.SelectorValue) {
		toSerialize["selector_value"] = o.SelectorValue
	}
	return toSerialize, nil
}

type NullableOpenpitrixRepoSelector struct {
	value *OpenpitrixRepoSelector
	isSet bool
}

func (v NullableOpenpitrixRepoSelector) Get() *OpenpitrixRepoSelector {
	return v.value
}

func (v *NullableOpenpitrixRepoSelector) Set(val *OpenpitrixRepoSelector) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenpitrixRepoSelector) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenpitrixRepoSelector) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenpitrixRepoSelector(val *OpenpitrixRepoSelector) *NullableOpenpitrixRepoSelector {
	return &NullableOpenpitrixRepoSelector{value: val, isSet: true}
}

func (v NullableOpenpitrixRepoSelector) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenpitrixRepoSelector) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


