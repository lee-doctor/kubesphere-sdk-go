/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DevopsValidates type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DevopsValidates{}

// DevopsValidates struct for DevopsValidates
type DevopsValidates struct {
	// the id of credential
	CredentialId *string `json:"credentialId,omitempty"`
}

// NewDevopsValidates instantiates a new DevopsValidates object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDevopsValidates() *DevopsValidates {
	this := DevopsValidates{}
	return &this
}

// NewDevopsValidatesWithDefaults instantiates a new DevopsValidates object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDevopsValidatesWithDefaults() *DevopsValidates {
	this := DevopsValidates{}
	return &this
}

// GetCredentialId returns the CredentialId field value if set, zero value otherwise.
func (o *DevopsValidates) GetCredentialId() string {
	if o == nil || IsNil(o.CredentialId) {
		var ret string
		return ret
	}
	return *o.CredentialId
}

// GetCredentialIdOk returns a tuple with the CredentialId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevopsValidates) GetCredentialIdOk() (*string, bool) {
	if o == nil || IsNil(o.CredentialId) {
		return nil, false
	}
	return o.CredentialId, true
}

// HasCredentialId returns a boolean if a field has been set.
func (o *DevopsValidates) HasCredentialId() bool {
	if o != nil && !IsNil(o.CredentialId) {
		return true
	}

	return false
}

// SetCredentialId gets a reference to the given string and assigns it to the CredentialId field.
func (o *DevopsValidates) SetCredentialId(v string) {
	o.CredentialId = &v
}

func (o DevopsValidates) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DevopsValidates) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CredentialId) {
		toSerialize["credentialId"] = o.CredentialId
	}
	return toSerialize, nil
}

type NullableDevopsValidates struct {
	value *DevopsValidates
	isSet bool
}

func (v NullableDevopsValidates) Get() *DevopsValidates {
	return v.value
}

func (v *NullableDevopsValidates) Set(val *DevopsValidates) {
	v.value = val
	v.isSet = true
}

func (v NullableDevopsValidates) IsSet() bool {
	return v.isSet
}

func (v *NullableDevopsValidates) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDevopsValidates(val *DevopsValidates) *NullableDevopsValidates {
	return &NullableDevopsValidates{value: val, isSet: true}
}

func (v NullableDevopsValidates) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDevopsValidates) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


