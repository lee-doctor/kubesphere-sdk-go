/*
KS API

KubeSphere OpenAPI

API version: v4.1.1
Contact: support@kubesphere.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V1alpha1UpdateVisibilityRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1alpha1UpdateVisibilityRequest{}

// V1alpha1UpdateVisibilityRequest struct for V1alpha1UpdateVisibilityRequest
type V1alpha1UpdateVisibilityRequest struct {
	Op string `json:"op"`
	Workspace string `json:"workspace"`
}

type _V1alpha1UpdateVisibilityRequest V1alpha1UpdateVisibilityRequest

// NewV1alpha1UpdateVisibilityRequest instantiates a new V1alpha1UpdateVisibilityRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha1UpdateVisibilityRequest(op string, workspace string) *V1alpha1UpdateVisibilityRequest {
	this := V1alpha1UpdateVisibilityRequest{}
	this.Op = op
	this.Workspace = workspace
	return &this
}

// NewV1alpha1UpdateVisibilityRequestWithDefaults instantiates a new V1alpha1UpdateVisibilityRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha1UpdateVisibilityRequestWithDefaults() *V1alpha1UpdateVisibilityRequest {
	this := V1alpha1UpdateVisibilityRequest{}
	return &this
}

// GetOp returns the Op field value
func (o *V1alpha1UpdateVisibilityRequest) GetOp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Op
}

// GetOpOk returns a tuple with the Op field value
// and a boolean to check if the value has been set.
func (o *V1alpha1UpdateVisibilityRequest) GetOpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Op, true
}

// SetOp sets field value
func (o *V1alpha1UpdateVisibilityRequest) SetOp(v string) {
	o.Op = v
}

// GetWorkspace returns the Workspace field value
func (o *V1alpha1UpdateVisibilityRequest) GetWorkspace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Workspace
}

// GetWorkspaceOk returns a tuple with the Workspace field value
// and a boolean to check if the value has been set.
func (o *V1alpha1UpdateVisibilityRequest) GetWorkspaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Workspace, true
}

// SetWorkspace sets field value
func (o *V1alpha1UpdateVisibilityRequest) SetWorkspace(v string) {
	o.Workspace = v
}

func (o V1alpha1UpdateVisibilityRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1alpha1UpdateVisibilityRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["op"] = o.Op
	toSerialize["workspace"] = o.Workspace
	return toSerialize, nil
}

func (o *V1alpha1UpdateVisibilityRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"op",
		"workspace",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV1alpha1UpdateVisibilityRequest := _V1alpha1UpdateVisibilityRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV1alpha1UpdateVisibilityRequest)

	if err != nil {
		return err
	}

	*o = V1alpha1UpdateVisibilityRequest(varV1alpha1UpdateVisibilityRequest)

	return err
}

type NullableV1alpha1UpdateVisibilityRequest struct {
	value *V1alpha1UpdateVisibilityRequest
	isSet bool
}

func (v NullableV1alpha1UpdateVisibilityRequest) Get() *V1alpha1UpdateVisibilityRequest {
	return v.value
}

func (v *NullableV1alpha1UpdateVisibilityRequest) Set(val *V1alpha1UpdateVisibilityRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha1UpdateVisibilityRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha1UpdateVisibilityRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha1UpdateVisibilityRequest(val *V1alpha1UpdateVisibilityRequest) *NullableV1alpha1UpdateVisibilityRequest {
	return &NullableV1alpha1UpdateVisibilityRequest{value: val, isSet: true}
}

func (v NullableV1alpha1UpdateVisibilityRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha1UpdateVisibilityRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


