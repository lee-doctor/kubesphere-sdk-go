/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1ServiceStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ServiceStatus{}

// V1ServiceStatus ServiceStatus represents the current status of a service.
type V1ServiceStatus struct {
	LoadBalancer *V1LoadBalancerStatus `json:"loadBalancer,omitempty"`
}

// NewV1ServiceStatus instantiates a new V1ServiceStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ServiceStatus() *V1ServiceStatus {
	this := V1ServiceStatus{}
	return &this
}

// NewV1ServiceStatusWithDefaults instantiates a new V1ServiceStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ServiceStatusWithDefaults() *V1ServiceStatus {
	this := V1ServiceStatus{}
	return &this
}

// GetLoadBalancer returns the LoadBalancer field value if set, zero value otherwise.
func (o *V1ServiceStatus) GetLoadBalancer() V1LoadBalancerStatus {
	if o == nil || IsNil(o.LoadBalancer) {
		var ret V1LoadBalancerStatus
		return ret
	}
	return *o.LoadBalancer
}

// GetLoadBalancerOk returns a tuple with the LoadBalancer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ServiceStatus) GetLoadBalancerOk() (*V1LoadBalancerStatus, bool) {
	if o == nil || IsNil(o.LoadBalancer) {
		return nil, false
	}
	return o.LoadBalancer, true
}

// HasLoadBalancer returns a boolean if a field has been set.
func (o *V1ServiceStatus) HasLoadBalancer() bool {
	if o != nil && !IsNil(o.LoadBalancer) {
		return true
	}

	return false
}

// SetLoadBalancer gets a reference to the given V1LoadBalancerStatus and assigns it to the LoadBalancer field.
func (o *V1ServiceStatus) SetLoadBalancer(v V1LoadBalancerStatus) {
	o.LoadBalancer = &v
}

func (o V1ServiceStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ServiceStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LoadBalancer) {
		toSerialize["loadBalancer"] = o.LoadBalancer
	}
	return toSerialize, nil
}

type NullableV1ServiceStatus struct {
	value *V1ServiceStatus
	isSet bool
}

func (v NullableV1ServiceStatus) Get() *V1ServiceStatus {
	return v.value
}

func (v *NullableV1ServiceStatus) Set(val *V1ServiceStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ServiceStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ServiceStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ServiceStatus(val *V1ServiceStatus) *NullableV1ServiceStatus {
	return &NullableV1ServiceStatus{value: val, isSet: true}
}

func (v NullableV1ServiceStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ServiceStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


