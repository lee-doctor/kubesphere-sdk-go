/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1alpha3SingleSvnSource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1alpha3SingleSvnSource{}

// V1alpha3SingleSvnSource struct for V1alpha3SingleSvnSource
type V1alpha3SingleSvnSource struct {
	// credential id to access svn source
	CredentialId *string `json:"credential_id,omitempty"`
	// remote address url
	Remote *string `json:"remote,omitempty"`
	// uid of scm
	ScmId *string `json:"scm_id,omitempty"`
}

// NewV1alpha3SingleSvnSource instantiates a new V1alpha3SingleSvnSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha3SingleSvnSource() *V1alpha3SingleSvnSource {
	this := V1alpha3SingleSvnSource{}
	return &this
}

// NewV1alpha3SingleSvnSourceWithDefaults instantiates a new V1alpha3SingleSvnSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha3SingleSvnSourceWithDefaults() *V1alpha3SingleSvnSource {
	this := V1alpha3SingleSvnSource{}
	return &this
}

// GetCredentialId returns the CredentialId field value if set, zero value otherwise.
func (o *V1alpha3SingleSvnSource) GetCredentialId() string {
	if o == nil || IsNil(o.CredentialId) {
		var ret string
		return ret
	}
	return *o.CredentialId
}

// GetCredentialIdOk returns a tuple with the CredentialId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha3SingleSvnSource) GetCredentialIdOk() (*string, bool) {
	if o == nil || IsNil(o.CredentialId) {
		return nil, false
	}
	return o.CredentialId, true
}

// HasCredentialId returns a boolean if a field has been set.
func (o *V1alpha3SingleSvnSource) HasCredentialId() bool {
	if o != nil && !IsNil(o.CredentialId) {
		return true
	}

	return false
}

// SetCredentialId gets a reference to the given string and assigns it to the CredentialId field.
func (o *V1alpha3SingleSvnSource) SetCredentialId(v string) {
	o.CredentialId = &v
}

// GetRemote returns the Remote field value if set, zero value otherwise.
func (o *V1alpha3SingleSvnSource) GetRemote() string {
	if o == nil || IsNil(o.Remote) {
		var ret string
		return ret
	}
	return *o.Remote
}

// GetRemoteOk returns a tuple with the Remote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha3SingleSvnSource) GetRemoteOk() (*string, bool) {
	if o == nil || IsNil(o.Remote) {
		return nil, false
	}
	return o.Remote, true
}

// HasRemote returns a boolean if a field has been set.
func (o *V1alpha3SingleSvnSource) HasRemote() bool {
	if o != nil && !IsNil(o.Remote) {
		return true
	}

	return false
}

// SetRemote gets a reference to the given string and assigns it to the Remote field.
func (o *V1alpha3SingleSvnSource) SetRemote(v string) {
	o.Remote = &v
}

// GetScmId returns the ScmId field value if set, zero value otherwise.
func (o *V1alpha3SingleSvnSource) GetScmId() string {
	if o == nil || IsNil(o.ScmId) {
		var ret string
		return ret
	}
	return *o.ScmId
}

// GetScmIdOk returns a tuple with the ScmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha3SingleSvnSource) GetScmIdOk() (*string, bool) {
	if o == nil || IsNil(o.ScmId) {
		return nil, false
	}
	return o.ScmId, true
}

// HasScmId returns a boolean if a field has been set.
func (o *V1alpha3SingleSvnSource) HasScmId() bool {
	if o != nil && !IsNil(o.ScmId) {
		return true
	}

	return false
}

// SetScmId gets a reference to the given string and assigns it to the ScmId field.
func (o *V1alpha3SingleSvnSource) SetScmId(v string) {
	o.ScmId = &v
}

func (o V1alpha3SingleSvnSource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1alpha3SingleSvnSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CredentialId) {
		toSerialize["credential_id"] = o.CredentialId
	}
	if !IsNil(o.Remote) {
		toSerialize["remote"] = o.Remote
	}
	if !IsNil(o.ScmId) {
		toSerialize["scm_id"] = o.ScmId
	}
	return toSerialize, nil
}

type NullableV1alpha3SingleSvnSource struct {
	value *V1alpha3SingleSvnSource
	isSet bool
}

func (v NullableV1alpha3SingleSvnSource) Get() *V1alpha3SingleSvnSource {
	return v.value
}

func (v *NullableV1alpha3SingleSvnSource) Set(val *V1alpha3SingleSvnSource) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha3SingleSvnSource) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha3SingleSvnSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha3SingleSvnSource(val *V1alpha3SingleSvnSource) *NullableV1alpha3SingleSvnSource {
	return &NullableV1alpha3SingleSvnSource{value: val, isSet: true}
}

func (v NullableV1alpha3SingleSvnSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha3SingleSvnSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


