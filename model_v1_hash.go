/*
KS API

KubeSphere OpenAPI

API version: v4.1.1
Contact: support@kubesphere.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V1Hash type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1Hash{}

// V1Hash struct for V1Hash
type V1Hash struct {
	Algorithm string `json:"Algorithm"`
	Hex string `json:"Hex"`
}

type _V1Hash V1Hash

// NewV1Hash instantiates a new V1Hash object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1Hash(algorithm string, hex string) *V1Hash {
	this := V1Hash{}
	this.Algorithm = algorithm
	this.Hex = hex
	return &this
}

// NewV1HashWithDefaults instantiates a new V1Hash object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1HashWithDefaults() *V1Hash {
	this := V1Hash{}
	return &this
}

// GetAlgorithm returns the Algorithm field value
func (o *V1Hash) GetAlgorithm() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value
// and a boolean to check if the value has been set.
func (o *V1Hash) GetAlgorithmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Algorithm, true
}

// SetAlgorithm sets field value
func (o *V1Hash) SetAlgorithm(v string) {
	o.Algorithm = v
}

// GetHex returns the Hex field value
func (o *V1Hash) GetHex() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hex
}

// GetHexOk returns a tuple with the Hex field value
// and a boolean to check if the value has been set.
func (o *V1Hash) GetHexOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hex, true
}

// SetHex sets field value
func (o *V1Hash) SetHex(v string) {
	o.Hex = v
}

func (o V1Hash) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1Hash) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Algorithm"] = o.Algorithm
	toSerialize["Hex"] = o.Hex
	return toSerialize, nil
}

func (o *V1Hash) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Algorithm",
		"Hex",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV1Hash := _V1Hash{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV1Hash)

	if err != nil {
		return err
	}

	*o = V1Hash(varV1Hash)

	return err
}

type NullableV1Hash struct {
	value *V1Hash
	isSet bool
}

func (v NullableV1Hash) Get() *V1Hash {
	return v.value
}

func (v *NullableV1Hash) Set(val *V1Hash) {
	v.value = val
	v.isSet = true
}

func (v NullableV1Hash) IsSet() bool {
	return v.isSet
}

func (v *NullableV1Hash) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1Hash(val *V1Hash) *NullableV1Hash {
	return &NullableV1Hash{value: val, isSet: true}
}

func (v NullableV1Hash) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1Hash) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


