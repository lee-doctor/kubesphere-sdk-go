/*
KS API

KubeSphere OpenAPI

API version: v4.1.1
Contact: support@kubesphere.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V1ServiceAccountTokenProjection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ServiceAccountTokenProjection{}

// V1ServiceAccountTokenProjection ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).
type V1ServiceAccountTokenProjection struct {
	// audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
	Audience *string `json:"audience,omitempty"`
	// expirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
	ExpirationSeconds *int64 `json:"expirationSeconds,omitempty"`
	// path is the path relative to the mount point of the file to project the token into.
	Path string `json:"path"`
}

type _V1ServiceAccountTokenProjection V1ServiceAccountTokenProjection

// NewV1ServiceAccountTokenProjection instantiates a new V1ServiceAccountTokenProjection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ServiceAccountTokenProjection(path string) *V1ServiceAccountTokenProjection {
	this := V1ServiceAccountTokenProjection{}
	this.Path = path
	return &this
}

// NewV1ServiceAccountTokenProjectionWithDefaults instantiates a new V1ServiceAccountTokenProjection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ServiceAccountTokenProjectionWithDefaults() *V1ServiceAccountTokenProjection {
	this := V1ServiceAccountTokenProjection{}
	return &this
}

// GetAudience returns the Audience field value if set, zero value otherwise.
func (o *V1ServiceAccountTokenProjection) GetAudience() string {
	if o == nil || IsNil(o.Audience) {
		var ret string
		return ret
	}
	return *o.Audience
}

// GetAudienceOk returns a tuple with the Audience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ServiceAccountTokenProjection) GetAudienceOk() (*string, bool) {
	if o == nil || IsNil(o.Audience) {
		return nil, false
	}
	return o.Audience, true
}

// HasAudience returns a boolean if a field has been set.
func (o *V1ServiceAccountTokenProjection) HasAudience() bool {
	if o != nil && !IsNil(o.Audience) {
		return true
	}

	return false
}

// SetAudience gets a reference to the given string and assigns it to the Audience field.
func (o *V1ServiceAccountTokenProjection) SetAudience(v string) {
	o.Audience = &v
}

// GetExpirationSeconds returns the ExpirationSeconds field value if set, zero value otherwise.
func (o *V1ServiceAccountTokenProjection) GetExpirationSeconds() int64 {
	if o == nil || IsNil(o.ExpirationSeconds) {
		var ret int64
		return ret
	}
	return *o.ExpirationSeconds
}

// GetExpirationSecondsOk returns a tuple with the ExpirationSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ServiceAccountTokenProjection) GetExpirationSecondsOk() (*int64, bool) {
	if o == nil || IsNil(o.ExpirationSeconds) {
		return nil, false
	}
	return o.ExpirationSeconds, true
}

// HasExpirationSeconds returns a boolean if a field has been set.
func (o *V1ServiceAccountTokenProjection) HasExpirationSeconds() bool {
	if o != nil && !IsNil(o.ExpirationSeconds) {
		return true
	}

	return false
}

// SetExpirationSeconds gets a reference to the given int64 and assigns it to the ExpirationSeconds field.
func (o *V1ServiceAccountTokenProjection) SetExpirationSeconds(v int64) {
	o.ExpirationSeconds = &v
}

// GetPath returns the Path field value
func (o *V1ServiceAccountTokenProjection) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *V1ServiceAccountTokenProjection) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *V1ServiceAccountTokenProjection) SetPath(v string) {
	o.Path = v
}

func (o V1ServiceAccountTokenProjection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ServiceAccountTokenProjection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Audience) {
		toSerialize["audience"] = o.Audience
	}
	if !IsNil(o.ExpirationSeconds) {
		toSerialize["expirationSeconds"] = o.ExpirationSeconds
	}
	toSerialize["path"] = o.Path
	return toSerialize, nil
}

func (o *V1ServiceAccountTokenProjection) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"path",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV1ServiceAccountTokenProjection := _V1ServiceAccountTokenProjection{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV1ServiceAccountTokenProjection)

	if err != nil {
		return err
	}

	*o = V1ServiceAccountTokenProjection(varV1ServiceAccountTokenProjection)

	return err
}

type NullableV1ServiceAccountTokenProjection struct {
	value *V1ServiceAccountTokenProjection
	isSet bool
}

func (v NullableV1ServiceAccountTokenProjection) Get() *V1ServiceAccountTokenProjection {
	return v.value
}

func (v *NullableV1ServiceAccountTokenProjection) Set(val *V1ServiceAccountTokenProjection) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ServiceAccountTokenProjection) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ServiceAccountTokenProjection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ServiceAccountTokenProjection(val *V1ServiceAccountTokenProjection) *NullableV1ServiceAccountTokenProjection {
	return &NullableV1ServiceAccountTokenProjection{value: val, isSet: true}
}

func (v NullableV1ServiceAccountTokenProjection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ServiceAccountTokenProjection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


