/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DevopsPipelineRunList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DevopsPipelineRunList{}

// DevopsPipelineRunList struct for DevopsPipelineRunList
type DevopsPipelineRunList struct {
	Items []DevopsPipelineRun `json:"items"`
	TotalItems int32 `json:"totalItems"`
}

type _DevopsPipelineRunList DevopsPipelineRunList

// NewDevopsPipelineRunList instantiates a new DevopsPipelineRunList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDevopsPipelineRunList(items []DevopsPipelineRun, totalItems int32) *DevopsPipelineRunList {
	this := DevopsPipelineRunList{}
	this.Items = items
	this.TotalItems = totalItems
	return &this
}

// NewDevopsPipelineRunListWithDefaults instantiates a new DevopsPipelineRunList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDevopsPipelineRunListWithDefaults() *DevopsPipelineRunList {
	this := DevopsPipelineRunList{}
	return &this
}

// GetItems returns the Items field value
func (o *DevopsPipelineRunList) GetItems() []DevopsPipelineRun {
	if o == nil {
		var ret []DevopsPipelineRun
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *DevopsPipelineRunList) GetItemsOk() ([]DevopsPipelineRun, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *DevopsPipelineRunList) SetItems(v []DevopsPipelineRun) {
	o.Items = v
}

// GetTotalItems returns the TotalItems field value
func (o *DevopsPipelineRunList) GetTotalItems() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalItems
}

// GetTotalItemsOk returns a tuple with the TotalItems field value
// and a boolean to check if the value has been set.
func (o *DevopsPipelineRunList) GetTotalItemsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalItems, true
}

// SetTotalItems sets field value
func (o *DevopsPipelineRunList) SetTotalItems(v int32) {
	o.TotalItems = v
}

func (o DevopsPipelineRunList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DevopsPipelineRunList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["items"] = o.Items
	toSerialize["totalItems"] = o.TotalItems
	return toSerialize, nil
}

func (o *DevopsPipelineRunList) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"items",
		"totalItems",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDevopsPipelineRunList := _DevopsPipelineRunList{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDevopsPipelineRunList)

	if err != nil {
		return err
	}

	*o = DevopsPipelineRunList(varDevopsPipelineRunList)

	return err
}

type NullableDevopsPipelineRunList struct {
	value *DevopsPipelineRunList
	isSet bool
}

func (v NullableDevopsPipelineRunList) Get() *DevopsPipelineRunList {
	return v.value
}

func (v *NullableDevopsPipelineRunList) Set(val *DevopsPipelineRunList) {
	v.value = val
	v.isSet = true
}

func (v NullableDevopsPipelineRunList) IsSet() bool {
	return v.isSet
}

func (v *NullableDevopsPipelineRunList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDevopsPipelineRunList(val *DevopsPipelineRunList) *NullableDevopsPipelineRunList {
	return &NullableDevopsPipelineRunList{value: val, isSet: true}
}

func (v NullableDevopsPipelineRunList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDevopsPipelineRunList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


