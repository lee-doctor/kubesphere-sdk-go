/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OpenpitrixCreateAppVersionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenpitrixCreateAppVersionRequest{}

// OpenpitrixCreateAppVersionRequest struct for OpenpitrixCreateAppVersionRequest
type OpenpitrixCreateAppVersionRequest struct {
	AppId *string `json:"app_id,omitempty"`
	Description *string `json:"description,omitempty"`
	Name *string `json:"name,omitempty"`
	Package *string `json:"package,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewOpenpitrixCreateAppVersionRequest instantiates a new OpenpitrixCreateAppVersionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenpitrixCreateAppVersionRequest() *OpenpitrixCreateAppVersionRequest {
	this := OpenpitrixCreateAppVersionRequest{}
	return &this
}

// NewOpenpitrixCreateAppVersionRequestWithDefaults instantiates a new OpenpitrixCreateAppVersionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenpitrixCreateAppVersionRequestWithDefaults() *OpenpitrixCreateAppVersionRequest {
	this := OpenpitrixCreateAppVersionRequest{}
	return &this
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *OpenpitrixCreateAppVersionRequest) GetAppId() string {
	if o == nil || IsNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixCreateAppVersionRequest) GetAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *OpenpitrixCreateAppVersionRequest) HasAppId() bool {
	if o != nil && !IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *OpenpitrixCreateAppVersionRequest) SetAppId(v string) {
	o.AppId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OpenpitrixCreateAppVersionRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixCreateAppVersionRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OpenpitrixCreateAppVersionRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OpenpitrixCreateAppVersionRequest) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OpenpitrixCreateAppVersionRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixCreateAppVersionRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OpenpitrixCreateAppVersionRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OpenpitrixCreateAppVersionRequest) SetName(v string) {
	o.Name = &v
}

// GetPackage returns the Package field value if set, zero value otherwise.
func (o *OpenpitrixCreateAppVersionRequest) GetPackage() string {
	if o == nil || IsNil(o.Package) {
		var ret string
		return ret
	}
	return *o.Package
}

// GetPackageOk returns a tuple with the Package field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixCreateAppVersionRequest) GetPackageOk() (*string, bool) {
	if o == nil || IsNil(o.Package) {
		return nil, false
	}
	return o.Package, true
}

// HasPackage returns a boolean if a field has been set.
func (o *OpenpitrixCreateAppVersionRequest) HasPackage() bool {
	if o != nil && !IsNil(o.Package) {
		return true
	}

	return false
}

// SetPackage gets a reference to the given string and assigns it to the Package field.
func (o *OpenpitrixCreateAppVersionRequest) SetPackage(v string) {
	o.Package = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *OpenpitrixCreateAppVersionRequest) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixCreateAppVersionRequest) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *OpenpitrixCreateAppVersionRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *OpenpitrixCreateAppVersionRequest) SetType(v string) {
	o.Type = &v
}

func (o OpenpitrixCreateAppVersionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenpitrixCreateAppVersionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppId) {
		toSerialize["app_id"] = o.AppId
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Package) {
		toSerialize["package"] = o.Package
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableOpenpitrixCreateAppVersionRequest struct {
	value *OpenpitrixCreateAppVersionRequest
	isSet bool
}

func (v NullableOpenpitrixCreateAppVersionRequest) Get() *OpenpitrixCreateAppVersionRequest {
	return v.value
}

func (v *NullableOpenpitrixCreateAppVersionRequest) Set(val *OpenpitrixCreateAppVersionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenpitrixCreateAppVersionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenpitrixCreateAppVersionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenpitrixCreateAppVersionRequest(val *OpenpitrixCreateAppVersionRequest) *NullableOpenpitrixCreateAppVersionRequest {
	return &NullableOpenpitrixCreateAppVersionRequest{value: val, isSet: true}
}

func (v NullableOpenpitrixCreateAppVersionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenpitrixCreateAppVersionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


