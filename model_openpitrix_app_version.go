/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OpenpitrixAppVersion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenpitrixAppVersion{}

// OpenpitrixAppVersion struct for OpenpitrixAppVersion
type OpenpitrixAppVersion struct {
	Active *bool `json:"active,omitempty"`
	AppId *string `json:"app_id,omitempty"`
	ClusterTotal *int32 `json:"cluster_total,omitempty"`
	CreateTime *string `json:"create_time,omitempty"`
	Description *string `json:"description,omitempty"`
	Home *string `json:"home,omitempty"`
	Icon *string `json:"icon,omitempty"`
	Keywords *string `json:"keywords,omitempty"`
	Maintainers *string `json:"maintainers,omitempty"`
	Message *string `json:"message,omitempty"`
	Name *string `json:"name,omitempty"`
	Owner *string `json:"owner,omitempty"`
	PackageName *string `json:"package_name,omitempty"`
	Readme *string `json:"readme,omitempty"`
	ReviewId *string `json:"review_id,omitempty"`
	Screenshots *string `json:"screenshots,omitempty"`
	Sequence *int64 `json:"sequence,omitempty"`
	Sources *string `json:"sources,omitempty"`
	Status *string `json:"status,omitempty"`
	StatusTime *string `json:"status_time,omitempty"`
	Type *string `json:"type,omitempty"`
	UpdateTime *string `json:"update_time,omitempty"`
	VersionId *string `json:"version_id,omitempty"`
}

// NewOpenpitrixAppVersion instantiates a new OpenpitrixAppVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenpitrixAppVersion() *OpenpitrixAppVersion {
	this := OpenpitrixAppVersion{}
	return &this
}

// NewOpenpitrixAppVersionWithDefaults instantiates a new OpenpitrixAppVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenpitrixAppVersionWithDefaults() *OpenpitrixAppVersion {
	this := OpenpitrixAppVersion{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *OpenpitrixAppVersion) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersion) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *OpenpitrixAppVersion) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *OpenpitrixAppVersion) SetActive(v bool) {
	o.Active = &v
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *OpenpitrixAppVersion) GetAppId() string {
	if o == nil || IsNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersion) GetAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *OpenpitrixAppVersion) HasAppId() bool {
	if o != nil && !IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *OpenpitrixAppVersion) SetAppId(v string) {
	o.AppId = &v
}

// GetClusterTotal returns the ClusterTotal field value if set, zero value otherwise.
func (o *OpenpitrixAppVersion) GetClusterTotal() int32 {
	if o == nil || IsNil(o.ClusterTotal) {
		var ret int32
		return ret
	}
	return *o.ClusterTotal
}

// GetClusterTotalOk returns a tuple with the ClusterTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersion) GetClusterTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.ClusterTotal) {
		return nil, false
	}
	return o.ClusterTotal, true
}

// HasClusterTotal returns a boolean if a field has been set.
func (o *OpenpitrixAppVersion) HasClusterTotal() bool {
	if o != nil && !IsNil(o.ClusterTotal) {
		return true
	}

	return false
}

// SetClusterTotal gets a reference to the given int32 and assigns it to the ClusterTotal field.
func (o *OpenpitrixAppVersion) SetClusterTotal(v int32) {
	o.ClusterTotal = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *OpenpitrixAppVersion) GetCreateTime() string {
	if o == nil || IsNil(o.CreateTime) {
		var ret string
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersion) GetCreateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *OpenpitrixAppVersion) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given string and assigns it to the CreateTime field.
func (o *OpenpitrixAppVersion) SetCreateTime(v string) {
	o.CreateTime = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OpenpitrixAppVersion) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersion) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OpenpitrixAppVersion) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OpenpitrixAppVersion) SetDescription(v string) {
	o.Description = &v
}

// GetHome returns the Home field value if set, zero value otherwise.
func (o *OpenpitrixAppVersion) GetHome() string {
	if o == nil || IsNil(o.Home) {
		var ret string
		return ret
	}
	return *o.Home
}

// GetHomeOk returns a tuple with the Home field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersion) GetHomeOk() (*string, bool) {
	if o == nil || IsNil(o.Home) {
		return nil, false
	}
	return o.Home, true
}

// HasHome returns a boolean if a field has been set.
func (o *OpenpitrixAppVersion) HasHome() bool {
	if o != nil && !IsNil(o.Home) {
		return true
	}

	return false
}

// SetHome gets a reference to the given string and assigns it to the Home field.
func (o *OpenpitrixAppVersion) SetHome(v string) {
	o.Home = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *OpenpitrixAppVersion) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersion) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *OpenpitrixAppVersion) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *OpenpitrixAppVersion) SetIcon(v string) {
	o.Icon = &v
}

// GetKeywords returns the Keywords field value if set, zero value otherwise.
func (o *OpenpitrixAppVersion) GetKeywords() string {
	if o == nil || IsNil(o.Keywords) {
		var ret string
		return ret
	}
	return *o.Keywords
}

// GetKeywordsOk returns a tuple with the Keywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersion) GetKeywordsOk() (*string, bool) {
	if o == nil || IsNil(o.Keywords) {
		return nil, false
	}
	return o.Keywords, true
}

// HasKeywords returns a boolean if a field has been set.
func (o *OpenpitrixAppVersion) HasKeywords() bool {
	if o != nil && !IsNil(o.Keywords) {
		return true
	}

	return false
}

// SetKeywords gets a reference to the given string and assigns it to the Keywords field.
func (o *OpenpitrixAppVersion) SetKeywords(v string) {
	o.Keywords = &v
}

// GetMaintainers returns the Maintainers field value if set, zero value otherwise.
func (o *OpenpitrixAppVersion) GetMaintainers() string {
	if o == nil || IsNil(o.Maintainers) {
		var ret string
		return ret
	}
	return *o.Maintainers
}

// GetMaintainersOk returns a tuple with the Maintainers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersion) GetMaintainersOk() (*string, bool) {
	if o == nil || IsNil(o.Maintainers) {
		return nil, false
	}
	return o.Maintainers, true
}

// HasMaintainers returns a boolean if a field has been set.
func (o *OpenpitrixAppVersion) HasMaintainers() bool {
	if o != nil && !IsNil(o.Maintainers) {
		return true
	}

	return false
}

// SetMaintainers gets a reference to the given string and assigns it to the Maintainers field.
func (o *OpenpitrixAppVersion) SetMaintainers(v string) {
	o.Maintainers = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *OpenpitrixAppVersion) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersion) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *OpenpitrixAppVersion) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *OpenpitrixAppVersion) SetMessage(v string) {
	o.Message = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OpenpitrixAppVersion) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersion) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OpenpitrixAppVersion) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OpenpitrixAppVersion) SetName(v string) {
	o.Name = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *OpenpitrixAppVersion) GetOwner() string {
	if o == nil || IsNil(o.Owner) {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersion) GetOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *OpenpitrixAppVersion) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *OpenpitrixAppVersion) SetOwner(v string) {
	o.Owner = &v
}

// GetPackageName returns the PackageName field value if set, zero value otherwise.
func (o *OpenpitrixAppVersion) GetPackageName() string {
	if o == nil || IsNil(o.PackageName) {
		var ret string
		return ret
	}
	return *o.PackageName
}

// GetPackageNameOk returns a tuple with the PackageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersion) GetPackageNameOk() (*string, bool) {
	if o == nil || IsNil(o.PackageName) {
		return nil, false
	}
	return o.PackageName, true
}

// HasPackageName returns a boolean if a field has been set.
func (o *OpenpitrixAppVersion) HasPackageName() bool {
	if o != nil && !IsNil(o.PackageName) {
		return true
	}

	return false
}

// SetPackageName gets a reference to the given string and assigns it to the PackageName field.
func (o *OpenpitrixAppVersion) SetPackageName(v string) {
	o.PackageName = &v
}

// GetReadme returns the Readme field value if set, zero value otherwise.
func (o *OpenpitrixAppVersion) GetReadme() string {
	if o == nil || IsNil(o.Readme) {
		var ret string
		return ret
	}
	return *o.Readme
}

// GetReadmeOk returns a tuple with the Readme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersion) GetReadmeOk() (*string, bool) {
	if o == nil || IsNil(o.Readme) {
		return nil, false
	}
	return o.Readme, true
}

// HasReadme returns a boolean if a field has been set.
func (o *OpenpitrixAppVersion) HasReadme() bool {
	if o != nil && !IsNil(o.Readme) {
		return true
	}

	return false
}

// SetReadme gets a reference to the given string and assigns it to the Readme field.
func (o *OpenpitrixAppVersion) SetReadme(v string) {
	o.Readme = &v
}

// GetReviewId returns the ReviewId field value if set, zero value otherwise.
func (o *OpenpitrixAppVersion) GetReviewId() string {
	if o == nil || IsNil(o.ReviewId) {
		var ret string
		return ret
	}
	return *o.ReviewId
}

// GetReviewIdOk returns a tuple with the ReviewId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersion) GetReviewIdOk() (*string, bool) {
	if o == nil || IsNil(o.ReviewId) {
		return nil, false
	}
	return o.ReviewId, true
}

// HasReviewId returns a boolean if a field has been set.
func (o *OpenpitrixAppVersion) HasReviewId() bool {
	if o != nil && !IsNil(o.ReviewId) {
		return true
	}

	return false
}

// SetReviewId gets a reference to the given string and assigns it to the ReviewId field.
func (o *OpenpitrixAppVersion) SetReviewId(v string) {
	o.ReviewId = &v
}

// GetScreenshots returns the Screenshots field value if set, zero value otherwise.
func (o *OpenpitrixAppVersion) GetScreenshots() string {
	if o == nil || IsNil(o.Screenshots) {
		var ret string
		return ret
	}
	return *o.Screenshots
}

// GetScreenshotsOk returns a tuple with the Screenshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersion) GetScreenshotsOk() (*string, bool) {
	if o == nil || IsNil(o.Screenshots) {
		return nil, false
	}
	return o.Screenshots, true
}

// HasScreenshots returns a boolean if a field has been set.
func (o *OpenpitrixAppVersion) HasScreenshots() bool {
	if o != nil && !IsNil(o.Screenshots) {
		return true
	}

	return false
}

// SetScreenshots gets a reference to the given string and assigns it to the Screenshots field.
func (o *OpenpitrixAppVersion) SetScreenshots(v string) {
	o.Screenshots = &v
}

// GetSequence returns the Sequence field value if set, zero value otherwise.
func (o *OpenpitrixAppVersion) GetSequence() int64 {
	if o == nil || IsNil(o.Sequence) {
		var ret int64
		return ret
	}
	return *o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersion) GetSequenceOk() (*int64, bool) {
	if o == nil || IsNil(o.Sequence) {
		return nil, false
	}
	return o.Sequence, true
}

// HasSequence returns a boolean if a field has been set.
func (o *OpenpitrixAppVersion) HasSequence() bool {
	if o != nil && !IsNil(o.Sequence) {
		return true
	}

	return false
}

// SetSequence gets a reference to the given int64 and assigns it to the Sequence field.
func (o *OpenpitrixAppVersion) SetSequence(v int64) {
	o.Sequence = &v
}

// GetSources returns the Sources field value if set, zero value otherwise.
func (o *OpenpitrixAppVersion) GetSources() string {
	if o == nil || IsNil(o.Sources) {
		var ret string
		return ret
	}
	return *o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersion) GetSourcesOk() (*string, bool) {
	if o == nil || IsNil(o.Sources) {
		return nil, false
	}
	return o.Sources, true
}

// HasSources returns a boolean if a field has been set.
func (o *OpenpitrixAppVersion) HasSources() bool {
	if o != nil && !IsNil(o.Sources) {
		return true
	}

	return false
}

// SetSources gets a reference to the given string and assigns it to the Sources field.
func (o *OpenpitrixAppVersion) SetSources(v string) {
	o.Sources = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OpenpitrixAppVersion) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersion) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OpenpitrixAppVersion) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OpenpitrixAppVersion) SetStatus(v string) {
	o.Status = &v
}

// GetStatusTime returns the StatusTime field value if set, zero value otherwise.
func (o *OpenpitrixAppVersion) GetStatusTime() string {
	if o == nil || IsNil(o.StatusTime) {
		var ret string
		return ret
	}
	return *o.StatusTime
}

// GetStatusTimeOk returns a tuple with the StatusTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersion) GetStatusTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StatusTime) {
		return nil, false
	}
	return o.StatusTime, true
}

// HasStatusTime returns a boolean if a field has been set.
func (o *OpenpitrixAppVersion) HasStatusTime() bool {
	if o != nil && !IsNil(o.StatusTime) {
		return true
	}

	return false
}

// SetStatusTime gets a reference to the given string and assigns it to the StatusTime field.
func (o *OpenpitrixAppVersion) SetStatusTime(v string) {
	o.StatusTime = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *OpenpitrixAppVersion) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersion) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *OpenpitrixAppVersion) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *OpenpitrixAppVersion) SetType(v string) {
	o.Type = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *OpenpitrixAppVersion) GetUpdateTime() string {
	if o == nil || IsNil(o.UpdateTime) {
		var ret string
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersion) GetUpdateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *OpenpitrixAppVersion) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given string and assigns it to the UpdateTime field.
func (o *OpenpitrixAppVersion) SetUpdateTime(v string) {
	o.UpdateTime = &v
}

// GetVersionId returns the VersionId field value if set, zero value otherwise.
func (o *OpenpitrixAppVersion) GetVersionId() string {
	if o == nil || IsNil(o.VersionId) {
		var ret string
		return ret
	}
	return *o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersion) GetVersionIdOk() (*string, bool) {
	if o == nil || IsNil(o.VersionId) {
		return nil, false
	}
	return o.VersionId, true
}

// HasVersionId returns a boolean if a field has been set.
func (o *OpenpitrixAppVersion) HasVersionId() bool {
	if o != nil && !IsNil(o.VersionId) {
		return true
	}

	return false
}

// SetVersionId gets a reference to the given string and assigns it to the VersionId field.
func (o *OpenpitrixAppVersion) SetVersionId(v string) {
	o.VersionId = &v
}

func (o OpenpitrixAppVersion) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenpitrixAppVersion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.AppId) {
		toSerialize["app_id"] = o.AppId
	}
	if !IsNil(o.ClusterTotal) {
		toSerialize["cluster_total"] = o.ClusterTotal
	}
	if !IsNil(o.CreateTime) {
		toSerialize["create_time"] = o.CreateTime
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Home) {
		toSerialize["home"] = o.Home
	}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if !IsNil(o.Keywords) {
		toSerialize["keywords"] = o.Keywords
	}
	if !IsNil(o.Maintainers) {
		toSerialize["maintainers"] = o.Maintainers
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.PackageName) {
		toSerialize["package_name"] = o.PackageName
	}
	if !IsNil(o.Readme) {
		toSerialize["readme"] = o.Readme
	}
	if !IsNil(o.ReviewId) {
		toSerialize["review_id"] = o.ReviewId
	}
	if !IsNil(o.Screenshots) {
		toSerialize["screenshots"] = o.Screenshots
	}
	if !IsNil(o.Sequence) {
		toSerialize["sequence"] = o.Sequence
	}
	if !IsNil(o.Sources) {
		toSerialize["sources"] = o.Sources
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusTime) {
		toSerialize["status_time"] = o.StatusTime
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["update_time"] = o.UpdateTime
	}
	if !IsNil(o.VersionId) {
		toSerialize["version_id"] = o.VersionId
	}
	return toSerialize, nil
}

type NullableOpenpitrixAppVersion struct {
	value *OpenpitrixAppVersion
	isSet bool
}

func (v NullableOpenpitrixAppVersion) Get() *OpenpitrixAppVersion {
	return v.value
}

func (v *NullableOpenpitrixAppVersion) Set(val *OpenpitrixAppVersion) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenpitrixAppVersion) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenpitrixAppVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenpitrixAppVersion(val *OpenpitrixAppVersion) *NullableOpenpitrixAppVersion {
	return &NullableOpenpitrixAppVersion{value: val, isSet: true}
}

func (v NullableOpenpitrixAppVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenpitrixAppVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


