/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1alpha2GroupBinding type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1alpha2GroupBinding{}

// V1alpha2GroupBinding struct for V1alpha2GroupBinding
type V1alpha2GroupBinding struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `json:"apiVersion,omitempty"`
	GroupRef *V1alpha2GroupRef `json:"groupRef,omitempty"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `json:"kind,omitempty"`
	Metadata *V1ObjectMeta `json:"metadata,omitempty"`
	Users []string `json:"users,omitempty"`
}

// NewV1alpha2GroupBinding instantiates a new V1alpha2GroupBinding object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha2GroupBinding() *V1alpha2GroupBinding {
	this := V1alpha2GroupBinding{}
	return &this
}

// NewV1alpha2GroupBindingWithDefaults instantiates a new V1alpha2GroupBinding object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha2GroupBindingWithDefaults() *V1alpha2GroupBinding {
	this := V1alpha2GroupBinding{}
	return &this
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *V1alpha2GroupBinding) GetApiVersion() string {
	if o == nil || IsNil(o.ApiVersion) {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha2GroupBinding) GetApiVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ApiVersion) {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *V1alpha2GroupBinding) HasApiVersion() bool {
	if o != nil && !IsNil(o.ApiVersion) {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *V1alpha2GroupBinding) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetGroupRef returns the GroupRef field value if set, zero value otherwise.
func (o *V1alpha2GroupBinding) GetGroupRef() V1alpha2GroupRef {
	if o == nil || IsNil(o.GroupRef) {
		var ret V1alpha2GroupRef
		return ret
	}
	return *o.GroupRef
}

// GetGroupRefOk returns a tuple with the GroupRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha2GroupBinding) GetGroupRefOk() (*V1alpha2GroupRef, bool) {
	if o == nil || IsNil(o.GroupRef) {
		return nil, false
	}
	return o.GroupRef, true
}

// HasGroupRef returns a boolean if a field has been set.
func (o *V1alpha2GroupBinding) HasGroupRef() bool {
	if o != nil && !IsNil(o.GroupRef) {
		return true
	}

	return false
}

// SetGroupRef gets a reference to the given V1alpha2GroupRef and assigns it to the GroupRef field.
func (o *V1alpha2GroupBinding) SetGroupRef(v V1alpha2GroupRef) {
	o.GroupRef = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *V1alpha2GroupBinding) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha2GroupBinding) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *V1alpha2GroupBinding) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *V1alpha2GroupBinding) SetKind(v string) {
	o.Kind = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *V1alpha2GroupBinding) GetMetadata() V1ObjectMeta {
	if o == nil || IsNil(o.Metadata) {
		var ret V1ObjectMeta
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha2GroupBinding) GetMetadataOk() (*V1ObjectMeta, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *V1alpha2GroupBinding) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given V1ObjectMeta and assigns it to the Metadata field.
func (o *V1alpha2GroupBinding) SetMetadata(v V1ObjectMeta) {
	o.Metadata = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *V1alpha2GroupBinding) GetUsers() []string {
	if o == nil || IsNil(o.Users) {
		var ret []string
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha2GroupBinding) GetUsersOk() ([]string, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *V1alpha2GroupBinding) HasUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []string and assigns it to the Users field.
func (o *V1alpha2GroupBinding) SetUsers(v []string) {
	o.Users = v
}

func (o V1alpha2GroupBinding) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1alpha2GroupBinding) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiVersion) {
		toSerialize["apiVersion"] = o.ApiVersion
	}
	if !IsNil(o.GroupRef) {
		toSerialize["groupRef"] = o.GroupRef
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	return toSerialize, nil
}

type NullableV1alpha2GroupBinding struct {
	value *V1alpha2GroupBinding
	isSet bool
}

func (v NullableV1alpha2GroupBinding) Get() *V1alpha2GroupBinding {
	return v.value
}

func (v *NullableV1alpha2GroupBinding) Set(val *V1alpha2GroupBinding) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha2GroupBinding) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha2GroupBinding) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha2GroupBinding(val *V1alpha2GroupBinding) *NullableV1alpha2GroupBinding {
	return &NullableV1alpha2GroupBinding{value: val, isSet: true}
}

func (v NullableV1alpha2GroupBinding) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha2GroupBinding) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


