/*
KS API

KubeSphere OpenAPI

API version: v4.1.1
Contact: support@kubesphere.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1EphemeralVolumeSource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1EphemeralVolumeSource{}

// V1EphemeralVolumeSource Represents an ephemeral volume that is handled by a normal storage driver.
type V1EphemeralVolumeSource struct {
	VolumeClaimTemplate *V1PersistentVolumeClaimTemplate `json:"volumeClaimTemplate,omitempty"`
}

// NewV1EphemeralVolumeSource instantiates a new V1EphemeralVolumeSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1EphemeralVolumeSource() *V1EphemeralVolumeSource {
	this := V1EphemeralVolumeSource{}
	return &this
}

// NewV1EphemeralVolumeSourceWithDefaults instantiates a new V1EphemeralVolumeSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1EphemeralVolumeSourceWithDefaults() *V1EphemeralVolumeSource {
	this := V1EphemeralVolumeSource{}
	return &this
}

// GetVolumeClaimTemplate returns the VolumeClaimTemplate field value if set, zero value otherwise.
func (o *V1EphemeralVolumeSource) GetVolumeClaimTemplate() V1PersistentVolumeClaimTemplate {
	if o == nil || IsNil(o.VolumeClaimTemplate) {
		var ret V1PersistentVolumeClaimTemplate
		return ret
	}
	return *o.VolumeClaimTemplate
}

// GetVolumeClaimTemplateOk returns a tuple with the VolumeClaimTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EphemeralVolumeSource) GetVolumeClaimTemplateOk() (*V1PersistentVolumeClaimTemplate, bool) {
	if o == nil || IsNil(o.VolumeClaimTemplate) {
		return nil, false
	}
	return o.VolumeClaimTemplate, true
}

// HasVolumeClaimTemplate returns a boolean if a field has been set.
func (o *V1EphemeralVolumeSource) HasVolumeClaimTemplate() bool {
	if o != nil && !IsNil(o.VolumeClaimTemplate) {
		return true
	}

	return false
}

// SetVolumeClaimTemplate gets a reference to the given V1PersistentVolumeClaimTemplate and assigns it to the VolumeClaimTemplate field.
func (o *V1EphemeralVolumeSource) SetVolumeClaimTemplate(v V1PersistentVolumeClaimTemplate) {
	o.VolumeClaimTemplate = &v
}

func (o V1EphemeralVolumeSource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1EphemeralVolumeSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VolumeClaimTemplate) {
		toSerialize["volumeClaimTemplate"] = o.VolumeClaimTemplate
	}
	return toSerialize, nil
}

type NullableV1EphemeralVolumeSource struct {
	value *V1EphemeralVolumeSource
	isSet bool
}

func (v NullableV1EphemeralVolumeSource) Get() *V1EphemeralVolumeSource {
	return v.value
}

func (v *NullableV1EphemeralVolumeSource) Set(val *V1EphemeralVolumeSource) {
	v.value = val
	v.isSet = true
}

func (v NullableV1EphemeralVolumeSource) IsSet() bool {
	return v.isSet
}

func (v *NullableV1EphemeralVolumeSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1EphemeralVolumeSource(val *V1EphemeralVolumeSource) *NullableV1EphemeralVolumeSource {
	return &NullableV1EphemeralVolumeSource{value: val, isSet: true}
}

func (v NullableV1EphemeralVolumeSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1EphemeralVolumeSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


