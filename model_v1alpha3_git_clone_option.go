/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1alpha3GitCloneOption type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1alpha3GitCloneOption{}

// V1alpha3GitCloneOption struct for V1alpha3GitCloneOption
type V1alpha3GitCloneOption struct {
	// git clone depth
	Depth *int32 `json:"depth,omitempty"`
	// Whether to use git shallow clone
	Shallow *bool `json:"shallow,omitempty"`
	// git clone timeout mins
	Timeout *int32 `json:"timeout,omitempty"`
}

// NewV1alpha3GitCloneOption instantiates a new V1alpha3GitCloneOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha3GitCloneOption() *V1alpha3GitCloneOption {
	this := V1alpha3GitCloneOption{}
	return &this
}

// NewV1alpha3GitCloneOptionWithDefaults instantiates a new V1alpha3GitCloneOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha3GitCloneOptionWithDefaults() *V1alpha3GitCloneOption {
	this := V1alpha3GitCloneOption{}
	return &this
}

// GetDepth returns the Depth field value if set, zero value otherwise.
func (o *V1alpha3GitCloneOption) GetDepth() int32 {
	if o == nil || IsNil(o.Depth) {
		var ret int32
		return ret
	}
	return *o.Depth
}

// GetDepthOk returns a tuple with the Depth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha3GitCloneOption) GetDepthOk() (*int32, bool) {
	if o == nil || IsNil(o.Depth) {
		return nil, false
	}
	return o.Depth, true
}

// HasDepth returns a boolean if a field has been set.
func (o *V1alpha3GitCloneOption) HasDepth() bool {
	if o != nil && !IsNil(o.Depth) {
		return true
	}

	return false
}

// SetDepth gets a reference to the given int32 and assigns it to the Depth field.
func (o *V1alpha3GitCloneOption) SetDepth(v int32) {
	o.Depth = &v
}

// GetShallow returns the Shallow field value if set, zero value otherwise.
func (o *V1alpha3GitCloneOption) GetShallow() bool {
	if o == nil || IsNil(o.Shallow) {
		var ret bool
		return ret
	}
	return *o.Shallow
}

// GetShallowOk returns a tuple with the Shallow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha3GitCloneOption) GetShallowOk() (*bool, bool) {
	if o == nil || IsNil(o.Shallow) {
		return nil, false
	}
	return o.Shallow, true
}

// HasShallow returns a boolean if a field has been set.
func (o *V1alpha3GitCloneOption) HasShallow() bool {
	if o != nil && !IsNil(o.Shallow) {
		return true
	}

	return false
}

// SetShallow gets a reference to the given bool and assigns it to the Shallow field.
func (o *V1alpha3GitCloneOption) SetShallow(v bool) {
	o.Shallow = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *V1alpha3GitCloneOption) GetTimeout() int32 {
	if o == nil || IsNil(o.Timeout) {
		var ret int32
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha3GitCloneOption) GetTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *V1alpha3GitCloneOption) HasTimeout() bool {
	if o != nil && !IsNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int32 and assigns it to the Timeout field.
func (o *V1alpha3GitCloneOption) SetTimeout(v int32) {
	o.Timeout = &v
}

func (o V1alpha3GitCloneOption) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1alpha3GitCloneOption) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Depth) {
		toSerialize["depth"] = o.Depth
	}
	if !IsNil(o.Shallow) {
		toSerialize["shallow"] = o.Shallow
	}
	if !IsNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}
	return toSerialize, nil
}

type NullableV1alpha3GitCloneOption struct {
	value *V1alpha3GitCloneOption
	isSet bool
}

func (v NullableV1alpha3GitCloneOption) Get() *V1alpha3GitCloneOption {
	return v.value
}

func (v *NullableV1alpha3GitCloneOption) Set(val *V1alpha3GitCloneOption) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha3GitCloneOption) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha3GitCloneOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha3GitCloneOption(val *V1alpha3GitCloneOption) *NullableV1alpha3GitCloneOption {
	return &NullableV1alpha3GitCloneOption{value: val, isSet: true}
}

func (v NullableV1alpha3GitCloneOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha3GitCloneOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


