/*
KS API

KubeSphere OpenAPI

API version: v4.1.1
Contact: support@kubesphere.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1beta1SubjectAccessReviewSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1beta1SubjectAccessReviewSpec{}

// V1beta1SubjectAccessReviewSpec struct for V1beta1SubjectAccessReviewSpec
type V1beta1SubjectAccessReviewSpec struct {
	Extra *map[string][]string `json:"extra,omitempty"`
	Groups []string `json:"groups,omitempty"`
	NonResourceAttributes *V1beta1NonResourceAttributes `json:"nonResourceAttributes,omitempty"`
	ResourceAttributes *V1beta1ResourceAttributes `json:"resourceAttributes,omitempty"`
	Uid *string `json:"uid,omitempty"`
	User *string `json:"user,omitempty"`
}

// NewV1beta1SubjectAccessReviewSpec instantiates a new V1beta1SubjectAccessReviewSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1beta1SubjectAccessReviewSpec() *V1beta1SubjectAccessReviewSpec {
	this := V1beta1SubjectAccessReviewSpec{}
	return &this
}

// NewV1beta1SubjectAccessReviewSpecWithDefaults instantiates a new V1beta1SubjectAccessReviewSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1beta1SubjectAccessReviewSpecWithDefaults() *V1beta1SubjectAccessReviewSpec {
	this := V1beta1SubjectAccessReviewSpec{}
	return &this
}

// GetExtra returns the Extra field value if set, zero value otherwise.
func (o *V1beta1SubjectAccessReviewSpec) GetExtra() map[string][]string {
	if o == nil || IsNil(o.Extra) {
		var ret map[string][]string
		return ret
	}
	return *o.Extra
}

// GetExtraOk returns a tuple with the Extra field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1beta1SubjectAccessReviewSpec) GetExtraOk() (*map[string][]string, bool) {
	if o == nil || IsNil(o.Extra) {
		return nil, false
	}
	return o.Extra, true
}

// HasExtra returns a boolean if a field has been set.
func (o *V1beta1SubjectAccessReviewSpec) HasExtra() bool {
	if o != nil && !IsNil(o.Extra) {
		return true
	}

	return false
}

// SetExtra gets a reference to the given map[string][]string and assigns it to the Extra field.
func (o *V1beta1SubjectAccessReviewSpec) SetExtra(v map[string][]string) {
	o.Extra = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *V1beta1SubjectAccessReviewSpec) GetGroups() []string {
	if o == nil || IsNil(o.Groups) {
		var ret []string
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1beta1SubjectAccessReviewSpec) GetGroupsOk() ([]string, bool) {
	if o == nil || IsNil(o.Groups) {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *V1beta1SubjectAccessReviewSpec) HasGroups() bool {
	if o != nil && !IsNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []string and assigns it to the Groups field.
func (o *V1beta1SubjectAccessReviewSpec) SetGroups(v []string) {
	o.Groups = v
}

// GetNonResourceAttributes returns the NonResourceAttributes field value if set, zero value otherwise.
func (o *V1beta1SubjectAccessReviewSpec) GetNonResourceAttributes() V1beta1NonResourceAttributes {
	if o == nil || IsNil(o.NonResourceAttributes) {
		var ret V1beta1NonResourceAttributes
		return ret
	}
	return *o.NonResourceAttributes
}

// GetNonResourceAttributesOk returns a tuple with the NonResourceAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1beta1SubjectAccessReviewSpec) GetNonResourceAttributesOk() (*V1beta1NonResourceAttributes, bool) {
	if o == nil || IsNil(o.NonResourceAttributes) {
		return nil, false
	}
	return o.NonResourceAttributes, true
}

// HasNonResourceAttributes returns a boolean if a field has been set.
func (o *V1beta1SubjectAccessReviewSpec) HasNonResourceAttributes() bool {
	if o != nil && !IsNil(o.NonResourceAttributes) {
		return true
	}

	return false
}

// SetNonResourceAttributes gets a reference to the given V1beta1NonResourceAttributes and assigns it to the NonResourceAttributes field.
func (o *V1beta1SubjectAccessReviewSpec) SetNonResourceAttributes(v V1beta1NonResourceAttributes) {
	o.NonResourceAttributes = &v
}

// GetResourceAttributes returns the ResourceAttributes field value if set, zero value otherwise.
func (o *V1beta1SubjectAccessReviewSpec) GetResourceAttributes() V1beta1ResourceAttributes {
	if o == nil || IsNil(o.ResourceAttributes) {
		var ret V1beta1ResourceAttributes
		return ret
	}
	return *o.ResourceAttributes
}

// GetResourceAttributesOk returns a tuple with the ResourceAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1beta1SubjectAccessReviewSpec) GetResourceAttributesOk() (*V1beta1ResourceAttributes, bool) {
	if o == nil || IsNil(o.ResourceAttributes) {
		return nil, false
	}
	return o.ResourceAttributes, true
}

// HasResourceAttributes returns a boolean if a field has been set.
func (o *V1beta1SubjectAccessReviewSpec) HasResourceAttributes() bool {
	if o != nil && !IsNil(o.ResourceAttributes) {
		return true
	}

	return false
}

// SetResourceAttributes gets a reference to the given V1beta1ResourceAttributes and assigns it to the ResourceAttributes field.
func (o *V1beta1SubjectAccessReviewSpec) SetResourceAttributes(v V1beta1ResourceAttributes) {
	o.ResourceAttributes = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *V1beta1SubjectAccessReviewSpec) GetUid() string {
	if o == nil || IsNil(o.Uid) {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1beta1SubjectAccessReviewSpec) GetUidOk() (*string, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *V1beta1SubjectAccessReviewSpec) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *V1beta1SubjectAccessReviewSpec) SetUid(v string) {
	o.Uid = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *V1beta1SubjectAccessReviewSpec) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1beta1SubjectAccessReviewSpec) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *V1beta1SubjectAccessReviewSpec) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *V1beta1SubjectAccessReviewSpec) SetUser(v string) {
	o.User = &v
}

func (o V1beta1SubjectAccessReviewSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1beta1SubjectAccessReviewSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Extra) {
		toSerialize["extra"] = o.Extra
	}
	if !IsNil(o.Groups) {
		toSerialize["groups"] = o.Groups
	}
	if !IsNil(o.NonResourceAttributes) {
		toSerialize["nonResourceAttributes"] = o.NonResourceAttributes
	}
	if !IsNil(o.ResourceAttributes) {
		toSerialize["resourceAttributes"] = o.ResourceAttributes
	}
	if !IsNil(o.Uid) {
		toSerialize["uid"] = o.Uid
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableV1beta1SubjectAccessReviewSpec struct {
	value *V1beta1SubjectAccessReviewSpec
	isSet bool
}

func (v NullableV1beta1SubjectAccessReviewSpec) Get() *V1beta1SubjectAccessReviewSpec {
	return v.value
}

func (v *NullableV1beta1SubjectAccessReviewSpec) Set(val *V1beta1SubjectAccessReviewSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableV1beta1SubjectAccessReviewSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableV1beta1SubjectAccessReviewSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1beta1SubjectAccessReviewSpec(val *V1beta1SubjectAccessReviewSpec) *NullableV1beta1SubjectAccessReviewSpec {
	return &NullableV1beta1SubjectAccessReviewSpec{value: val, isSet: true}
}

func (v NullableV1beta1SubjectAccessReviewSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1beta1SubjectAccessReviewSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


