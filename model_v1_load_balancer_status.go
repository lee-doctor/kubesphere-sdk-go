/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1LoadBalancerStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1LoadBalancerStatus{}

// V1LoadBalancerStatus LoadBalancerStatus represents the status of a load-balancer.
type V1LoadBalancerStatus struct {
	// Ingress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points.
	Ingress []V1LoadBalancerIngress `json:"ingress,omitempty"`
}

// NewV1LoadBalancerStatus instantiates a new V1LoadBalancerStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1LoadBalancerStatus() *V1LoadBalancerStatus {
	this := V1LoadBalancerStatus{}
	return &this
}

// NewV1LoadBalancerStatusWithDefaults instantiates a new V1LoadBalancerStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1LoadBalancerStatusWithDefaults() *V1LoadBalancerStatus {
	this := V1LoadBalancerStatus{}
	return &this
}

// GetIngress returns the Ingress field value if set, zero value otherwise.
func (o *V1LoadBalancerStatus) GetIngress() []V1LoadBalancerIngress {
	if o == nil || IsNil(o.Ingress) {
		var ret []V1LoadBalancerIngress
		return ret
	}
	return o.Ingress
}

// GetIngressOk returns a tuple with the Ingress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1LoadBalancerStatus) GetIngressOk() ([]V1LoadBalancerIngress, bool) {
	if o == nil || IsNil(o.Ingress) {
		return nil, false
	}
	return o.Ingress, true
}

// HasIngress returns a boolean if a field has been set.
func (o *V1LoadBalancerStatus) HasIngress() bool {
	if o != nil && !IsNil(o.Ingress) {
		return true
	}

	return false
}

// SetIngress gets a reference to the given []V1LoadBalancerIngress and assigns it to the Ingress field.
func (o *V1LoadBalancerStatus) SetIngress(v []V1LoadBalancerIngress) {
	o.Ingress = v
}

func (o V1LoadBalancerStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1LoadBalancerStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ingress) {
		toSerialize["ingress"] = o.Ingress
	}
	return toSerialize, nil
}

type NullableV1LoadBalancerStatus struct {
	value *V1LoadBalancerStatus
	isSet bool
}

func (v NullableV1LoadBalancerStatus) Get() *V1LoadBalancerStatus {
	return v.value
}

func (v *NullableV1LoadBalancerStatus) Set(val *V1LoadBalancerStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableV1LoadBalancerStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableV1LoadBalancerStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1LoadBalancerStatus(val *V1LoadBalancerStatus) *NullableV1LoadBalancerStatus {
	return &NullableV1LoadBalancerStatus{value: val, isSet: true}
}

func (v NullableV1LoadBalancerStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1LoadBalancerStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


