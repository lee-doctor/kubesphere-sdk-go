/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OpenpitrixRepo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenpitrixRepo{}

// OpenpitrixRepo struct for OpenpitrixRepo
type OpenpitrixRepo struct {
	AppDefaultStatus *string `json:"app_default_status,omitempty"`
	CategorySet []OpenpitrixResourceCategory `json:"category_set"`
	Controller *int32 `json:"controller,omitempty"`
	CreateTime *string `json:"create_time,omitempty"`
	Credential *string `json:"credential,omitempty"`
	Description *string `json:"description,omitempty"`
	Labels []OpenpitrixRepoLabel `json:"labels"`
	Name *string `json:"name,omitempty"`
	Owner *string `json:"owner,omitempty"`
	Providers []string `json:"providers"`
	RepoId *string `json:"repo_id,omitempty"`
	Selectors []OpenpitrixRepoSelector `json:"selectors"`
	Status *string `json:"status,omitempty"`
	StatusTime *string `json:"status_time,omitempty"`
	Type *string `json:"type,omitempty"`
	Url *string `json:"url,omitempty"`
	Visibility *string `json:"visibility,omitempty"`
}

type _OpenpitrixRepo OpenpitrixRepo

// NewOpenpitrixRepo instantiates a new OpenpitrixRepo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenpitrixRepo(categorySet []OpenpitrixResourceCategory, labels []OpenpitrixRepoLabel, providers []string, selectors []OpenpitrixRepoSelector) *OpenpitrixRepo {
	this := OpenpitrixRepo{}
	this.CategorySet = categorySet
	this.Labels = labels
	this.Providers = providers
	this.Selectors = selectors
	return &this
}

// NewOpenpitrixRepoWithDefaults instantiates a new OpenpitrixRepo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenpitrixRepoWithDefaults() *OpenpitrixRepo {
	this := OpenpitrixRepo{}
	return &this
}

// GetAppDefaultStatus returns the AppDefaultStatus field value if set, zero value otherwise.
func (o *OpenpitrixRepo) GetAppDefaultStatus() string {
	if o == nil || IsNil(o.AppDefaultStatus) {
		var ret string
		return ret
	}
	return *o.AppDefaultStatus
}

// GetAppDefaultStatusOk returns a tuple with the AppDefaultStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixRepo) GetAppDefaultStatusOk() (*string, bool) {
	if o == nil || IsNil(o.AppDefaultStatus) {
		return nil, false
	}
	return o.AppDefaultStatus, true
}

// HasAppDefaultStatus returns a boolean if a field has been set.
func (o *OpenpitrixRepo) HasAppDefaultStatus() bool {
	if o != nil && !IsNil(o.AppDefaultStatus) {
		return true
	}

	return false
}

// SetAppDefaultStatus gets a reference to the given string and assigns it to the AppDefaultStatus field.
func (o *OpenpitrixRepo) SetAppDefaultStatus(v string) {
	o.AppDefaultStatus = &v
}

// GetCategorySet returns the CategorySet field value
func (o *OpenpitrixRepo) GetCategorySet() []OpenpitrixResourceCategory {
	if o == nil {
		var ret []OpenpitrixResourceCategory
		return ret
	}

	return o.CategorySet
}

// GetCategorySetOk returns a tuple with the CategorySet field value
// and a boolean to check if the value has been set.
func (o *OpenpitrixRepo) GetCategorySetOk() ([]OpenpitrixResourceCategory, bool) {
	if o == nil {
		return nil, false
	}
	return o.CategorySet, true
}

// SetCategorySet sets field value
func (o *OpenpitrixRepo) SetCategorySet(v []OpenpitrixResourceCategory) {
	o.CategorySet = v
}

// GetController returns the Controller field value if set, zero value otherwise.
func (o *OpenpitrixRepo) GetController() int32 {
	if o == nil || IsNil(o.Controller) {
		var ret int32
		return ret
	}
	return *o.Controller
}

// GetControllerOk returns a tuple with the Controller field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixRepo) GetControllerOk() (*int32, bool) {
	if o == nil || IsNil(o.Controller) {
		return nil, false
	}
	return o.Controller, true
}

// HasController returns a boolean if a field has been set.
func (o *OpenpitrixRepo) HasController() bool {
	if o != nil && !IsNil(o.Controller) {
		return true
	}

	return false
}

// SetController gets a reference to the given int32 and assigns it to the Controller field.
func (o *OpenpitrixRepo) SetController(v int32) {
	o.Controller = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *OpenpitrixRepo) GetCreateTime() string {
	if o == nil || IsNil(o.CreateTime) {
		var ret string
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixRepo) GetCreateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *OpenpitrixRepo) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given string and assigns it to the CreateTime field.
func (o *OpenpitrixRepo) SetCreateTime(v string) {
	o.CreateTime = &v
}

// GetCredential returns the Credential field value if set, zero value otherwise.
func (o *OpenpitrixRepo) GetCredential() string {
	if o == nil || IsNil(o.Credential) {
		var ret string
		return ret
	}
	return *o.Credential
}

// GetCredentialOk returns a tuple with the Credential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixRepo) GetCredentialOk() (*string, bool) {
	if o == nil || IsNil(o.Credential) {
		return nil, false
	}
	return o.Credential, true
}

// HasCredential returns a boolean if a field has been set.
func (o *OpenpitrixRepo) HasCredential() bool {
	if o != nil && !IsNil(o.Credential) {
		return true
	}

	return false
}

// SetCredential gets a reference to the given string and assigns it to the Credential field.
func (o *OpenpitrixRepo) SetCredential(v string) {
	o.Credential = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OpenpitrixRepo) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixRepo) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OpenpitrixRepo) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OpenpitrixRepo) SetDescription(v string) {
	o.Description = &v
}

// GetLabels returns the Labels field value
func (o *OpenpitrixRepo) GetLabels() []OpenpitrixRepoLabel {
	if o == nil {
		var ret []OpenpitrixRepoLabel
		return ret
	}

	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value
// and a boolean to check if the value has been set.
func (o *OpenpitrixRepo) GetLabelsOk() ([]OpenpitrixRepoLabel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Labels, true
}

// SetLabels sets field value
func (o *OpenpitrixRepo) SetLabels(v []OpenpitrixRepoLabel) {
	o.Labels = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OpenpitrixRepo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixRepo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OpenpitrixRepo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OpenpitrixRepo) SetName(v string) {
	o.Name = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *OpenpitrixRepo) GetOwner() string {
	if o == nil || IsNil(o.Owner) {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixRepo) GetOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *OpenpitrixRepo) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *OpenpitrixRepo) SetOwner(v string) {
	o.Owner = &v
}

// GetProviders returns the Providers field value
func (o *OpenpitrixRepo) GetProviders() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Providers
}

// GetProvidersOk returns a tuple with the Providers field value
// and a boolean to check if the value has been set.
func (o *OpenpitrixRepo) GetProvidersOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Providers, true
}

// SetProviders sets field value
func (o *OpenpitrixRepo) SetProviders(v []string) {
	o.Providers = v
}

// GetRepoId returns the RepoId field value if set, zero value otherwise.
func (o *OpenpitrixRepo) GetRepoId() string {
	if o == nil || IsNil(o.RepoId) {
		var ret string
		return ret
	}
	return *o.RepoId
}

// GetRepoIdOk returns a tuple with the RepoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixRepo) GetRepoIdOk() (*string, bool) {
	if o == nil || IsNil(o.RepoId) {
		return nil, false
	}
	return o.RepoId, true
}

// HasRepoId returns a boolean if a field has been set.
func (o *OpenpitrixRepo) HasRepoId() bool {
	if o != nil && !IsNil(o.RepoId) {
		return true
	}

	return false
}

// SetRepoId gets a reference to the given string and assigns it to the RepoId field.
func (o *OpenpitrixRepo) SetRepoId(v string) {
	o.RepoId = &v
}

// GetSelectors returns the Selectors field value
func (o *OpenpitrixRepo) GetSelectors() []OpenpitrixRepoSelector {
	if o == nil {
		var ret []OpenpitrixRepoSelector
		return ret
	}

	return o.Selectors
}

// GetSelectorsOk returns a tuple with the Selectors field value
// and a boolean to check if the value has been set.
func (o *OpenpitrixRepo) GetSelectorsOk() ([]OpenpitrixRepoSelector, bool) {
	if o == nil {
		return nil, false
	}
	return o.Selectors, true
}

// SetSelectors sets field value
func (o *OpenpitrixRepo) SetSelectors(v []OpenpitrixRepoSelector) {
	o.Selectors = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OpenpitrixRepo) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixRepo) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OpenpitrixRepo) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OpenpitrixRepo) SetStatus(v string) {
	o.Status = &v
}

// GetStatusTime returns the StatusTime field value if set, zero value otherwise.
func (o *OpenpitrixRepo) GetStatusTime() string {
	if o == nil || IsNil(o.StatusTime) {
		var ret string
		return ret
	}
	return *o.StatusTime
}

// GetStatusTimeOk returns a tuple with the StatusTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixRepo) GetStatusTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StatusTime) {
		return nil, false
	}
	return o.StatusTime, true
}

// HasStatusTime returns a boolean if a field has been set.
func (o *OpenpitrixRepo) HasStatusTime() bool {
	if o != nil && !IsNil(o.StatusTime) {
		return true
	}

	return false
}

// SetStatusTime gets a reference to the given string and assigns it to the StatusTime field.
func (o *OpenpitrixRepo) SetStatusTime(v string) {
	o.StatusTime = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *OpenpitrixRepo) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixRepo) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *OpenpitrixRepo) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *OpenpitrixRepo) SetType(v string) {
	o.Type = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *OpenpitrixRepo) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixRepo) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *OpenpitrixRepo) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *OpenpitrixRepo) SetUrl(v string) {
	o.Url = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *OpenpitrixRepo) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixRepo) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *OpenpitrixRepo) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *OpenpitrixRepo) SetVisibility(v string) {
	o.Visibility = &v
}

func (o OpenpitrixRepo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenpitrixRepo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppDefaultStatus) {
		toSerialize["app_default_status"] = o.AppDefaultStatus
	}
	toSerialize["category_set"] = o.CategorySet
	if !IsNil(o.Controller) {
		toSerialize["controller"] = o.Controller
	}
	if !IsNil(o.CreateTime) {
		toSerialize["create_time"] = o.CreateTime
	}
	if !IsNil(o.Credential) {
		toSerialize["credential"] = o.Credential
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["labels"] = o.Labels
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	toSerialize["providers"] = o.Providers
	if !IsNil(o.RepoId) {
		toSerialize["repo_id"] = o.RepoId
	}
	toSerialize["selectors"] = o.Selectors
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusTime) {
		toSerialize["status_time"] = o.StatusTime
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	return toSerialize, nil
}

func (o *OpenpitrixRepo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"category_set",
		"labels",
		"providers",
		"selectors",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOpenpitrixRepo := _OpenpitrixRepo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOpenpitrixRepo)

	if err != nil {
		return err
	}

	*o = OpenpitrixRepo(varOpenpitrixRepo)

	return err
}

type NullableOpenpitrixRepo struct {
	value *OpenpitrixRepo
	isSet bool
}

func (v NullableOpenpitrixRepo) Get() *OpenpitrixRepo {
	return v.value
}

func (v *NullableOpenpitrixRepo) Set(val *OpenpitrixRepo) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenpitrixRepo) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenpitrixRepo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenpitrixRepo(val *OpenpitrixRepo) *NullableOpenpitrixRepo {
	return &NullableOpenpitrixRepo{value: val, isSet: true}
}

func (v NullableOpenpitrixRepo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenpitrixRepo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


