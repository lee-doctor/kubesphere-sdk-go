/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1ResourceRequirements type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ResourceRequirements{}

// V1ResourceRequirements ResourceRequirements describes the compute resource requirements.
type V1ResourceRequirements struct {
	// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Limits *map[string]ResourceQuantity `json:"limits,omitempty"`
	// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
	Requests *map[string]ResourceQuantity `json:"requests,omitempty"`
}

// NewV1ResourceRequirements instantiates a new V1ResourceRequirements object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ResourceRequirements() *V1ResourceRequirements {
	this := V1ResourceRequirements{}
	return &this
}

// NewV1ResourceRequirementsWithDefaults instantiates a new V1ResourceRequirements object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ResourceRequirementsWithDefaults() *V1ResourceRequirements {
	this := V1ResourceRequirements{}
	return &this
}

// GetLimits returns the Limits field value if set, zero value otherwise.
func (o *V1ResourceRequirements) GetLimits() map[string]ResourceQuantity {
	if o == nil || IsNil(o.Limits) {
		var ret map[string]ResourceQuantity
		return ret
	}
	return *o.Limits
}

// GetLimitsOk returns a tuple with the Limits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ResourceRequirements) GetLimitsOk() (*map[string]ResourceQuantity, bool) {
	if o == nil || IsNil(o.Limits) {
		return nil, false
	}
	return o.Limits, true
}

// HasLimits returns a boolean if a field has been set.
func (o *V1ResourceRequirements) HasLimits() bool {
	if o != nil && !IsNil(o.Limits) {
		return true
	}

	return false
}

// SetLimits gets a reference to the given map[string]ResourceQuantity and assigns it to the Limits field.
func (o *V1ResourceRequirements) SetLimits(v map[string]ResourceQuantity) {
	o.Limits = &v
}

// GetRequests returns the Requests field value if set, zero value otherwise.
func (o *V1ResourceRequirements) GetRequests() map[string]ResourceQuantity {
	if o == nil || IsNil(o.Requests) {
		var ret map[string]ResourceQuantity
		return ret
	}
	return *o.Requests
}

// GetRequestsOk returns a tuple with the Requests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ResourceRequirements) GetRequestsOk() (*map[string]ResourceQuantity, bool) {
	if o == nil || IsNil(o.Requests) {
		return nil, false
	}
	return o.Requests, true
}

// HasRequests returns a boolean if a field has been set.
func (o *V1ResourceRequirements) HasRequests() bool {
	if o != nil && !IsNil(o.Requests) {
		return true
	}

	return false
}

// SetRequests gets a reference to the given map[string]ResourceQuantity and assigns it to the Requests field.
func (o *V1ResourceRequirements) SetRequests(v map[string]ResourceQuantity) {
	o.Requests = &v
}

func (o V1ResourceRequirements) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ResourceRequirements) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Limits) {
		toSerialize["limits"] = o.Limits
	}
	if !IsNil(o.Requests) {
		toSerialize["requests"] = o.Requests
	}
	return toSerialize, nil
}

type NullableV1ResourceRequirements struct {
	value *V1ResourceRequirements
	isSet bool
}

func (v NullableV1ResourceRequirements) Get() *V1ResourceRequirements {
	return v.value
}

func (v *NullableV1ResourceRequirements) Set(val *V1ResourceRequirements) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ResourceRequirements) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ResourceRequirements) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ResourceRequirements(val *V1ResourceRequirements) *NullableV1ResourceRequirements {
	return &NullableV1ResourceRequirements{value: val, isSet: true}
}

func (v NullableV1ResourceRequirements) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ResourceRequirements) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


