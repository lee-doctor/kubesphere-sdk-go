/*
KS API

KubeSphere OpenAPI

API version: v4.1.1
Contact: support@kubesphere.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1DownwardAPIProjection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DownwardAPIProjection{}

// V1DownwardAPIProjection Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
type V1DownwardAPIProjection struct {
	// Items is a list of DownwardAPIVolume file
	Items []V1DownwardAPIVolumeFile `json:"items,omitempty"`
}

// NewV1DownwardAPIProjection instantiates a new V1DownwardAPIProjection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DownwardAPIProjection() *V1DownwardAPIProjection {
	this := V1DownwardAPIProjection{}
	return &this
}

// NewV1DownwardAPIProjectionWithDefaults instantiates a new V1DownwardAPIProjection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DownwardAPIProjectionWithDefaults() *V1DownwardAPIProjection {
	this := V1DownwardAPIProjection{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *V1DownwardAPIProjection) GetItems() []V1DownwardAPIVolumeFile {
	if o == nil || IsNil(o.Items) {
		var ret []V1DownwardAPIVolumeFile
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DownwardAPIProjection) GetItemsOk() ([]V1DownwardAPIVolumeFile, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *V1DownwardAPIProjection) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []V1DownwardAPIVolumeFile and assigns it to the Items field.
func (o *V1DownwardAPIProjection) SetItems(v []V1DownwardAPIVolumeFile) {
	o.Items = v
}

func (o V1DownwardAPIProjection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DownwardAPIProjection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	return toSerialize, nil
}

type NullableV1DownwardAPIProjection struct {
	value *V1DownwardAPIProjection
	isSet bool
}

func (v NullableV1DownwardAPIProjection) Get() *V1DownwardAPIProjection {
	return v.value
}

func (v *NullableV1DownwardAPIProjection) Set(val *V1DownwardAPIProjection) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DownwardAPIProjection) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DownwardAPIProjection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DownwardAPIProjection(val *V1DownwardAPIProjection) *NullableV1DownwardAPIProjection {
	return &NullableV1DownwardAPIProjection{value: val, isSet: true}
}

func (v NullableV1DownwardAPIProjection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DownwardAPIProjection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


