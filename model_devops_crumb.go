/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DevopsCrumb type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DevopsCrumb{}

// DevopsCrumb struct for DevopsCrumb
type DevopsCrumb struct {
	// Itâ€™s a fully qualified name and is an identifier of the producer of this resource's capability.
	Class *string `json:"_class,omitempty"`
	// crumb data
	Crumb *string `json:"crumb,omitempty"`
	// crumb request field
	CrumbRequestField *string `json:"crumbRequestField,omitempty"`
}

// NewDevopsCrumb instantiates a new DevopsCrumb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDevopsCrumb() *DevopsCrumb {
	this := DevopsCrumb{}
	return &this
}

// NewDevopsCrumbWithDefaults instantiates a new DevopsCrumb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDevopsCrumbWithDefaults() *DevopsCrumb {
	this := DevopsCrumb{}
	return &this
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *DevopsCrumb) GetClass() string {
	if o == nil || IsNil(o.Class) {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevopsCrumb) GetClassOk() (*string, bool) {
	if o == nil || IsNil(o.Class) {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *DevopsCrumb) HasClass() bool {
	if o != nil && !IsNil(o.Class) {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *DevopsCrumb) SetClass(v string) {
	o.Class = &v
}

// GetCrumb returns the Crumb field value if set, zero value otherwise.
func (o *DevopsCrumb) GetCrumb() string {
	if o == nil || IsNil(o.Crumb) {
		var ret string
		return ret
	}
	return *o.Crumb
}

// GetCrumbOk returns a tuple with the Crumb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevopsCrumb) GetCrumbOk() (*string, bool) {
	if o == nil || IsNil(o.Crumb) {
		return nil, false
	}
	return o.Crumb, true
}

// HasCrumb returns a boolean if a field has been set.
func (o *DevopsCrumb) HasCrumb() bool {
	if o != nil && !IsNil(o.Crumb) {
		return true
	}

	return false
}

// SetCrumb gets a reference to the given string and assigns it to the Crumb field.
func (o *DevopsCrumb) SetCrumb(v string) {
	o.Crumb = &v
}

// GetCrumbRequestField returns the CrumbRequestField field value if set, zero value otherwise.
func (o *DevopsCrumb) GetCrumbRequestField() string {
	if o == nil || IsNil(o.CrumbRequestField) {
		var ret string
		return ret
	}
	return *o.CrumbRequestField
}

// GetCrumbRequestFieldOk returns a tuple with the CrumbRequestField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevopsCrumb) GetCrumbRequestFieldOk() (*string, bool) {
	if o == nil || IsNil(o.CrumbRequestField) {
		return nil, false
	}
	return o.CrumbRequestField, true
}

// HasCrumbRequestField returns a boolean if a field has been set.
func (o *DevopsCrumb) HasCrumbRequestField() bool {
	if o != nil && !IsNil(o.CrumbRequestField) {
		return true
	}

	return false
}

// SetCrumbRequestField gets a reference to the given string and assigns it to the CrumbRequestField field.
func (o *DevopsCrumb) SetCrumbRequestField(v string) {
	o.CrumbRequestField = &v
}

func (o DevopsCrumb) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DevopsCrumb) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Class) {
		toSerialize["_class"] = o.Class
	}
	if !IsNil(o.Crumb) {
		toSerialize["crumb"] = o.Crumb
	}
	if !IsNil(o.CrumbRequestField) {
		toSerialize["crumbRequestField"] = o.CrumbRequestField
	}
	return toSerialize, nil
}

type NullableDevopsCrumb struct {
	value *DevopsCrumb
	isSet bool
}

func (v NullableDevopsCrumb) Get() *DevopsCrumb {
	return v.value
}

func (v *NullableDevopsCrumb) Set(val *DevopsCrumb) {
	v.value = val
	v.isSet = true
}

func (v NullableDevopsCrumb) IsSet() bool {
	return v.isSet
}

func (v *NullableDevopsCrumb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDevopsCrumb(val *DevopsCrumb) *NullableDevopsCrumb {
	return &NullableDevopsCrumb{value: val, isSet: true}
}

func (v NullableDevopsCrumb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDevopsCrumb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


