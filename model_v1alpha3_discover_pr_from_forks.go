/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1alpha3DiscoverPRFromForks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1alpha3DiscoverPRFromForks{}

// V1alpha3DiscoverPRFromForks struct for V1alpha3DiscoverPRFromForks
type V1alpha3DiscoverPRFromForks struct {
	// github discover strategy
	Strategy *int32 `json:"strategy,omitempty"`
	// trust user type
	Trust *int32 `json:"trust,omitempty"`
}

// NewV1alpha3DiscoverPRFromForks instantiates a new V1alpha3DiscoverPRFromForks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha3DiscoverPRFromForks() *V1alpha3DiscoverPRFromForks {
	this := V1alpha3DiscoverPRFromForks{}
	return &this
}

// NewV1alpha3DiscoverPRFromForksWithDefaults instantiates a new V1alpha3DiscoverPRFromForks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha3DiscoverPRFromForksWithDefaults() *V1alpha3DiscoverPRFromForks {
	this := V1alpha3DiscoverPRFromForks{}
	return &this
}

// GetStrategy returns the Strategy field value if set, zero value otherwise.
func (o *V1alpha3DiscoverPRFromForks) GetStrategy() int32 {
	if o == nil || IsNil(o.Strategy) {
		var ret int32
		return ret
	}
	return *o.Strategy
}

// GetStrategyOk returns a tuple with the Strategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha3DiscoverPRFromForks) GetStrategyOk() (*int32, bool) {
	if o == nil || IsNil(o.Strategy) {
		return nil, false
	}
	return o.Strategy, true
}

// HasStrategy returns a boolean if a field has been set.
func (o *V1alpha3DiscoverPRFromForks) HasStrategy() bool {
	if o != nil && !IsNil(o.Strategy) {
		return true
	}

	return false
}

// SetStrategy gets a reference to the given int32 and assigns it to the Strategy field.
func (o *V1alpha3DiscoverPRFromForks) SetStrategy(v int32) {
	o.Strategy = &v
}

// GetTrust returns the Trust field value if set, zero value otherwise.
func (o *V1alpha3DiscoverPRFromForks) GetTrust() int32 {
	if o == nil || IsNil(o.Trust) {
		var ret int32
		return ret
	}
	return *o.Trust
}

// GetTrustOk returns a tuple with the Trust field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha3DiscoverPRFromForks) GetTrustOk() (*int32, bool) {
	if o == nil || IsNil(o.Trust) {
		return nil, false
	}
	return o.Trust, true
}

// HasTrust returns a boolean if a field has been set.
func (o *V1alpha3DiscoverPRFromForks) HasTrust() bool {
	if o != nil && !IsNil(o.Trust) {
		return true
	}

	return false
}

// SetTrust gets a reference to the given int32 and assigns it to the Trust field.
func (o *V1alpha3DiscoverPRFromForks) SetTrust(v int32) {
	o.Trust = &v
}

func (o V1alpha3DiscoverPRFromForks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1alpha3DiscoverPRFromForks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Strategy) {
		toSerialize["strategy"] = o.Strategy
	}
	if !IsNil(o.Trust) {
		toSerialize["trust"] = o.Trust
	}
	return toSerialize, nil
}

type NullableV1alpha3DiscoverPRFromForks struct {
	value *V1alpha3DiscoverPRFromForks
	isSet bool
}

func (v NullableV1alpha3DiscoverPRFromForks) Get() *V1alpha3DiscoverPRFromForks {
	return v.value
}

func (v *NullableV1alpha3DiscoverPRFromForks) Set(val *V1alpha3DiscoverPRFromForks) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha3DiscoverPRFromForks) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha3DiscoverPRFromForks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha3DiscoverPRFromForks(val *V1alpha3DiscoverPRFromForks) *NullableV1alpha3DiscoverPRFromForks {
	return &NullableV1alpha3DiscoverPRFromForks{value: val, isSet: true}
}

func (v NullableV1alpha3DiscoverPRFromForks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha3DiscoverPRFromForks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


