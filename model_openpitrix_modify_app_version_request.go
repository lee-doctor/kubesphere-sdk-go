/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OpenpitrixModifyAppVersionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenpitrixModifyAppVersionRequest{}

// OpenpitrixModifyAppVersionRequest struct for OpenpitrixModifyAppVersionRequest
type OpenpitrixModifyAppVersionRequest struct {
	Description *string `json:"description,omitempty"`
	Name *string `json:"name,omitempty"`
	Package *string `json:"package,omitempty"`
	PackageFiles *map[string]string `json:"package_files,omitempty"`
	VersionId *string `json:"version_id,omitempty"`
}

// NewOpenpitrixModifyAppVersionRequest instantiates a new OpenpitrixModifyAppVersionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenpitrixModifyAppVersionRequest() *OpenpitrixModifyAppVersionRequest {
	this := OpenpitrixModifyAppVersionRequest{}
	return &this
}

// NewOpenpitrixModifyAppVersionRequestWithDefaults instantiates a new OpenpitrixModifyAppVersionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenpitrixModifyAppVersionRequestWithDefaults() *OpenpitrixModifyAppVersionRequest {
	this := OpenpitrixModifyAppVersionRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OpenpitrixModifyAppVersionRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixModifyAppVersionRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OpenpitrixModifyAppVersionRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OpenpitrixModifyAppVersionRequest) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OpenpitrixModifyAppVersionRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixModifyAppVersionRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OpenpitrixModifyAppVersionRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OpenpitrixModifyAppVersionRequest) SetName(v string) {
	o.Name = &v
}

// GetPackage returns the Package field value if set, zero value otherwise.
func (o *OpenpitrixModifyAppVersionRequest) GetPackage() string {
	if o == nil || IsNil(o.Package) {
		var ret string
		return ret
	}
	return *o.Package
}

// GetPackageOk returns a tuple with the Package field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixModifyAppVersionRequest) GetPackageOk() (*string, bool) {
	if o == nil || IsNil(o.Package) {
		return nil, false
	}
	return o.Package, true
}

// HasPackage returns a boolean if a field has been set.
func (o *OpenpitrixModifyAppVersionRequest) HasPackage() bool {
	if o != nil && !IsNil(o.Package) {
		return true
	}

	return false
}

// SetPackage gets a reference to the given string and assigns it to the Package field.
func (o *OpenpitrixModifyAppVersionRequest) SetPackage(v string) {
	o.Package = &v
}

// GetPackageFiles returns the PackageFiles field value if set, zero value otherwise.
func (o *OpenpitrixModifyAppVersionRequest) GetPackageFiles() map[string]string {
	if o == nil || IsNil(o.PackageFiles) {
		var ret map[string]string
		return ret
	}
	return *o.PackageFiles
}

// GetPackageFilesOk returns a tuple with the PackageFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixModifyAppVersionRequest) GetPackageFilesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.PackageFiles) {
		return nil, false
	}
	return o.PackageFiles, true
}

// HasPackageFiles returns a boolean if a field has been set.
func (o *OpenpitrixModifyAppVersionRequest) HasPackageFiles() bool {
	if o != nil && !IsNil(o.PackageFiles) {
		return true
	}

	return false
}

// SetPackageFiles gets a reference to the given map[string]string and assigns it to the PackageFiles field.
func (o *OpenpitrixModifyAppVersionRequest) SetPackageFiles(v map[string]string) {
	o.PackageFiles = &v
}

// GetVersionId returns the VersionId field value if set, zero value otherwise.
func (o *OpenpitrixModifyAppVersionRequest) GetVersionId() string {
	if o == nil || IsNil(o.VersionId) {
		var ret string
		return ret
	}
	return *o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixModifyAppVersionRequest) GetVersionIdOk() (*string, bool) {
	if o == nil || IsNil(o.VersionId) {
		return nil, false
	}
	return o.VersionId, true
}

// HasVersionId returns a boolean if a field has been set.
func (o *OpenpitrixModifyAppVersionRequest) HasVersionId() bool {
	if o != nil && !IsNil(o.VersionId) {
		return true
	}

	return false
}

// SetVersionId gets a reference to the given string and assigns it to the VersionId field.
func (o *OpenpitrixModifyAppVersionRequest) SetVersionId(v string) {
	o.VersionId = &v
}

func (o OpenpitrixModifyAppVersionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenpitrixModifyAppVersionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Package) {
		toSerialize["package"] = o.Package
	}
	if !IsNil(o.PackageFiles) {
		toSerialize["package_files"] = o.PackageFiles
	}
	if !IsNil(o.VersionId) {
		toSerialize["version_id"] = o.VersionId
	}
	return toSerialize, nil
}

type NullableOpenpitrixModifyAppVersionRequest struct {
	value *OpenpitrixModifyAppVersionRequest
	isSet bool
}

func (v NullableOpenpitrixModifyAppVersionRequest) Get() *OpenpitrixModifyAppVersionRequest {
	return v.value
}

func (v *NullableOpenpitrixModifyAppVersionRequest) Set(val *OpenpitrixModifyAppVersionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenpitrixModifyAppVersionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenpitrixModifyAppVersionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenpitrixModifyAppVersionRequest(val *OpenpitrixModifyAppVersionRequest) *NullableOpenpitrixModifyAppVersionRequest {
	return &NullableOpenpitrixModifyAppVersionRequest{value: val, isSet: true}
}

func (v NullableOpenpitrixModifyAppVersionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenpitrixModifyAppVersionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


