/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1alpha2UserStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1alpha2UserStatus{}

// V1alpha2UserStatus struct for V1alpha2UserStatus
type V1alpha2UserStatus struct {
	LastLoginTime *string `json:"lastLoginTime,omitempty"`
	LastTransitionTime *string `json:"lastTransitionTime,omitempty"`
	Reason *string `json:"reason,omitempty"`
	State *string `json:"state,omitempty"`
}

// NewV1alpha2UserStatus instantiates a new V1alpha2UserStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha2UserStatus() *V1alpha2UserStatus {
	this := V1alpha2UserStatus{}
	return &this
}

// NewV1alpha2UserStatusWithDefaults instantiates a new V1alpha2UserStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha2UserStatusWithDefaults() *V1alpha2UserStatus {
	this := V1alpha2UserStatus{}
	return &this
}

// GetLastLoginTime returns the LastLoginTime field value if set, zero value otherwise.
func (o *V1alpha2UserStatus) GetLastLoginTime() string {
	if o == nil || IsNil(o.LastLoginTime) {
		var ret string
		return ret
	}
	return *o.LastLoginTime
}

// GetLastLoginTimeOk returns a tuple with the LastLoginTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha2UserStatus) GetLastLoginTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastLoginTime) {
		return nil, false
	}
	return o.LastLoginTime, true
}

// HasLastLoginTime returns a boolean if a field has been set.
func (o *V1alpha2UserStatus) HasLastLoginTime() bool {
	if o != nil && !IsNil(o.LastLoginTime) {
		return true
	}

	return false
}

// SetLastLoginTime gets a reference to the given string and assigns it to the LastLoginTime field.
func (o *V1alpha2UserStatus) SetLastLoginTime(v string) {
	o.LastLoginTime = &v
}

// GetLastTransitionTime returns the LastTransitionTime field value if set, zero value otherwise.
func (o *V1alpha2UserStatus) GetLastTransitionTime() string {
	if o == nil || IsNil(o.LastTransitionTime) {
		var ret string
		return ret
	}
	return *o.LastTransitionTime
}

// GetLastTransitionTimeOk returns a tuple with the LastTransitionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha2UserStatus) GetLastTransitionTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastTransitionTime) {
		return nil, false
	}
	return o.LastTransitionTime, true
}

// HasLastTransitionTime returns a boolean if a field has been set.
func (o *V1alpha2UserStatus) HasLastTransitionTime() bool {
	if o != nil && !IsNil(o.LastTransitionTime) {
		return true
	}

	return false
}

// SetLastTransitionTime gets a reference to the given string and assigns it to the LastTransitionTime field.
func (o *V1alpha2UserStatus) SetLastTransitionTime(v string) {
	o.LastTransitionTime = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *V1alpha2UserStatus) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha2UserStatus) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *V1alpha2UserStatus) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *V1alpha2UserStatus) SetReason(v string) {
	o.Reason = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *V1alpha2UserStatus) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha2UserStatus) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *V1alpha2UserStatus) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *V1alpha2UserStatus) SetState(v string) {
	o.State = &v
}

func (o V1alpha2UserStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1alpha2UserStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LastLoginTime) {
		toSerialize["lastLoginTime"] = o.LastLoginTime
	}
	if !IsNil(o.LastTransitionTime) {
		toSerialize["lastTransitionTime"] = o.LastTransitionTime
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	return toSerialize, nil
}

type NullableV1alpha2UserStatus struct {
	value *V1alpha2UserStatus
	isSet bool
}

func (v NullableV1alpha2UserStatus) Get() *V1alpha2UserStatus {
	return v.value
}

func (v *NullableV1alpha2UserStatus) Set(val *V1alpha2UserStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha2UserStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha2UserStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha2UserStatus(val *V1alpha2UserStatus) *NullableV1alpha2UserStatus {
	return &NullableV1alpha2UserStatus{value: val, isSet: true}
}

func (v NullableV1alpha2UserStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha2UserStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


