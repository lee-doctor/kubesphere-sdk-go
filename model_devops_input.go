/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DevopsInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DevopsInput{}

// DevopsInput struct for DevopsInput
type DevopsInput struct {
	// Itâ€™s a fully qualified name and is an identifier of the producer of this resource's capability.
	Class *string `json:"_class,omitempty"`
	Links *DevopsInputLinks `json:"_links,omitempty"`
	// the id of check action
	Id *string `json:"id,omitempty"`
	// the message of check action
	Message *string `json:"message,omitempty"`
	// check status. e.g. \"Proceed\"
	Ok *string `json:"ok,omitempty"`
	// the parameters of check action
	Parameters []map[string]interface{} `json:"parameters,omitempty"`
	Submitter map[string]interface{} `json:"submitter,omitempty"`
}

// NewDevopsInput instantiates a new DevopsInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDevopsInput() *DevopsInput {
	this := DevopsInput{}
	return &this
}

// NewDevopsInputWithDefaults instantiates a new DevopsInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDevopsInputWithDefaults() *DevopsInput {
	this := DevopsInput{}
	return &this
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *DevopsInput) GetClass() string {
	if o == nil || IsNil(o.Class) {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevopsInput) GetClassOk() (*string, bool) {
	if o == nil || IsNil(o.Class) {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *DevopsInput) HasClass() bool {
	if o != nil && !IsNil(o.Class) {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *DevopsInput) SetClass(v string) {
	o.Class = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *DevopsInput) GetLinks() DevopsInputLinks {
	if o == nil || IsNil(o.Links) {
		var ret DevopsInputLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevopsInput) GetLinksOk() (*DevopsInputLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *DevopsInput) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given DevopsInputLinks and assigns it to the Links field.
func (o *DevopsInput) SetLinks(v DevopsInputLinks) {
	o.Links = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DevopsInput) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevopsInput) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DevopsInput) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DevopsInput) SetId(v string) {
	o.Id = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *DevopsInput) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevopsInput) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *DevopsInput) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *DevopsInput) SetMessage(v string) {
	o.Message = &v
}

// GetOk returns the Ok field value if set, zero value otherwise.
func (o *DevopsInput) GetOk() string {
	if o == nil || IsNil(o.Ok) {
		var ret string
		return ret
	}
	return *o.Ok
}

// GetOkOk returns a tuple with the Ok field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevopsInput) GetOkOk() (*string, bool) {
	if o == nil || IsNil(o.Ok) {
		return nil, false
	}
	return o.Ok, true
}

// HasOk returns a boolean if a field has been set.
func (o *DevopsInput) HasOk() bool {
	if o != nil && !IsNil(o.Ok) {
		return true
	}

	return false
}

// SetOk gets a reference to the given string and assigns it to the Ok field.
func (o *DevopsInput) SetOk(v string) {
	o.Ok = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *DevopsInput) GetParameters() []map[string]interface{} {
	if o == nil || IsNil(o.Parameters) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevopsInput) GetParametersOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *DevopsInput) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []map[string]interface{} and assigns it to the Parameters field.
func (o *DevopsInput) SetParameters(v []map[string]interface{}) {
	o.Parameters = v
}

// GetSubmitter returns the Submitter field value if set, zero value otherwise.
func (o *DevopsInput) GetSubmitter() map[string]interface{} {
	if o == nil || IsNil(o.Submitter) {
		var ret map[string]interface{}
		return ret
	}
	return o.Submitter
}

// GetSubmitterOk returns a tuple with the Submitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevopsInput) GetSubmitterOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Submitter) {
		return map[string]interface{}{}, false
	}
	return o.Submitter, true
}

// HasSubmitter returns a boolean if a field has been set.
func (o *DevopsInput) HasSubmitter() bool {
	if o != nil && !IsNil(o.Submitter) {
		return true
	}

	return false
}

// SetSubmitter gets a reference to the given map[string]interface{} and assigns it to the Submitter field.
func (o *DevopsInput) SetSubmitter(v map[string]interface{}) {
	o.Submitter = v
}

func (o DevopsInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DevopsInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Class) {
		toSerialize["_class"] = o.Class
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Ok) {
		toSerialize["ok"] = o.Ok
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	if !IsNil(o.Submitter) {
		toSerialize["submitter"] = o.Submitter
	}
	return toSerialize, nil
}

type NullableDevopsInput struct {
	value *DevopsInput
	isSet bool
}

func (v NullableDevopsInput) Get() *DevopsInput {
	return v.value
}

func (v *NullableDevopsInput) Set(val *DevopsInput) {
	v.value = val
	v.isSet = true
}

func (v NullableDevopsInput) IsSet() bool {
	return v.isSet
}

func (v *NullableDevopsInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDevopsInput(val *DevopsInput) *NullableDevopsInput {
	return &NullableDevopsInput{value: val, isSet: true}
}

func (v NullableDevopsInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDevopsInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


