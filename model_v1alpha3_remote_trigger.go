/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1alpha3RemoteTrigger type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1alpha3RemoteTrigger{}

// V1alpha3RemoteTrigger struct for V1alpha3RemoteTrigger
type V1alpha3RemoteTrigger struct {
	// remote trigger token
	Token *string `json:"token,omitempty"`
}

// NewV1alpha3RemoteTrigger instantiates a new V1alpha3RemoteTrigger object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha3RemoteTrigger() *V1alpha3RemoteTrigger {
	this := V1alpha3RemoteTrigger{}
	return &this
}

// NewV1alpha3RemoteTriggerWithDefaults instantiates a new V1alpha3RemoteTrigger object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha3RemoteTriggerWithDefaults() *V1alpha3RemoteTrigger {
	this := V1alpha3RemoteTrigger{}
	return &this
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *V1alpha3RemoteTrigger) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha3RemoteTrigger) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *V1alpha3RemoteTrigger) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *V1alpha3RemoteTrigger) SetToken(v string) {
	o.Token = &v
}

func (o V1alpha3RemoteTrigger) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1alpha3RemoteTrigger) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullableV1alpha3RemoteTrigger struct {
	value *V1alpha3RemoteTrigger
	isSet bool
}

func (v NullableV1alpha3RemoteTrigger) Get() *V1alpha3RemoteTrigger {
	return v.value
}

func (v *NullableV1alpha3RemoteTrigger) Set(val *V1alpha3RemoteTrigger) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha3RemoteTrigger) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha3RemoteTrigger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha3RemoteTrigger(val *V1alpha3RemoteTrigger) *NullableV1alpha3RemoteTrigger {
	return &NullableV1alpha3RemoteTrigger{value: val, isSet: true}
}

func (v NullableV1alpha3RemoteTrigger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha3RemoteTrigger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


