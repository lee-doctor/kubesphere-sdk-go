/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DevopsCreateScmServerReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DevopsCreateScmServerReq{}

// DevopsCreateScmServerReq struct for DevopsCreateScmServerReq
type DevopsCreateScmServerReq struct {
	// url of scm server
	ApiUrl *string `json:"apiUrl,omitempty"`
	// name of scm server
	Name *string `json:"name,omitempty"`
}

// NewDevopsCreateScmServerReq instantiates a new DevopsCreateScmServerReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDevopsCreateScmServerReq() *DevopsCreateScmServerReq {
	this := DevopsCreateScmServerReq{}
	return &this
}

// NewDevopsCreateScmServerReqWithDefaults instantiates a new DevopsCreateScmServerReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDevopsCreateScmServerReqWithDefaults() *DevopsCreateScmServerReq {
	this := DevopsCreateScmServerReq{}
	return &this
}

// GetApiUrl returns the ApiUrl field value if set, zero value otherwise.
func (o *DevopsCreateScmServerReq) GetApiUrl() string {
	if o == nil || IsNil(o.ApiUrl) {
		var ret string
		return ret
	}
	return *o.ApiUrl
}

// GetApiUrlOk returns a tuple with the ApiUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevopsCreateScmServerReq) GetApiUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ApiUrl) {
		return nil, false
	}
	return o.ApiUrl, true
}

// HasApiUrl returns a boolean if a field has been set.
func (o *DevopsCreateScmServerReq) HasApiUrl() bool {
	if o != nil && !IsNil(o.ApiUrl) {
		return true
	}

	return false
}

// SetApiUrl gets a reference to the given string and assigns it to the ApiUrl field.
func (o *DevopsCreateScmServerReq) SetApiUrl(v string) {
	o.ApiUrl = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DevopsCreateScmServerReq) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevopsCreateScmServerReq) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DevopsCreateScmServerReq) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DevopsCreateScmServerReq) SetName(v string) {
	o.Name = &v
}

func (o DevopsCreateScmServerReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DevopsCreateScmServerReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiUrl) {
		toSerialize["apiUrl"] = o.ApiUrl
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableDevopsCreateScmServerReq struct {
	value *DevopsCreateScmServerReq
	isSet bool
}

func (v NullableDevopsCreateScmServerReq) Get() *DevopsCreateScmServerReq {
	return v.value
}

func (v *NullableDevopsCreateScmServerReq) Set(val *DevopsCreateScmServerReq) {
	v.value = val
	v.isSet = true
}

func (v NullableDevopsCreateScmServerReq) IsSet() bool {
	return v.isSet
}

func (v *NullableDevopsCreateScmServerReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDevopsCreateScmServerReq(val *DevopsCreateScmServerReq) *NullableDevopsCreateScmServerReq {
	return &NullableDevopsCreateScmServerReq{value: val, isSet: true}
}

func (v NullableDevopsCreateScmServerReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDevopsCreateScmServerReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


