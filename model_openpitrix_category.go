/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OpenpitrixCategory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenpitrixCategory{}

// OpenpitrixCategory struct for OpenpitrixCategory
type OpenpitrixCategory struct {
	AppTotal *int32 `json:"app_total,omitempty"`
	CategoryId *string `json:"category_id,omitempty"`
	CreateTime *string `json:"create_time,omitempty"`
	Description *string `json:"description,omitempty"`
	Icon *string `json:"icon,omitempty"`
	Locale *string `json:"locale,omitempty"`
	Name *string `json:"name,omitempty"`
	Owner *string `json:"owner,omitempty"`
	UpdateTime *string `json:"update_time,omitempty"`
}

// NewOpenpitrixCategory instantiates a new OpenpitrixCategory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenpitrixCategory() *OpenpitrixCategory {
	this := OpenpitrixCategory{}
	return &this
}

// NewOpenpitrixCategoryWithDefaults instantiates a new OpenpitrixCategory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenpitrixCategoryWithDefaults() *OpenpitrixCategory {
	this := OpenpitrixCategory{}
	return &this
}

// GetAppTotal returns the AppTotal field value if set, zero value otherwise.
func (o *OpenpitrixCategory) GetAppTotal() int32 {
	if o == nil || IsNil(o.AppTotal) {
		var ret int32
		return ret
	}
	return *o.AppTotal
}

// GetAppTotalOk returns a tuple with the AppTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixCategory) GetAppTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.AppTotal) {
		return nil, false
	}
	return o.AppTotal, true
}

// HasAppTotal returns a boolean if a field has been set.
func (o *OpenpitrixCategory) HasAppTotal() bool {
	if o != nil && !IsNil(o.AppTotal) {
		return true
	}

	return false
}

// SetAppTotal gets a reference to the given int32 and assigns it to the AppTotal field.
func (o *OpenpitrixCategory) SetAppTotal(v int32) {
	o.AppTotal = &v
}

// GetCategoryId returns the CategoryId field value if set, zero value otherwise.
func (o *OpenpitrixCategory) GetCategoryId() string {
	if o == nil || IsNil(o.CategoryId) {
		var ret string
		return ret
	}
	return *o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixCategory) GetCategoryIdOk() (*string, bool) {
	if o == nil || IsNil(o.CategoryId) {
		return nil, false
	}
	return o.CategoryId, true
}

// HasCategoryId returns a boolean if a field has been set.
func (o *OpenpitrixCategory) HasCategoryId() bool {
	if o != nil && !IsNil(o.CategoryId) {
		return true
	}

	return false
}

// SetCategoryId gets a reference to the given string and assigns it to the CategoryId field.
func (o *OpenpitrixCategory) SetCategoryId(v string) {
	o.CategoryId = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *OpenpitrixCategory) GetCreateTime() string {
	if o == nil || IsNil(o.CreateTime) {
		var ret string
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixCategory) GetCreateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *OpenpitrixCategory) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given string and assigns it to the CreateTime field.
func (o *OpenpitrixCategory) SetCreateTime(v string) {
	o.CreateTime = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OpenpitrixCategory) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixCategory) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OpenpitrixCategory) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OpenpitrixCategory) SetDescription(v string) {
	o.Description = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *OpenpitrixCategory) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixCategory) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *OpenpitrixCategory) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *OpenpitrixCategory) SetIcon(v string) {
	o.Icon = &v
}

// GetLocale returns the Locale field value if set, zero value otherwise.
func (o *OpenpitrixCategory) GetLocale() string {
	if o == nil || IsNil(o.Locale) {
		var ret string
		return ret
	}
	return *o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixCategory) GetLocaleOk() (*string, bool) {
	if o == nil || IsNil(o.Locale) {
		return nil, false
	}
	return o.Locale, true
}

// HasLocale returns a boolean if a field has been set.
func (o *OpenpitrixCategory) HasLocale() bool {
	if o != nil && !IsNil(o.Locale) {
		return true
	}

	return false
}

// SetLocale gets a reference to the given string and assigns it to the Locale field.
func (o *OpenpitrixCategory) SetLocale(v string) {
	o.Locale = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OpenpitrixCategory) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixCategory) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OpenpitrixCategory) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OpenpitrixCategory) SetName(v string) {
	o.Name = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *OpenpitrixCategory) GetOwner() string {
	if o == nil || IsNil(o.Owner) {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixCategory) GetOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *OpenpitrixCategory) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *OpenpitrixCategory) SetOwner(v string) {
	o.Owner = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *OpenpitrixCategory) GetUpdateTime() string {
	if o == nil || IsNil(o.UpdateTime) {
		var ret string
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixCategory) GetUpdateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *OpenpitrixCategory) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given string and assigns it to the UpdateTime field.
func (o *OpenpitrixCategory) SetUpdateTime(v string) {
	o.UpdateTime = &v
}

func (o OpenpitrixCategory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenpitrixCategory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppTotal) {
		toSerialize["app_total"] = o.AppTotal
	}
	if !IsNil(o.CategoryId) {
		toSerialize["category_id"] = o.CategoryId
	}
	if !IsNil(o.CreateTime) {
		toSerialize["create_time"] = o.CreateTime
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if !IsNil(o.Locale) {
		toSerialize["locale"] = o.Locale
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["update_time"] = o.UpdateTime
	}
	return toSerialize, nil
}

type NullableOpenpitrixCategory struct {
	value *OpenpitrixCategory
	isSet bool
}

func (v NullableOpenpitrixCategory) Get() *OpenpitrixCategory {
	return v.value
}

func (v *NullableOpenpitrixCategory) Set(val *OpenpitrixCategory) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenpitrixCategory) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenpitrixCategory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenpitrixCategory(val *OpenpitrixCategory) *NullableOpenpitrixCategory {
	return &NullableOpenpitrixCategory{value: val, isSet: true}
}

func (v NullableOpenpitrixCategory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenpitrixCategory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


