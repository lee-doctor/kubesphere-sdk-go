/*
KS API

Testing WebTerminalAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	openapiclient "github.com/lee-doctor/kubesphere-sdk-go"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_openapi_WebTerminalAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test WebTerminalAPIService CreateNodeExec", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var nodename string

		httpRes, err := apiClient.WebTerminalAPI.CreateNodeExec(context.Background(), nodename).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test WebTerminalAPIService CreatePodExec", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var namespace string
		var pod string

		httpRes, err := apiClient.WebTerminalAPI.CreatePodExec(context.Background(), namespace, pod).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test WebTerminalAPIService CreateUserKubectlPodExec", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var user string

		httpRes, err := apiClient.WebTerminalAPI.CreateUserKubectlPodExec(context.Background(), user).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test WebTerminalAPIService DownloadFileFromPod", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var namespace string
		var pod string

		httpRes, err := apiClient.WebTerminalAPI.DownloadFileFromPod(context.Background(), namespace, pod).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test WebTerminalAPIService UploadFileToPod", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var namespace string
		var pod string

		httpRes, err := apiClient.WebTerminalAPI.UploadFileToPod(context.Background(), namespace, pod).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
