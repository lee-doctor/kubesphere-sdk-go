/*
KubeSphere

Testing NamespaceMemberAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	openapiclient "github.com/lee-doctor/kubesphere-sdk-go"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_openapi_NamespaceMemberAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test NamespaceMemberAPIService CreateAllNamespaceMembers", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var namespace string

		resp, httpRes, err := apiClient.NamespaceMemberAPI.CreateAllNamespaceMembers(context.Background(), namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test NamespaceMemberAPIService DescribeNamespaceMember", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var namespace string
		var member string

		resp, httpRes, err := apiClient.NamespaceMemberAPI.DescribeNamespaceMember(context.Background(), namespace, member).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test NamespaceMemberAPIService ListNamespaceMembers", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var namespace string

		resp, httpRes, err := apiClient.NamespaceMemberAPI.ListNamespaceMembers(context.Background(), namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test NamespaceMemberAPIService RemoveNamespaceMember", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var namespace string
		var member string

		resp, httpRes, err := apiClient.NamespaceMemberAPI.RemoveNamespaceMember(context.Background(), namespace, member).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test NamespaceMemberAPIService UpdateNamespaceMember", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var namespace string
		var member string

		resp, httpRes, err := apiClient.NamespaceMemberAPI.UpdateNamespaceMember(context.Background(), namespace, member).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
