/*
KS API

Testing ComponentStatusAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	openapiclient "github.com/lee-doctor/kubesphere-sdk-go"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_openapi_ComponentStatusAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ComponentStatusAPIService GetComponentsStatusV1alpha2", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var component string

		resp, httpRes, err := apiClient.ComponentStatusAPI.GetComponentsStatusV1alpha2(context.Background(), component).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ComponentStatusAPIService GetComponentsStatusV1alpha3", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var component string

		resp, httpRes, err := apiClient.ComponentStatusAPI.GetComponentsStatusV1alpha3(context.Background(), component).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ComponentStatusAPIService GetComponentsV1alpha2", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.ComponentStatusAPI.GetComponentsV1alpha2(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ComponentStatusAPIService GetComponentsV1alpha3", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.ComponentStatusAPI.GetComponentsV1alpha3(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ComponentStatusAPIService GetSystemHealthStatusV1alpha2", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.ComponentStatusAPI.GetSystemHealthStatusV1alpha2(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ComponentStatusAPIService GetSystemHealthStatusV1alpha3", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.ComponentStatusAPI.GetSystemHealthStatusV1alpha3(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
