/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V1alpha2MetricRow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1alpha2MetricRow{}

// V1alpha2MetricRow struct for V1alpha2MetricRow
type V1alpha2MetricRow struct {
	Format string `json:"Format"`
	Group string `json:"Group"`
	ID string `json:"ID"`
	Label string `json:"Label"`
	Metric V1alpha2Metric `json:"Metric"`
	Priority float64 `json:"Priority"`
	URL string `json:"URL"`
	Value float64 `json:"Value"`
	ValueEmpty bool `json:"ValueEmpty"`
}

type _V1alpha2MetricRow V1alpha2MetricRow

// NewV1alpha2MetricRow instantiates a new V1alpha2MetricRow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha2MetricRow(format string, group string, iD string, label string, metric V1alpha2Metric, priority float64, uRL string, value float64, valueEmpty bool) *V1alpha2MetricRow {
	this := V1alpha2MetricRow{}
	this.Format = format
	this.Group = group
	this.ID = iD
	this.Label = label
	this.Metric = metric
	this.Priority = priority
	this.URL = uRL
	this.Value = value
	this.ValueEmpty = valueEmpty
	return &this
}

// NewV1alpha2MetricRowWithDefaults instantiates a new V1alpha2MetricRow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha2MetricRowWithDefaults() *V1alpha2MetricRow {
	this := V1alpha2MetricRow{}
	return &this
}

// GetFormat returns the Format field value
func (o *V1alpha2MetricRow) GetFormat() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Format
}

// GetFormatOk returns a tuple with the Format field value
// and a boolean to check if the value has been set.
func (o *V1alpha2MetricRow) GetFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Format, true
}

// SetFormat sets field value
func (o *V1alpha2MetricRow) SetFormat(v string) {
	o.Format = v
}

// GetGroup returns the Group field value
func (o *V1alpha2MetricRow) GetGroup() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Group
}

// GetGroupOk returns a tuple with the Group field value
// and a boolean to check if the value has been set.
func (o *V1alpha2MetricRow) GetGroupOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Group, true
}

// SetGroup sets field value
func (o *V1alpha2MetricRow) SetGroup(v string) {
	o.Group = v
}

// GetID returns the ID field value
func (o *V1alpha2MetricRow) GetID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ID
}

// GetIDOk returns a tuple with the ID field value
// and a boolean to check if the value has been set.
func (o *V1alpha2MetricRow) GetIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ID, true
}

// SetID sets field value
func (o *V1alpha2MetricRow) SetID(v string) {
	o.ID = v
}

// GetLabel returns the Label field value
func (o *V1alpha2MetricRow) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *V1alpha2MetricRow) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *V1alpha2MetricRow) SetLabel(v string) {
	o.Label = v
}

// GetMetric returns the Metric field value
func (o *V1alpha2MetricRow) GetMetric() V1alpha2Metric {
	if o == nil {
		var ret V1alpha2Metric
		return ret
	}

	return o.Metric
}

// GetMetricOk returns a tuple with the Metric field value
// and a boolean to check if the value has been set.
func (o *V1alpha2MetricRow) GetMetricOk() (*V1alpha2Metric, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metric, true
}

// SetMetric sets field value
func (o *V1alpha2MetricRow) SetMetric(v V1alpha2Metric) {
	o.Metric = v
}

// GetPriority returns the Priority field value
func (o *V1alpha2MetricRow) GetPriority() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value
// and a boolean to check if the value has been set.
func (o *V1alpha2MetricRow) GetPriorityOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Priority, true
}

// SetPriority sets field value
func (o *V1alpha2MetricRow) SetPriority(v float64) {
	o.Priority = v
}

// GetURL returns the URL field value
func (o *V1alpha2MetricRow) GetURL() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.URL
}

// GetURLOk returns a tuple with the URL field value
// and a boolean to check if the value has been set.
func (o *V1alpha2MetricRow) GetURLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.URL, true
}

// SetURL sets field value
func (o *V1alpha2MetricRow) SetURL(v string) {
	o.URL = v
}

// GetValue returns the Value field value
func (o *V1alpha2MetricRow) GetValue() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *V1alpha2MetricRow) GetValueOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *V1alpha2MetricRow) SetValue(v float64) {
	o.Value = v
}

// GetValueEmpty returns the ValueEmpty field value
func (o *V1alpha2MetricRow) GetValueEmpty() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ValueEmpty
}

// GetValueEmptyOk returns a tuple with the ValueEmpty field value
// and a boolean to check if the value has been set.
func (o *V1alpha2MetricRow) GetValueEmptyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValueEmpty, true
}

// SetValueEmpty sets field value
func (o *V1alpha2MetricRow) SetValueEmpty(v bool) {
	o.ValueEmpty = v
}

func (o V1alpha2MetricRow) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1alpha2MetricRow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Format"] = o.Format
	toSerialize["Group"] = o.Group
	toSerialize["ID"] = o.ID
	toSerialize["Label"] = o.Label
	toSerialize["Metric"] = o.Metric
	toSerialize["Priority"] = o.Priority
	toSerialize["URL"] = o.URL
	toSerialize["Value"] = o.Value
	toSerialize["ValueEmpty"] = o.ValueEmpty
	return toSerialize, nil
}

func (o *V1alpha2MetricRow) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"Format",
		"Group",
		"ID",
		"Label",
		"Metric",
		"Priority",
		"URL",
		"Value",
		"ValueEmpty",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV1alpha2MetricRow := _V1alpha2MetricRow{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV1alpha2MetricRow)

	if err != nil {
		return err
	}

	*o = V1alpha2MetricRow(varV1alpha2MetricRow)

	return err
}

type NullableV1alpha2MetricRow struct {
	value *V1alpha2MetricRow
	isSet bool
}

func (v NullableV1alpha2MetricRow) Get() *V1alpha2MetricRow {
	return v.value
}

func (v *NullableV1alpha2MetricRow) Set(val *V1alpha2MetricRow) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha2MetricRow) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha2MetricRow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha2MetricRow(val *V1alpha2MetricRow) *NullableV1alpha2MetricRow {
	return &NullableV1alpha2MetricRow{value: val, isSet: true}
}

func (v NullableV1alpha2MetricRow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha2MetricRow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


