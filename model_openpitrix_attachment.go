/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OpenpitrixAttachment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenpitrixAttachment{}

// OpenpitrixAttachment struct for OpenpitrixAttachment
type OpenpitrixAttachment struct {
	AttachmentContent *map[string]string `json:"attachment_content,omitempty"`
	AttachmentId *string `json:"attachment_id,omitempty"`
	CreateTime *string `json:"create_time,omitempty"`
}

// NewOpenpitrixAttachment instantiates a new OpenpitrixAttachment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenpitrixAttachment() *OpenpitrixAttachment {
	this := OpenpitrixAttachment{}
	return &this
}

// NewOpenpitrixAttachmentWithDefaults instantiates a new OpenpitrixAttachment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenpitrixAttachmentWithDefaults() *OpenpitrixAttachment {
	this := OpenpitrixAttachment{}
	return &this
}

// GetAttachmentContent returns the AttachmentContent field value if set, zero value otherwise.
func (o *OpenpitrixAttachment) GetAttachmentContent() map[string]string {
	if o == nil || IsNil(o.AttachmentContent) {
		var ret map[string]string
		return ret
	}
	return *o.AttachmentContent
}

// GetAttachmentContentOk returns a tuple with the AttachmentContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAttachment) GetAttachmentContentOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.AttachmentContent) {
		return nil, false
	}
	return o.AttachmentContent, true
}

// HasAttachmentContent returns a boolean if a field has been set.
func (o *OpenpitrixAttachment) HasAttachmentContent() bool {
	if o != nil && !IsNil(o.AttachmentContent) {
		return true
	}

	return false
}

// SetAttachmentContent gets a reference to the given map[string]string and assigns it to the AttachmentContent field.
func (o *OpenpitrixAttachment) SetAttachmentContent(v map[string]string) {
	o.AttachmentContent = &v
}

// GetAttachmentId returns the AttachmentId field value if set, zero value otherwise.
func (o *OpenpitrixAttachment) GetAttachmentId() string {
	if o == nil || IsNil(o.AttachmentId) {
		var ret string
		return ret
	}
	return *o.AttachmentId
}

// GetAttachmentIdOk returns a tuple with the AttachmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAttachment) GetAttachmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.AttachmentId) {
		return nil, false
	}
	return o.AttachmentId, true
}

// HasAttachmentId returns a boolean if a field has been set.
func (o *OpenpitrixAttachment) HasAttachmentId() bool {
	if o != nil && !IsNil(o.AttachmentId) {
		return true
	}

	return false
}

// SetAttachmentId gets a reference to the given string and assigns it to the AttachmentId field.
func (o *OpenpitrixAttachment) SetAttachmentId(v string) {
	o.AttachmentId = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *OpenpitrixAttachment) GetCreateTime() string {
	if o == nil || IsNil(o.CreateTime) {
		var ret string
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAttachment) GetCreateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *OpenpitrixAttachment) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given string and assigns it to the CreateTime field.
func (o *OpenpitrixAttachment) SetCreateTime(v string) {
	o.CreateTime = &v
}

func (o OpenpitrixAttachment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenpitrixAttachment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AttachmentContent) {
		toSerialize["attachment_content"] = o.AttachmentContent
	}
	if !IsNil(o.AttachmentId) {
		toSerialize["attachment_id"] = o.AttachmentId
	}
	if !IsNil(o.CreateTime) {
		toSerialize["create_time"] = o.CreateTime
	}
	return toSerialize, nil
}

type NullableOpenpitrixAttachment struct {
	value *OpenpitrixAttachment
	isSet bool
}

func (v NullableOpenpitrixAttachment) Get() *OpenpitrixAttachment {
	return v.value
}

func (v *NullableOpenpitrixAttachment) Set(val *OpenpitrixAttachment) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenpitrixAttachment) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenpitrixAttachment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenpitrixAttachment(val *OpenpitrixAttachment) *NullableOpenpitrixAttachment {
	return &NullableOpenpitrixAttachment{value: val, isSet: true}
}

func (v NullableOpenpitrixAttachment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenpitrixAttachment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


