/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OpenpitrixAppVersionReviewPhase type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenpitrixAppVersionReviewPhase{}

// OpenpitrixAppVersionReviewPhase struct for OpenpitrixAppVersionReviewPhase
type OpenpitrixAppVersionReviewPhase struct {
	Message *string `json:"message,omitempty"`
	Operator *string `json:"operator,omitempty"`
	OperatorType *string `json:"operator_type,omitempty"`
	ReviewTime *string `json:"review_time,omitempty"`
	Status *string `json:"status,omitempty"`
	StatusTime *string `json:"status_time,omitempty"`
}

// NewOpenpitrixAppVersionReviewPhase instantiates a new OpenpitrixAppVersionReviewPhase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenpitrixAppVersionReviewPhase() *OpenpitrixAppVersionReviewPhase {
	this := OpenpitrixAppVersionReviewPhase{}
	return &this
}

// NewOpenpitrixAppVersionReviewPhaseWithDefaults instantiates a new OpenpitrixAppVersionReviewPhase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenpitrixAppVersionReviewPhaseWithDefaults() *OpenpitrixAppVersionReviewPhase {
	this := OpenpitrixAppVersionReviewPhase{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *OpenpitrixAppVersionReviewPhase) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersionReviewPhase) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *OpenpitrixAppVersionReviewPhase) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *OpenpitrixAppVersionReviewPhase) SetMessage(v string) {
	o.Message = &v
}

// GetOperator returns the Operator field value if set, zero value otherwise.
func (o *OpenpitrixAppVersionReviewPhase) GetOperator() string {
	if o == nil || IsNil(o.Operator) {
		var ret string
		return ret
	}
	return *o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersionReviewPhase) GetOperatorOk() (*string, bool) {
	if o == nil || IsNil(o.Operator) {
		return nil, false
	}
	return o.Operator, true
}

// HasOperator returns a boolean if a field has been set.
func (o *OpenpitrixAppVersionReviewPhase) HasOperator() bool {
	if o != nil && !IsNil(o.Operator) {
		return true
	}

	return false
}

// SetOperator gets a reference to the given string and assigns it to the Operator field.
func (o *OpenpitrixAppVersionReviewPhase) SetOperator(v string) {
	o.Operator = &v
}

// GetOperatorType returns the OperatorType field value if set, zero value otherwise.
func (o *OpenpitrixAppVersionReviewPhase) GetOperatorType() string {
	if o == nil || IsNil(o.OperatorType) {
		var ret string
		return ret
	}
	return *o.OperatorType
}

// GetOperatorTypeOk returns a tuple with the OperatorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersionReviewPhase) GetOperatorTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OperatorType) {
		return nil, false
	}
	return o.OperatorType, true
}

// HasOperatorType returns a boolean if a field has been set.
func (o *OpenpitrixAppVersionReviewPhase) HasOperatorType() bool {
	if o != nil && !IsNil(o.OperatorType) {
		return true
	}

	return false
}

// SetOperatorType gets a reference to the given string and assigns it to the OperatorType field.
func (o *OpenpitrixAppVersionReviewPhase) SetOperatorType(v string) {
	o.OperatorType = &v
}

// GetReviewTime returns the ReviewTime field value if set, zero value otherwise.
func (o *OpenpitrixAppVersionReviewPhase) GetReviewTime() string {
	if o == nil || IsNil(o.ReviewTime) {
		var ret string
		return ret
	}
	return *o.ReviewTime
}

// GetReviewTimeOk returns a tuple with the ReviewTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersionReviewPhase) GetReviewTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ReviewTime) {
		return nil, false
	}
	return o.ReviewTime, true
}

// HasReviewTime returns a boolean if a field has been set.
func (o *OpenpitrixAppVersionReviewPhase) HasReviewTime() bool {
	if o != nil && !IsNil(o.ReviewTime) {
		return true
	}

	return false
}

// SetReviewTime gets a reference to the given string and assigns it to the ReviewTime field.
func (o *OpenpitrixAppVersionReviewPhase) SetReviewTime(v string) {
	o.ReviewTime = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OpenpitrixAppVersionReviewPhase) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersionReviewPhase) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OpenpitrixAppVersionReviewPhase) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OpenpitrixAppVersionReviewPhase) SetStatus(v string) {
	o.Status = &v
}

// GetStatusTime returns the StatusTime field value if set, zero value otherwise.
func (o *OpenpitrixAppVersionReviewPhase) GetStatusTime() string {
	if o == nil || IsNil(o.StatusTime) {
		var ret string
		return ret
	}
	return *o.StatusTime
}

// GetStatusTimeOk returns a tuple with the StatusTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixAppVersionReviewPhase) GetStatusTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StatusTime) {
		return nil, false
	}
	return o.StatusTime, true
}

// HasStatusTime returns a boolean if a field has been set.
func (o *OpenpitrixAppVersionReviewPhase) HasStatusTime() bool {
	if o != nil && !IsNil(o.StatusTime) {
		return true
	}

	return false
}

// SetStatusTime gets a reference to the given string and assigns it to the StatusTime field.
func (o *OpenpitrixAppVersionReviewPhase) SetStatusTime(v string) {
	o.StatusTime = &v
}

func (o OpenpitrixAppVersionReviewPhase) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenpitrixAppVersionReviewPhase) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Operator) {
		toSerialize["operator"] = o.Operator
	}
	if !IsNil(o.OperatorType) {
		toSerialize["operator_type"] = o.OperatorType
	}
	if !IsNil(o.ReviewTime) {
		toSerialize["review_time"] = o.ReviewTime
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusTime) {
		toSerialize["status_time"] = o.StatusTime
	}
	return toSerialize, nil
}

type NullableOpenpitrixAppVersionReviewPhase struct {
	value *OpenpitrixAppVersionReviewPhase
	isSet bool
}

func (v NullableOpenpitrixAppVersionReviewPhase) Get() *OpenpitrixAppVersionReviewPhase {
	return v.value
}

func (v *NullableOpenpitrixAppVersionReviewPhase) Set(val *OpenpitrixAppVersionReviewPhase) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenpitrixAppVersionReviewPhase) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenpitrixAppVersionReviewPhase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenpitrixAppVersionReviewPhase(val *OpenpitrixAppVersionReviewPhase) *NullableOpenpitrixAppVersionReviewPhase {
	return &NullableOpenpitrixAppVersionReviewPhase{value: val, isSet: true}
}

func (v NullableOpenpitrixAppVersionReviewPhase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenpitrixAppVersionReviewPhase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


