/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OpenpitrixCreateAppRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenpitrixCreateAppRequest{}

// OpenpitrixCreateAppRequest struct for OpenpitrixCreateAppRequest
type OpenpitrixCreateAppRequest struct {
	Icon *string `json:"icon,omitempty"`
	Isv *string `json:"isv,omitempty"`
	Name *string `json:"name,omitempty"`
	VersionName *string `json:"version_name,omitempty"`
	VersionPackage *string `json:"version_package,omitempty"`
	VersionType *string `json:"version_type,omitempty"`
}

// NewOpenpitrixCreateAppRequest instantiates a new OpenpitrixCreateAppRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenpitrixCreateAppRequest() *OpenpitrixCreateAppRequest {
	this := OpenpitrixCreateAppRequest{}
	return &this
}

// NewOpenpitrixCreateAppRequestWithDefaults instantiates a new OpenpitrixCreateAppRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenpitrixCreateAppRequestWithDefaults() *OpenpitrixCreateAppRequest {
	this := OpenpitrixCreateAppRequest{}
	return &this
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *OpenpitrixCreateAppRequest) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixCreateAppRequest) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *OpenpitrixCreateAppRequest) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *OpenpitrixCreateAppRequest) SetIcon(v string) {
	o.Icon = &v
}

// GetIsv returns the Isv field value if set, zero value otherwise.
func (o *OpenpitrixCreateAppRequest) GetIsv() string {
	if o == nil || IsNil(o.Isv) {
		var ret string
		return ret
	}
	return *o.Isv
}

// GetIsvOk returns a tuple with the Isv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixCreateAppRequest) GetIsvOk() (*string, bool) {
	if o == nil || IsNil(o.Isv) {
		return nil, false
	}
	return o.Isv, true
}

// HasIsv returns a boolean if a field has been set.
func (o *OpenpitrixCreateAppRequest) HasIsv() bool {
	if o != nil && !IsNil(o.Isv) {
		return true
	}

	return false
}

// SetIsv gets a reference to the given string and assigns it to the Isv field.
func (o *OpenpitrixCreateAppRequest) SetIsv(v string) {
	o.Isv = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OpenpitrixCreateAppRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixCreateAppRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OpenpitrixCreateAppRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OpenpitrixCreateAppRequest) SetName(v string) {
	o.Name = &v
}

// GetVersionName returns the VersionName field value if set, zero value otherwise.
func (o *OpenpitrixCreateAppRequest) GetVersionName() string {
	if o == nil || IsNil(o.VersionName) {
		var ret string
		return ret
	}
	return *o.VersionName
}

// GetVersionNameOk returns a tuple with the VersionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixCreateAppRequest) GetVersionNameOk() (*string, bool) {
	if o == nil || IsNil(o.VersionName) {
		return nil, false
	}
	return o.VersionName, true
}

// HasVersionName returns a boolean if a field has been set.
func (o *OpenpitrixCreateAppRequest) HasVersionName() bool {
	if o != nil && !IsNil(o.VersionName) {
		return true
	}

	return false
}

// SetVersionName gets a reference to the given string and assigns it to the VersionName field.
func (o *OpenpitrixCreateAppRequest) SetVersionName(v string) {
	o.VersionName = &v
}

// GetVersionPackage returns the VersionPackage field value if set, zero value otherwise.
func (o *OpenpitrixCreateAppRequest) GetVersionPackage() string {
	if o == nil || IsNil(o.VersionPackage) {
		var ret string
		return ret
	}
	return *o.VersionPackage
}

// GetVersionPackageOk returns a tuple with the VersionPackage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixCreateAppRequest) GetVersionPackageOk() (*string, bool) {
	if o == nil || IsNil(o.VersionPackage) {
		return nil, false
	}
	return o.VersionPackage, true
}

// HasVersionPackage returns a boolean if a field has been set.
func (o *OpenpitrixCreateAppRequest) HasVersionPackage() bool {
	if o != nil && !IsNil(o.VersionPackage) {
		return true
	}

	return false
}

// SetVersionPackage gets a reference to the given string and assigns it to the VersionPackage field.
func (o *OpenpitrixCreateAppRequest) SetVersionPackage(v string) {
	o.VersionPackage = &v
}

// GetVersionType returns the VersionType field value if set, zero value otherwise.
func (o *OpenpitrixCreateAppRequest) GetVersionType() string {
	if o == nil || IsNil(o.VersionType) {
		var ret string
		return ret
	}
	return *o.VersionType
}

// GetVersionTypeOk returns a tuple with the VersionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixCreateAppRequest) GetVersionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.VersionType) {
		return nil, false
	}
	return o.VersionType, true
}

// HasVersionType returns a boolean if a field has been set.
func (o *OpenpitrixCreateAppRequest) HasVersionType() bool {
	if o != nil && !IsNil(o.VersionType) {
		return true
	}

	return false
}

// SetVersionType gets a reference to the given string and assigns it to the VersionType field.
func (o *OpenpitrixCreateAppRequest) SetVersionType(v string) {
	o.VersionType = &v
}

func (o OpenpitrixCreateAppRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenpitrixCreateAppRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if !IsNil(o.Isv) {
		toSerialize["isv"] = o.Isv
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.VersionName) {
		toSerialize["version_name"] = o.VersionName
	}
	if !IsNil(o.VersionPackage) {
		toSerialize["version_package"] = o.VersionPackage
	}
	if !IsNil(o.VersionType) {
		toSerialize["version_type"] = o.VersionType
	}
	return toSerialize, nil
}

type NullableOpenpitrixCreateAppRequest struct {
	value *OpenpitrixCreateAppRequest
	isSet bool
}

func (v NullableOpenpitrixCreateAppRequest) Get() *OpenpitrixCreateAppRequest {
	return v.value
}

func (v *NullableOpenpitrixCreateAppRequest) Set(val *OpenpitrixCreateAppRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenpitrixCreateAppRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenpitrixCreateAppRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenpitrixCreateAppRequest(val *OpenpitrixCreateAppRequest) *NullableOpenpitrixCreateAppRequest {
	return &NullableOpenpitrixCreateAppRequest{value: val, isSet: true}
}

func (v NullableOpenpitrixCreateAppRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenpitrixCreateAppRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


