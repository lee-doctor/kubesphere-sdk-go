/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1DeploymentStrategy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DeploymentStrategy{}

// V1DeploymentStrategy DeploymentStrategy describes how to replace existing pods with new ones.
type V1DeploymentStrategy struct {
	RollingUpdate *V1RollingUpdateDeployment `json:"rollingUpdate,omitempty"`
	// Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate.
	Type *string `json:"type,omitempty"`
}

// NewV1DeploymentStrategy instantiates a new V1DeploymentStrategy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DeploymentStrategy() *V1DeploymentStrategy {
	this := V1DeploymentStrategy{}
	return &this
}

// NewV1DeploymentStrategyWithDefaults instantiates a new V1DeploymentStrategy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DeploymentStrategyWithDefaults() *V1DeploymentStrategy {
	this := V1DeploymentStrategy{}
	return &this
}

// GetRollingUpdate returns the RollingUpdate field value if set, zero value otherwise.
func (o *V1DeploymentStrategy) GetRollingUpdate() V1RollingUpdateDeployment {
	if o == nil || IsNil(o.RollingUpdate) {
		var ret V1RollingUpdateDeployment
		return ret
	}
	return *o.RollingUpdate
}

// GetRollingUpdateOk returns a tuple with the RollingUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeploymentStrategy) GetRollingUpdateOk() (*V1RollingUpdateDeployment, bool) {
	if o == nil || IsNil(o.RollingUpdate) {
		return nil, false
	}
	return o.RollingUpdate, true
}

// HasRollingUpdate returns a boolean if a field has been set.
func (o *V1DeploymentStrategy) HasRollingUpdate() bool {
	if o != nil && !IsNil(o.RollingUpdate) {
		return true
	}

	return false
}

// SetRollingUpdate gets a reference to the given V1RollingUpdateDeployment and assigns it to the RollingUpdate field.
func (o *V1DeploymentStrategy) SetRollingUpdate(v V1RollingUpdateDeployment) {
	o.RollingUpdate = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *V1DeploymentStrategy) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeploymentStrategy) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *V1DeploymentStrategy) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *V1DeploymentStrategy) SetType(v string) {
	o.Type = &v
}

func (o V1DeploymentStrategy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DeploymentStrategy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RollingUpdate) {
		toSerialize["rollingUpdate"] = o.RollingUpdate
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableV1DeploymentStrategy struct {
	value *V1DeploymentStrategy
	isSet bool
}

func (v NullableV1DeploymentStrategy) Get() *V1DeploymentStrategy {
	return v.value
}

func (v *NullableV1DeploymentStrategy) Set(val *V1DeploymentStrategy) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DeploymentStrategy) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DeploymentStrategy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DeploymentStrategy(val *V1DeploymentStrategy) *NullableV1DeploymentStrategy {
	return &NullableV1DeploymentStrategy{value: val, isSet: true}
}

func (v NullableV1DeploymentStrategy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DeploymentStrategy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


