/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DevopsRunPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DevopsRunPayload{}

// DevopsRunPayload struct for DevopsRunPayload
type DevopsRunPayload struct {
	Parameters []DevopsRunPayloadParameters `json:"parameters,omitempty"`
}

// NewDevopsRunPayload instantiates a new DevopsRunPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDevopsRunPayload() *DevopsRunPayload {
	this := DevopsRunPayload{}
	return &this
}

// NewDevopsRunPayloadWithDefaults instantiates a new DevopsRunPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDevopsRunPayloadWithDefaults() *DevopsRunPayload {
	this := DevopsRunPayload{}
	return &this
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *DevopsRunPayload) GetParameters() []DevopsRunPayloadParameters {
	if o == nil || IsNil(o.Parameters) {
		var ret []DevopsRunPayloadParameters
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevopsRunPayload) GetParametersOk() ([]DevopsRunPayloadParameters, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *DevopsRunPayload) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []DevopsRunPayloadParameters and assigns it to the Parameters field.
func (o *DevopsRunPayload) SetParameters(v []DevopsRunPayloadParameters) {
	o.Parameters = v
}

func (o DevopsRunPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DevopsRunPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	return toSerialize, nil
}

type NullableDevopsRunPayload struct {
	value *DevopsRunPayload
	isSet bool
}

func (v NullableDevopsRunPayload) Get() *DevopsRunPayload {
	return v.value
}

func (v *NullableDevopsRunPayload) Set(val *DevopsRunPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableDevopsRunPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableDevopsRunPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDevopsRunPayload(val *DevopsRunPayload) *NullableDevopsRunPayload {
	return &NullableDevopsRunPayload{value: val, isSet: true}
}

func (v NullableDevopsRunPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDevopsRunPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


