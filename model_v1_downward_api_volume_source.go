/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1DownwardAPIVolumeSource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DownwardAPIVolumeSource{}

// V1DownwardAPIVolumeSource DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
type V1DownwardAPIVolumeSource struct {
	// Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode *int32 `json:"defaultMode,omitempty"`
	// Items is a list of downward API volume file
	Items []V1DownwardAPIVolumeFile `json:"items,omitempty"`
}

// NewV1DownwardAPIVolumeSource instantiates a new V1DownwardAPIVolumeSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DownwardAPIVolumeSource() *V1DownwardAPIVolumeSource {
	this := V1DownwardAPIVolumeSource{}
	return &this
}

// NewV1DownwardAPIVolumeSourceWithDefaults instantiates a new V1DownwardAPIVolumeSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DownwardAPIVolumeSourceWithDefaults() *V1DownwardAPIVolumeSource {
	this := V1DownwardAPIVolumeSource{}
	return &this
}

// GetDefaultMode returns the DefaultMode field value if set, zero value otherwise.
func (o *V1DownwardAPIVolumeSource) GetDefaultMode() int32 {
	if o == nil || IsNil(o.DefaultMode) {
		var ret int32
		return ret
	}
	return *o.DefaultMode
}

// GetDefaultModeOk returns a tuple with the DefaultMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DownwardAPIVolumeSource) GetDefaultModeOk() (*int32, bool) {
	if o == nil || IsNil(o.DefaultMode) {
		return nil, false
	}
	return o.DefaultMode, true
}

// HasDefaultMode returns a boolean if a field has been set.
func (o *V1DownwardAPIVolumeSource) HasDefaultMode() bool {
	if o != nil && !IsNil(o.DefaultMode) {
		return true
	}

	return false
}

// SetDefaultMode gets a reference to the given int32 and assigns it to the DefaultMode field.
func (o *V1DownwardAPIVolumeSource) SetDefaultMode(v int32) {
	o.DefaultMode = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *V1DownwardAPIVolumeSource) GetItems() []V1DownwardAPIVolumeFile {
	if o == nil || IsNil(o.Items) {
		var ret []V1DownwardAPIVolumeFile
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DownwardAPIVolumeSource) GetItemsOk() ([]V1DownwardAPIVolumeFile, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *V1DownwardAPIVolumeSource) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []V1DownwardAPIVolumeFile and assigns it to the Items field.
func (o *V1DownwardAPIVolumeSource) SetItems(v []V1DownwardAPIVolumeFile) {
	o.Items = v
}

func (o V1DownwardAPIVolumeSource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DownwardAPIVolumeSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultMode) {
		toSerialize["defaultMode"] = o.DefaultMode
	}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	return toSerialize, nil
}

type NullableV1DownwardAPIVolumeSource struct {
	value *V1DownwardAPIVolumeSource
	isSet bool
}

func (v NullableV1DownwardAPIVolumeSource) Get() *V1DownwardAPIVolumeSource {
	return v.value
}

func (v *NullableV1DownwardAPIVolumeSource) Set(val *V1DownwardAPIVolumeSource) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DownwardAPIVolumeSource) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DownwardAPIVolumeSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DownwardAPIVolumeSource(val *V1DownwardAPIVolumeSource) *NullableV1DownwardAPIVolumeSource {
	return &NullableV1DownwardAPIVolumeSource{value: val, isSet: true}
}

func (v NullableV1DownwardAPIVolumeSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DownwardAPIVolumeSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


