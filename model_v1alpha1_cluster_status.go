/*
KS API

KubeSphere OpenAPI

API version: v4.1.1
Contact: support@kubesphere.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1alpha1ClusterStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1alpha1ClusterStatus{}

// V1alpha1ClusterStatus struct for V1alpha1ClusterStatus
type V1alpha1ClusterStatus struct {
	Conditions []V1alpha1ClusterCondition `json:"conditions,omitempty"`
	Configz *map[string]bool `json:"configz,omitempty"`
	KubeSphereVersion *string `json:"kubeSphereVersion,omitempty"`
	KubernetesVersion *string `json:"kubernetesVersion,omitempty"`
	NodeCount *int32 `json:"nodeCount,omitempty"`
	Region *string `json:"region,omitempty"`
	Uid *string `json:"uid,omitempty"`
	Zones []string `json:"zones,omitempty"`
}

// NewV1alpha1ClusterStatus instantiates a new V1alpha1ClusterStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha1ClusterStatus() *V1alpha1ClusterStatus {
	this := V1alpha1ClusterStatus{}
	return &this
}

// NewV1alpha1ClusterStatusWithDefaults instantiates a new V1alpha1ClusterStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha1ClusterStatusWithDefaults() *V1alpha1ClusterStatus {
	this := V1alpha1ClusterStatus{}
	return &this
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *V1alpha1ClusterStatus) GetConditions() []V1alpha1ClusterCondition {
	if o == nil || IsNil(o.Conditions) {
		var ret []V1alpha1ClusterCondition
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ClusterStatus) GetConditionsOk() ([]V1alpha1ClusterCondition, bool) {
	if o == nil || IsNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *V1alpha1ClusterStatus) HasConditions() bool {
	if o != nil && !IsNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []V1alpha1ClusterCondition and assigns it to the Conditions field.
func (o *V1alpha1ClusterStatus) SetConditions(v []V1alpha1ClusterCondition) {
	o.Conditions = v
}

// GetConfigz returns the Configz field value if set, zero value otherwise.
func (o *V1alpha1ClusterStatus) GetConfigz() map[string]bool {
	if o == nil || IsNil(o.Configz) {
		var ret map[string]bool
		return ret
	}
	return *o.Configz
}

// GetConfigzOk returns a tuple with the Configz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ClusterStatus) GetConfigzOk() (*map[string]bool, bool) {
	if o == nil || IsNil(o.Configz) {
		return nil, false
	}
	return o.Configz, true
}

// HasConfigz returns a boolean if a field has been set.
func (o *V1alpha1ClusterStatus) HasConfigz() bool {
	if o != nil && !IsNil(o.Configz) {
		return true
	}

	return false
}

// SetConfigz gets a reference to the given map[string]bool and assigns it to the Configz field.
func (o *V1alpha1ClusterStatus) SetConfigz(v map[string]bool) {
	o.Configz = &v
}

// GetKubeSphereVersion returns the KubeSphereVersion field value if set, zero value otherwise.
func (o *V1alpha1ClusterStatus) GetKubeSphereVersion() string {
	if o == nil || IsNil(o.KubeSphereVersion) {
		var ret string
		return ret
	}
	return *o.KubeSphereVersion
}

// GetKubeSphereVersionOk returns a tuple with the KubeSphereVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ClusterStatus) GetKubeSphereVersionOk() (*string, bool) {
	if o == nil || IsNil(o.KubeSphereVersion) {
		return nil, false
	}
	return o.KubeSphereVersion, true
}

// HasKubeSphereVersion returns a boolean if a field has been set.
func (o *V1alpha1ClusterStatus) HasKubeSphereVersion() bool {
	if o != nil && !IsNil(o.KubeSphereVersion) {
		return true
	}

	return false
}

// SetKubeSphereVersion gets a reference to the given string and assigns it to the KubeSphereVersion field.
func (o *V1alpha1ClusterStatus) SetKubeSphereVersion(v string) {
	o.KubeSphereVersion = &v
}

// GetKubernetesVersion returns the KubernetesVersion field value if set, zero value otherwise.
func (o *V1alpha1ClusterStatus) GetKubernetesVersion() string {
	if o == nil || IsNil(o.KubernetesVersion) {
		var ret string
		return ret
	}
	return *o.KubernetesVersion
}

// GetKubernetesVersionOk returns a tuple with the KubernetesVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ClusterStatus) GetKubernetesVersionOk() (*string, bool) {
	if o == nil || IsNil(o.KubernetesVersion) {
		return nil, false
	}
	return o.KubernetesVersion, true
}

// HasKubernetesVersion returns a boolean if a field has been set.
func (o *V1alpha1ClusterStatus) HasKubernetesVersion() bool {
	if o != nil && !IsNil(o.KubernetesVersion) {
		return true
	}

	return false
}

// SetKubernetesVersion gets a reference to the given string and assigns it to the KubernetesVersion field.
func (o *V1alpha1ClusterStatus) SetKubernetesVersion(v string) {
	o.KubernetesVersion = &v
}

// GetNodeCount returns the NodeCount field value if set, zero value otherwise.
func (o *V1alpha1ClusterStatus) GetNodeCount() int32 {
	if o == nil || IsNil(o.NodeCount) {
		var ret int32
		return ret
	}
	return *o.NodeCount
}

// GetNodeCountOk returns a tuple with the NodeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ClusterStatus) GetNodeCountOk() (*int32, bool) {
	if o == nil || IsNil(o.NodeCount) {
		return nil, false
	}
	return o.NodeCount, true
}

// HasNodeCount returns a boolean if a field has been set.
func (o *V1alpha1ClusterStatus) HasNodeCount() bool {
	if o != nil && !IsNil(o.NodeCount) {
		return true
	}

	return false
}

// SetNodeCount gets a reference to the given int32 and assigns it to the NodeCount field.
func (o *V1alpha1ClusterStatus) SetNodeCount(v int32) {
	o.NodeCount = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *V1alpha1ClusterStatus) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ClusterStatus) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *V1alpha1ClusterStatus) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *V1alpha1ClusterStatus) SetRegion(v string) {
	o.Region = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *V1alpha1ClusterStatus) GetUid() string {
	if o == nil || IsNil(o.Uid) {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ClusterStatus) GetUidOk() (*string, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *V1alpha1ClusterStatus) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *V1alpha1ClusterStatus) SetUid(v string) {
	o.Uid = &v
}

// GetZones returns the Zones field value if set, zero value otherwise.
func (o *V1alpha1ClusterStatus) GetZones() []string {
	if o == nil || IsNil(o.Zones) {
		var ret []string
		return ret
	}
	return o.Zones
}

// GetZonesOk returns a tuple with the Zones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ClusterStatus) GetZonesOk() ([]string, bool) {
	if o == nil || IsNil(o.Zones) {
		return nil, false
	}
	return o.Zones, true
}

// HasZones returns a boolean if a field has been set.
func (o *V1alpha1ClusterStatus) HasZones() bool {
	if o != nil && !IsNil(o.Zones) {
		return true
	}

	return false
}

// SetZones gets a reference to the given []string and assigns it to the Zones field.
func (o *V1alpha1ClusterStatus) SetZones(v []string) {
	o.Zones = v
}

func (o V1alpha1ClusterStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1alpha1ClusterStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}
	if !IsNil(o.Configz) {
		toSerialize["configz"] = o.Configz
	}
	if !IsNil(o.KubeSphereVersion) {
		toSerialize["kubeSphereVersion"] = o.KubeSphereVersion
	}
	if !IsNil(o.KubernetesVersion) {
		toSerialize["kubernetesVersion"] = o.KubernetesVersion
	}
	if !IsNil(o.NodeCount) {
		toSerialize["nodeCount"] = o.NodeCount
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.Uid) {
		toSerialize["uid"] = o.Uid
	}
	if !IsNil(o.Zones) {
		toSerialize["zones"] = o.Zones
	}
	return toSerialize, nil
}

type NullableV1alpha1ClusterStatus struct {
	value *V1alpha1ClusterStatus
	isSet bool
}

func (v NullableV1alpha1ClusterStatus) Get() *V1alpha1ClusterStatus {
	return v.value
}

func (v *NullableV1alpha1ClusterStatus) Set(val *V1alpha1ClusterStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha1ClusterStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha1ClusterStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha1ClusterStatus(val *V1alpha1ClusterStatus) *NullableV1alpha1ClusterStatus {
	return &NullableV1alpha1ClusterStatus{value: val, isSet: true}
}

func (v NullableV1alpha1ClusterStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha1ClusterStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


