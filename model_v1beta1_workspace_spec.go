/*
KS API

KubeSphere OpenAPI

API version: v4.1.1
Contact: support@kubesphere.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1beta1WorkspaceSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1beta1WorkspaceSpec{}

// V1beta1WorkspaceSpec struct for V1beta1WorkspaceSpec
type V1beta1WorkspaceSpec struct {
	Manager *string `json:"manager,omitempty"`
}

// NewV1beta1WorkspaceSpec instantiates a new V1beta1WorkspaceSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1beta1WorkspaceSpec() *V1beta1WorkspaceSpec {
	this := V1beta1WorkspaceSpec{}
	return &this
}

// NewV1beta1WorkspaceSpecWithDefaults instantiates a new V1beta1WorkspaceSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1beta1WorkspaceSpecWithDefaults() *V1beta1WorkspaceSpec {
	this := V1beta1WorkspaceSpec{}
	return &this
}

// GetManager returns the Manager field value if set, zero value otherwise.
func (o *V1beta1WorkspaceSpec) GetManager() string {
	if o == nil || IsNil(o.Manager) {
		var ret string
		return ret
	}
	return *o.Manager
}

// GetManagerOk returns a tuple with the Manager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1beta1WorkspaceSpec) GetManagerOk() (*string, bool) {
	if o == nil || IsNil(o.Manager) {
		return nil, false
	}
	return o.Manager, true
}

// HasManager returns a boolean if a field has been set.
func (o *V1beta1WorkspaceSpec) HasManager() bool {
	if o != nil && !IsNil(o.Manager) {
		return true
	}

	return false
}

// SetManager gets a reference to the given string and assigns it to the Manager field.
func (o *V1beta1WorkspaceSpec) SetManager(v string) {
	o.Manager = &v
}

func (o V1beta1WorkspaceSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1beta1WorkspaceSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Manager) {
		toSerialize["manager"] = o.Manager
	}
	return toSerialize, nil
}

type NullableV1beta1WorkspaceSpec struct {
	value *V1beta1WorkspaceSpec
	isSet bool
}

func (v NullableV1beta1WorkspaceSpec) Get() *V1beta1WorkspaceSpec {
	return v.value
}

func (v *NullableV1beta1WorkspaceSpec) Set(val *V1beta1WorkspaceSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableV1beta1WorkspaceSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableV1beta1WorkspaceSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1beta1WorkspaceSpec(val *V1beta1WorkspaceSpec) *NullableV1beta1WorkspaceSpec {
	return &NullableV1beta1WorkspaceSpec{value: val, isSet: true}
}

func (v NullableV1beta1WorkspaceSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1beta1WorkspaceSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


