/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V1alpha2ConnectionsSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1alpha2ConnectionsSummary{}

// V1alpha2ConnectionsSummary struct for V1alpha2ConnectionsSummary
type V1alpha2ConnectionsSummary struct {
	Columns []V1alpha2Column `json:"columns"`
	Connections []V1alpha2Connection `json:"connections"`
	Id string `json:"id"`
	Label string `json:"label"`
	TopologyId string `json:"topologyId"`
}

type _V1alpha2ConnectionsSummary V1alpha2ConnectionsSummary

// NewV1alpha2ConnectionsSummary instantiates a new V1alpha2ConnectionsSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha2ConnectionsSummary(columns []V1alpha2Column, connections []V1alpha2Connection, id string, label string, topologyId string) *V1alpha2ConnectionsSummary {
	this := V1alpha2ConnectionsSummary{}
	this.Columns = columns
	this.Connections = connections
	this.Id = id
	this.Label = label
	this.TopologyId = topologyId
	return &this
}

// NewV1alpha2ConnectionsSummaryWithDefaults instantiates a new V1alpha2ConnectionsSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha2ConnectionsSummaryWithDefaults() *V1alpha2ConnectionsSummary {
	this := V1alpha2ConnectionsSummary{}
	return &this
}

// GetColumns returns the Columns field value
func (o *V1alpha2ConnectionsSummary) GetColumns() []V1alpha2Column {
	if o == nil {
		var ret []V1alpha2Column
		return ret
	}

	return o.Columns
}

// GetColumnsOk returns a tuple with the Columns field value
// and a boolean to check if the value has been set.
func (o *V1alpha2ConnectionsSummary) GetColumnsOk() ([]V1alpha2Column, bool) {
	if o == nil {
		return nil, false
	}
	return o.Columns, true
}

// SetColumns sets field value
func (o *V1alpha2ConnectionsSummary) SetColumns(v []V1alpha2Column) {
	o.Columns = v
}

// GetConnections returns the Connections field value
func (o *V1alpha2ConnectionsSummary) GetConnections() []V1alpha2Connection {
	if o == nil {
		var ret []V1alpha2Connection
		return ret
	}

	return o.Connections
}

// GetConnectionsOk returns a tuple with the Connections field value
// and a boolean to check if the value has been set.
func (o *V1alpha2ConnectionsSummary) GetConnectionsOk() ([]V1alpha2Connection, bool) {
	if o == nil {
		return nil, false
	}
	return o.Connections, true
}

// SetConnections sets field value
func (o *V1alpha2ConnectionsSummary) SetConnections(v []V1alpha2Connection) {
	o.Connections = v
}

// GetId returns the Id field value
func (o *V1alpha2ConnectionsSummary) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *V1alpha2ConnectionsSummary) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *V1alpha2ConnectionsSummary) SetId(v string) {
	o.Id = v
}

// GetLabel returns the Label field value
func (o *V1alpha2ConnectionsSummary) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *V1alpha2ConnectionsSummary) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *V1alpha2ConnectionsSummary) SetLabel(v string) {
	o.Label = v
}

// GetTopologyId returns the TopologyId field value
func (o *V1alpha2ConnectionsSummary) GetTopologyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TopologyId
}

// GetTopologyIdOk returns a tuple with the TopologyId field value
// and a boolean to check if the value has been set.
func (o *V1alpha2ConnectionsSummary) GetTopologyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TopologyId, true
}

// SetTopologyId sets field value
func (o *V1alpha2ConnectionsSummary) SetTopologyId(v string) {
	o.TopologyId = v
}

func (o V1alpha2ConnectionsSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1alpha2ConnectionsSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["columns"] = o.Columns
	toSerialize["connections"] = o.Connections
	toSerialize["id"] = o.Id
	toSerialize["label"] = o.Label
	toSerialize["topologyId"] = o.TopologyId
	return toSerialize, nil
}

func (o *V1alpha2ConnectionsSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"columns",
		"connections",
		"id",
		"label",
		"topologyId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV1alpha2ConnectionsSummary := _V1alpha2ConnectionsSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV1alpha2ConnectionsSummary)

	if err != nil {
		return err
	}

	*o = V1alpha2ConnectionsSummary(varV1alpha2ConnectionsSummary)

	return err
}

type NullableV1alpha2ConnectionsSummary struct {
	value *V1alpha2ConnectionsSummary
	isSet bool
}

func (v NullableV1alpha2ConnectionsSummary) Get() *V1alpha2ConnectionsSummary {
	return v.value
}

func (v *NullableV1alpha2ConnectionsSummary) Set(val *V1alpha2ConnectionsSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha2ConnectionsSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha2ConnectionsSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha2ConnectionsSummary(val *V1alpha2ConnectionsSummary) *NullableV1alpha2ConnectionsSummary {
	return &NullableV1alpha2ConnectionsSummary{value: val, isSet: true}
}

func (v NullableV1alpha2ConnectionsSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha2ConnectionsSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


