/*
KS API

KubeSphere OpenAPI

API version: v4.1.1
Contact: support@kubesphere.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1beta1NonResourceAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1beta1NonResourceAttributes{}

// V1beta1NonResourceAttributes struct for V1beta1NonResourceAttributes
type V1beta1NonResourceAttributes struct {
	Path *string `json:"path,omitempty"`
	Verb *string `json:"verb,omitempty"`
}

// NewV1beta1NonResourceAttributes instantiates a new V1beta1NonResourceAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1beta1NonResourceAttributes() *V1beta1NonResourceAttributes {
	this := V1beta1NonResourceAttributes{}
	return &this
}

// NewV1beta1NonResourceAttributesWithDefaults instantiates a new V1beta1NonResourceAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1beta1NonResourceAttributesWithDefaults() *V1beta1NonResourceAttributes {
	this := V1beta1NonResourceAttributes{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *V1beta1NonResourceAttributes) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1beta1NonResourceAttributes) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *V1beta1NonResourceAttributes) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *V1beta1NonResourceAttributes) SetPath(v string) {
	o.Path = &v
}

// GetVerb returns the Verb field value if set, zero value otherwise.
func (o *V1beta1NonResourceAttributes) GetVerb() string {
	if o == nil || IsNil(o.Verb) {
		var ret string
		return ret
	}
	return *o.Verb
}

// GetVerbOk returns a tuple with the Verb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1beta1NonResourceAttributes) GetVerbOk() (*string, bool) {
	if o == nil || IsNil(o.Verb) {
		return nil, false
	}
	return o.Verb, true
}

// HasVerb returns a boolean if a field has been set.
func (o *V1beta1NonResourceAttributes) HasVerb() bool {
	if o != nil && !IsNil(o.Verb) {
		return true
	}

	return false
}

// SetVerb gets a reference to the given string and assigns it to the Verb field.
func (o *V1beta1NonResourceAttributes) SetVerb(v string) {
	o.Verb = &v
}

func (o V1beta1NonResourceAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1beta1NonResourceAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.Verb) {
		toSerialize["verb"] = o.Verb
	}
	return toSerialize, nil
}

type NullableV1beta1NonResourceAttributes struct {
	value *V1beta1NonResourceAttributes
	isSet bool
}

func (v NullableV1beta1NonResourceAttributes) Get() *V1beta1NonResourceAttributes {
	return v.value
}

func (v *NullableV1beta1NonResourceAttributes) Set(val *V1beta1NonResourceAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableV1beta1NonResourceAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableV1beta1NonResourceAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1beta1NonResourceAttributes(val *V1beta1NonResourceAttributes) *NullableV1beta1NonResourceAttributes {
	return &NullableV1beta1NonResourceAttributes{value: val, isSet: true}
}

func (v NullableV1beta1NonResourceAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1beta1NonResourceAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


