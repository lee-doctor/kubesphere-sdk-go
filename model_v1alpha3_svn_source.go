/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1alpha3SvnSource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1alpha3SvnSource{}

// V1alpha3SvnSource struct for V1alpha3SvnSource
type V1alpha3SvnSource struct {
	// credential id to access svn source
	CredentialId *string `json:"credential_id,omitempty"`
	// branches do not run pipeline
	Excludes *string `json:"excludes,omitempty"`
	// branches to run pipeline
	Includes *string `json:"includes,omitempty"`
	// remote address url
	Remote *string `json:"remote,omitempty"`
	// uid of scm
	ScmId *string `json:"scm_id,omitempty"`
}

// NewV1alpha3SvnSource instantiates a new V1alpha3SvnSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha3SvnSource() *V1alpha3SvnSource {
	this := V1alpha3SvnSource{}
	return &this
}

// NewV1alpha3SvnSourceWithDefaults instantiates a new V1alpha3SvnSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha3SvnSourceWithDefaults() *V1alpha3SvnSource {
	this := V1alpha3SvnSource{}
	return &this
}

// GetCredentialId returns the CredentialId field value if set, zero value otherwise.
func (o *V1alpha3SvnSource) GetCredentialId() string {
	if o == nil || IsNil(o.CredentialId) {
		var ret string
		return ret
	}
	return *o.CredentialId
}

// GetCredentialIdOk returns a tuple with the CredentialId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha3SvnSource) GetCredentialIdOk() (*string, bool) {
	if o == nil || IsNil(o.CredentialId) {
		return nil, false
	}
	return o.CredentialId, true
}

// HasCredentialId returns a boolean if a field has been set.
func (o *V1alpha3SvnSource) HasCredentialId() bool {
	if o != nil && !IsNil(o.CredentialId) {
		return true
	}

	return false
}

// SetCredentialId gets a reference to the given string and assigns it to the CredentialId field.
func (o *V1alpha3SvnSource) SetCredentialId(v string) {
	o.CredentialId = &v
}

// GetExcludes returns the Excludes field value if set, zero value otherwise.
func (o *V1alpha3SvnSource) GetExcludes() string {
	if o == nil || IsNil(o.Excludes) {
		var ret string
		return ret
	}
	return *o.Excludes
}

// GetExcludesOk returns a tuple with the Excludes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha3SvnSource) GetExcludesOk() (*string, bool) {
	if o == nil || IsNil(o.Excludes) {
		return nil, false
	}
	return o.Excludes, true
}

// HasExcludes returns a boolean if a field has been set.
func (o *V1alpha3SvnSource) HasExcludes() bool {
	if o != nil && !IsNil(o.Excludes) {
		return true
	}

	return false
}

// SetExcludes gets a reference to the given string and assigns it to the Excludes field.
func (o *V1alpha3SvnSource) SetExcludes(v string) {
	o.Excludes = &v
}

// GetIncludes returns the Includes field value if set, zero value otherwise.
func (o *V1alpha3SvnSource) GetIncludes() string {
	if o == nil || IsNil(o.Includes) {
		var ret string
		return ret
	}
	return *o.Includes
}

// GetIncludesOk returns a tuple with the Includes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha3SvnSource) GetIncludesOk() (*string, bool) {
	if o == nil || IsNil(o.Includes) {
		return nil, false
	}
	return o.Includes, true
}

// HasIncludes returns a boolean if a field has been set.
func (o *V1alpha3SvnSource) HasIncludes() bool {
	if o != nil && !IsNil(o.Includes) {
		return true
	}

	return false
}

// SetIncludes gets a reference to the given string and assigns it to the Includes field.
func (o *V1alpha3SvnSource) SetIncludes(v string) {
	o.Includes = &v
}

// GetRemote returns the Remote field value if set, zero value otherwise.
func (o *V1alpha3SvnSource) GetRemote() string {
	if o == nil || IsNil(o.Remote) {
		var ret string
		return ret
	}
	return *o.Remote
}

// GetRemoteOk returns a tuple with the Remote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha3SvnSource) GetRemoteOk() (*string, bool) {
	if o == nil || IsNil(o.Remote) {
		return nil, false
	}
	return o.Remote, true
}

// HasRemote returns a boolean if a field has been set.
func (o *V1alpha3SvnSource) HasRemote() bool {
	if o != nil && !IsNil(o.Remote) {
		return true
	}

	return false
}

// SetRemote gets a reference to the given string and assigns it to the Remote field.
func (o *V1alpha3SvnSource) SetRemote(v string) {
	o.Remote = &v
}

// GetScmId returns the ScmId field value if set, zero value otherwise.
func (o *V1alpha3SvnSource) GetScmId() string {
	if o == nil || IsNil(o.ScmId) {
		var ret string
		return ret
	}
	return *o.ScmId
}

// GetScmIdOk returns a tuple with the ScmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha3SvnSource) GetScmIdOk() (*string, bool) {
	if o == nil || IsNil(o.ScmId) {
		return nil, false
	}
	return o.ScmId, true
}

// HasScmId returns a boolean if a field has been set.
func (o *V1alpha3SvnSource) HasScmId() bool {
	if o != nil && !IsNil(o.ScmId) {
		return true
	}

	return false
}

// SetScmId gets a reference to the given string and assigns it to the ScmId field.
func (o *V1alpha3SvnSource) SetScmId(v string) {
	o.ScmId = &v
}

func (o V1alpha3SvnSource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1alpha3SvnSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CredentialId) {
		toSerialize["credential_id"] = o.CredentialId
	}
	if !IsNil(o.Excludes) {
		toSerialize["excludes"] = o.Excludes
	}
	if !IsNil(o.Includes) {
		toSerialize["includes"] = o.Includes
	}
	if !IsNil(o.Remote) {
		toSerialize["remote"] = o.Remote
	}
	if !IsNil(o.ScmId) {
		toSerialize["scm_id"] = o.ScmId
	}
	return toSerialize, nil
}

type NullableV1alpha3SvnSource struct {
	value *V1alpha3SvnSource
	isSet bool
}

func (v NullableV1alpha3SvnSource) Get() *V1alpha3SvnSource {
	return v.value
}

func (v *NullableV1alpha3SvnSource) Set(val *V1alpha3SvnSource) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha3SvnSource) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha3SvnSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha3SvnSource(val *V1alpha3SvnSource) *NullableV1alpha3SvnSource {
	return &NullableV1alpha3SvnSource{value: val, isSet: true}
}

func (v NullableV1alpha3SvnSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha3SvnSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


