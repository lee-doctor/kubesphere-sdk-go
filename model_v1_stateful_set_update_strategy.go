/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1StatefulSetUpdateStrategy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1StatefulSetUpdateStrategy{}

// V1StatefulSetUpdateStrategy StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy.
type V1StatefulSetUpdateStrategy struct {
	RollingUpdate *V1RollingUpdateStatefulSetStrategy `json:"rollingUpdate,omitempty"`
	// Type indicates the type of the StatefulSetUpdateStrategy. Default is RollingUpdate.
	Type *string `json:"type,omitempty"`
}

// NewV1StatefulSetUpdateStrategy instantiates a new V1StatefulSetUpdateStrategy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1StatefulSetUpdateStrategy() *V1StatefulSetUpdateStrategy {
	this := V1StatefulSetUpdateStrategy{}
	return &this
}

// NewV1StatefulSetUpdateStrategyWithDefaults instantiates a new V1StatefulSetUpdateStrategy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1StatefulSetUpdateStrategyWithDefaults() *V1StatefulSetUpdateStrategy {
	this := V1StatefulSetUpdateStrategy{}
	return &this
}

// GetRollingUpdate returns the RollingUpdate field value if set, zero value otherwise.
func (o *V1StatefulSetUpdateStrategy) GetRollingUpdate() V1RollingUpdateStatefulSetStrategy {
	if o == nil || IsNil(o.RollingUpdate) {
		var ret V1RollingUpdateStatefulSetStrategy
		return ret
	}
	return *o.RollingUpdate
}

// GetRollingUpdateOk returns a tuple with the RollingUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1StatefulSetUpdateStrategy) GetRollingUpdateOk() (*V1RollingUpdateStatefulSetStrategy, bool) {
	if o == nil || IsNil(o.RollingUpdate) {
		return nil, false
	}
	return o.RollingUpdate, true
}

// HasRollingUpdate returns a boolean if a field has been set.
func (o *V1StatefulSetUpdateStrategy) HasRollingUpdate() bool {
	if o != nil && !IsNil(o.RollingUpdate) {
		return true
	}

	return false
}

// SetRollingUpdate gets a reference to the given V1RollingUpdateStatefulSetStrategy and assigns it to the RollingUpdate field.
func (o *V1StatefulSetUpdateStrategy) SetRollingUpdate(v V1RollingUpdateStatefulSetStrategy) {
	o.RollingUpdate = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *V1StatefulSetUpdateStrategy) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1StatefulSetUpdateStrategy) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *V1StatefulSetUpdateStrategy) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *V1StatefulSetUpdateStrategy) SetType(v string) {
	o.Type = &v
}

func (o V1StatefulSetUpdateStrategy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1StatefulSetUpdateStrategy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RollingUpdate) {
		toSerialize["rollingUpdate"] = o.RollingUpdate
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableV1StatefulSetUpdateStrategy struct {
	value *V1StatefulSetUpdateStrategy
	isSet bool
}

func (v NullableV1StatefulSetUpdateStrategy) Get() *V1StatefulSetUpdateStrategy {
	return v.value
}

func (v *NullableV1StatefulSetUpdateStrategy) Set(val *V1StatefulSetUpdateStrategy) {
	v.value = val
	v.isSet = true
}

func (v NullableV1StatefulSetUpdateStrategy) IsSet() bool {
	return v.isSet
}

func (v *NullableV1StatefulSetUpdateStrategy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1StatefulSetUpdateStrategy(val *V1StatefulSetUpdateStrategy) *NullableV1StatefulSetUpdateStrategy {
	return &NullableV1StatefulSetUpdateStrategy{value: val, isSet: true}
}

func (v NullableV1StatefulSetUpdateStrategy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1StatefulSetUpdateStrategy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


