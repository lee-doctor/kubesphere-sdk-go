/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V1beta1GenericOverrideItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1beta1GenericOverrideItem{}

// V1beta1GenericOverrideItem struct for V1beta1GenericOverrideItem
type V1beta1GenericOverrideItem struct {
	ClusterName string `json:"clusterName"`
	ClusterOverrides []V1beta1ClusterOverride `json:"clusterOverrides,omitempty"`
}

type _V1beta1GenericOverrideItem V1beta1GenericOverrideItem

// NewV1beta1GenericOverrideItem instantiates a new V1beta1GenericOverrideItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1beta1GenericOverrideItem(clusterName string) *V1beta1GenericOverrideItem {
	this := V1beta1GenericOverrideItem{}
	this.ClusterName = clusterName
	return &this
}

// NewV1beta1GenericOverrideItemWithDefaults instantiates a new V1beta1GenericOverrideItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1beta1GenericOverrideItemWithDefaults() *V1beta1GenericOverrideItem {
	this := V1beta1GenericOverrideItem{}
	return &this
}

// GetClusterName returns the ClusterName field value
func (o *V1beta1GenericOverrideItem) GetClusterName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value
// and a boolean to check if the value has been set.
func (o *V1beta1GenericOverrideItem) GetClusterNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterName, true
}

// SetClusterName sets field value
func (o *V1beta1GenericOverrideItem) SetClusterName(v string) {
	o.ClusterName = v
}

// GetClusterOverrides returns the ClusterOverrides field value if set, zero value otherwise.
func (o *V1beta1GenericOverrideItem) GetClusterOverrides() []V1beta1ClusterOverride {
	if o == nil || IsNil(o.ClusterOverrides) {
		var ret []V1beta1ClusterOverride
		return ret
	}
	return o.ClusterOverrides
}

// GetClusterOverridesOk returns a tuple with the ClusterOverrides field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1beta1GenericOverrideItem) GetClusterOverridesOk() ([]V1beta1ClusterOverride, bool) {
	if o == nil || IsNil(o.ClusterOverrides) {
		return nil, false
	}
	return o.ClusterOverrides, true
}

// HasClusterOverrides returns a boolean if a field has been set.
func (o *V1beta1GenericOverrideItem) HasClusterOverrides() bool {
	if o != nil && !IsNil(o.ClusterOverrides) {
		return true
	}

	return false
}

// SetClusterOverrides gets a reference to the given []V1beta1ClusterOverride and assigns it to the ClusterOverrides field.
func (o *V1beta1GenericOverrideItem) SetClusterOverrides(v []V1beta1ClusterOverride) {
	o.ClusterOverrides = v
}

func (o V1beta1GenericOverrideItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1beta1GenericOverrideItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["clusterName"] = o.ClusterName
	if !IsNil(o.ClusterOverrides) {
		toSerialize["clusterOverrides"] = o.ClusterOverrides
	}
	return toSerialize, nil
}

func (o *V1beta1GenericOverrideItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"clusterName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV1beta1GenericOverrideItem := _V1beta1GenericOverrideItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV1beta1GenericOverrideItem)

	if err != nil {
		return err
	}

	*o = V1beta1GenericOverrideItem(varV1beta1GenericOverrideItem)

	return err
}

type NullableV1beta1GenericOverrideItem struct {
	value *V1beta1GenericOverrideItem
	isSet bool
}

func (v NullableV1beta1GenericOverrideItem) Get() *V1beta1GenericOverrideItem {
	return v.value
}

func (v *NullableV1beta1GenericOverrideItem) Set(val *V1beta1GenericOverrideItem) {
	v.value = val
	v.isSet = true
}

func (v NullableV1beta1GenericOverrideItem) IsSet() bool {
	return v.isSet
}

func (v *NullableV1beta1GenericOverrideItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1beta1GenericOverrideItem(val *V1beta1GenericOverrideItem) *NullableV1beta1GenericOverrideItem {
	return &NullableV1beta1GenericOverrideItem{value: val, isSet: true}
}

func (v NullableV1beta1GenericOverrideItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1beta1GenericOverrideItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


