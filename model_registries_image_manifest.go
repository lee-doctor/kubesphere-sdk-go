/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RegistriesImageManifest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegistriesImageManifest{}

// RegistriesImageManifest struct for RegistriesImageManifest
type RegistriesImageManifest struct {
	Config *RegistriesManifestConfig `json:"config,omitempty"`
	// Fields of an item in the layers list.
	Layers []RegistriesLayers `json:"layers,omitempty"`
	// The MIME type of the manifest.
	MediaType *string `json:"mediaType,omitempty"`
	// This field specifies the image manifest schema version as an integer.
	SchemaVersion *int32 `json:"schemaVersion,omitempty"`
}

// NewRegistriesImageManifest instantiates a new RegistriesImageManifest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegistriesImageManifest() *RegistriesImageManifest {
	this := RegistriesImageManifest{}
	return &this
}

// NewRegistriesImageManifestWithDefaults instantiates a new RegistriesImageManifest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegistriesImageManifestWithDefaults() *RegistriesImageManifest {
	this := RegistriesImageManifest{}
	return &this
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *RegistriesImageManifest) GetConfig() RegistriesManifestConfig {
	if o == nil || IsNil(o.Config) {
		var ret RegistriesManifestConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistriesImageManifest) GetConfigOk() (*RegistriesManifestConfig, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *RegistriesImageManifest) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given RegistriesManifestConfig and assigns it to the Config field.
func (o *RegistriesImageManifest) SetConfig(v RegistriesManifestConfig) {
	o.Config = &v
}

// GetLayers returns the Layers field value if set, zero value otherwise.
func (o *RegistriesImageManifest) GetLayers() []RegistriesLayers {
	if o == nil || IsNil(o.Layers) {
		var ret []RegistriesLayers
		return ret
	}
	return o.Layers
}

// GetLayersOk returns a tuple with the Layers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistriesImageManifest) GetLayersOk() ([]RegistriesLayers, bool) {
	if o == nil || IsNil(o.Layers) {
		return nil, false
	}
	return o.Layers, true
}

// HasLayers returns a boolean if a field has been set.
func (o *RegistriesImageManifest) HasLayers() bool {
	if o != nil && !IsNil(o.Layers) {
		return true
	}

	return false
}

// SetLayers gets a reference to the given []RegistriesLayers and assigns it to the Layers field.
func (o *RegistriesImageManifest) SetLayers(v []RegistriesLayers) {
	o.Layers = v
}

// GetMediaType returns the MediaType field value if set, zero value otherwise.
func (o *RegistriesImageManifest) GetMediaType() string {
	if o == nil || IsNil(o.MediaType) {
		var ret string
		return ret
	}
	return *o.MediaType
}

// GetMediaTypeOk returns a tuple with the MediaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistriesImageManifest) GetMediaTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MediaType) {
		return nil, false
	}
	return o.MediaType, true
}

// HasMediaType returns a boolean if a field has been set.
func (o *RegistriesImageManifest) HasMediaType() bool {
	if o != nil && !IsNil(o.MediaType) {
		return true
	}

	return false
}

// SetMediaType gets a reference to the given string and assigns it to the MediaType field.
func (o *RegistriesImageManifest) SetMediaType(v string) {
	o.MediaType = &v
}

// GetSchemaVersion returns the SchemaVersion field value if set, zero value otherwise.
func (o *RegistriesImageManifest) GetSchemaVersion() int32 {
	if o == nil || IsNil(o.SchemaVersion) {
		var ret int32
		return ret
	}
	return *o.SchemaVersion
}

// GetSchemaVersionOk returns a tuple with the SchemaVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistriesImageManifest) GetSchemaVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.SchemaVersion) {
		return nil, false
	}
	return o.SchemaVersion, true
}

// HasSchemaVersion returns a boolean if a field has been set.
func (o *RegistriesImageManifest) HasSchemaVersion() bool {
	if o != nil && !IsNil(o.SchemaVersion) {
		return true
	}

	return false
}

// SetSchemaVersion gets a reference to the given int32 and assigns it to the SchemaVersion field.
func (o *RegistriesImageManifest) SetSchemaVersion(v int32) {
	o.SchemaVersion = &v
}

func (o RegistriesImageManifest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegistriesImageManifest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.Layers) {
		toSerialize["layers"] = o.Layers
	}
	if !IsNil(o.MediaType) {
		toSerialize["mediaType"] = o.MediaType
	}
	if !IsNil(o.SchemaVersion) {
		toSerialize["schemaVersion"] = o.SchemaVersion
	}
	return toSerialize, nil
}

type NullableRegistriesImageManifest struct {
	value *RegistriesImageManifest
	isSet bool
}

func (v NullableRegistriesImageManifest) Get() *RegistriesImageManifest {
	return v.value
}

func (v *NullableRegistriesImageManifest) Set(val *RegistriesImageManifest) {
	v.value = val
	v.isSet = true
}

func (v NullableRegistriesImageManifest) IsSet() bool {
	return v.isSet
}

func (v *NullableRegistriesImageManifest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegistriesImageManifest(val *RegistriesImageManifest) *NullableRegistriesImageManifest {
	return &NullableRegistriesImageManifest{value: val, isSet: true}
}

func (v NullableRegistriesImageManifest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegistriesImageManifest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


