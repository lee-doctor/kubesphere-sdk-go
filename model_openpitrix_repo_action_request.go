/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OpenpitrixRepoActionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenpitrixRepoActionRequest{}

// OpenpitrixRepoActionRequest struct for OpenpitrixRepoActionRequest
type OpenpitrixRepoActionRequest struct {
	Action string `json:"action"`
}

type _OpenpitrixRepoActionRequest OpenpitrixRepoActionRequest

// NewOpenpitrixRepoActionRequest instantiates a new OpenpitrixRepoActionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenpitrixRepoActionRequest(action string) *OpenpitrixRepoActionRequest {
	this := OpenpitrixRepoActionRequest{}
	this.Action = action
	return &this
}

// NewOpenpitrixRepoActionRequestWithDefaults instantiates a new OpenpitrixRepoActionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenpitrixRepoActionRequestWithDefaults() *OpenpitrixRepoActionRequest {
	this := OpenpitrixRepoActionRequest{}
	return &this
}

// GetAction returns the Action field value
func (o *OpenpitrixRepoActionRequest) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *OpenpitrixRepoActionRequest) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *OpenpitrixRepoActionRequest) SetAction(v string) {
	o.Action = v
}

func (o OpenpitrixRepoActionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenpitrixRepoActionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action"] = o.Action
	return toSerialize, nil
}

func (o *OpenpitrixRepoActionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"action",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOpenpitrixRepoActionRequest := _OpenpitrixRepoActionRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOpenpitrixRepoActionRequest)

	if err != nil {
		return err
	}

	*o = OpenpitrixRepoActionRequest(varOpenpitrixRepoActionRequest)

	return err
}

type NullableOpenpitrixRepoActionRequest struct {
	value *OpenpitrixRepoActionRequest
	isSet bool
}

func (v NullableOpenpitrixRepoActionRequest) Get() *OpenpitrixRepoActionRequest {
	return v.value
}

func (v *NullableOpenpitrixRepoActionRequest) Set(val *OpenpitrixRepoActionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenpitrixRepoActionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenpitrixRepoActionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenpitrixRepoActionRequest(val *OpenpitrixRepoActionRequest) *NullableOpenpitrixRepoActionRequest {
	return &NullableOpenpitrixRepoActionRequest{value: val, isSet: true}
}

func (v NullableOpenpitrixRepoActionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenpitrixRepoActionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


