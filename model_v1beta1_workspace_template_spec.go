/*
KS API

KubeSphere OpenAPI

API version: v4.1.1
Contact: support@kubesphere.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V1beta1WorkspaceTemplateSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1beta1WorkspaceTemplateSpec{}

// V1beta1WorkspaceTemplateSpec struct for V1beta1WorkspaceTemplateSpec
type V1beta1WorkspaceTemplateSpec struct {
	Placement V1beta1GenericPlacement `json:"placement"`
	Template V1beta1Template `json:"template"`
}

type _V1beta1WorkspaceTemplateSpec V1beta1WorkspaceTemplateSpec

// NewV1beta1WorkspaceTemplateSpec instantiates a new V1beta1WorkspaceTemplateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1beta1WorkspaceTemplateSpec(placement V1beta1GenericPlacement, template V1beta1Template) *V1beta1WorkspaceTemplateSpec {
	this := V1beta1WorkspaceTemplateSpec{}
	this.Placement = placement
	this.Template = template
	return &this
}

// NewV1beta1WorkspaceTemplateSpecWithDefaults instantiates a new V1beta1WorkspaceTemplateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1beta1WorkspaceTemplateSpecWithDefaults() *V1beta1WorkspaceTemplateSpec {
	this := V1beta1WorkspaceTemplateSpec{}
	return &this
}

// GetPlacement returns the Placement field value
func (o *V1beta1WorkspaceTemplateSpec) GetPlacement() V1beta1GenericPlacement {
	if o == nil {
		var ret V1beta1GenericPlacement
		return ret
	}

	return o.Placement
}

// GetPlacementOk returns a tuple with the Placement field value
// and a boolean to check if the value has been set.
func (o *V1beta1WorkspaceTemplateSpec) GetPlacementOk() (*V1beta1GenericPlacement, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Placement, true
}

// SetPlacement sets field value
func (o *V1beta1WorkspaceTemplateSpec) SetPlacement(v V1beta1GenericPlacement) {
	o.Placement = v
}

// GetTemplate returns the Template field value
func (o *V1beta1WorkspaceTemplateSpec) GetTemplate() V1beta1Template {
	if o == nil {
		var ret V1beta1Template
		return ret
	}

	return o.Template
}

// GetTemplateOk returns a tuple with the Template field value
// and a boolean to check if the value has been set.
func (o *V1beta1WorkspaceTemplateSpec) GetTemplateOk() (*V1beta1Template, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Template, true
}

// SetTemplate sets field value
func (o *V1beta1WorkspaceTemplateSpec) SetTemplate(v V1beta1Template) {
	o.Template = v
}

func (o V1beta1WorkspaceTemplateSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1beta1WorkspaceTemplateSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["placement"] = o.Placement
	toSerialize["template"] = o.Template
	return toSerialize, nil
}

func (o *V1beta1WorkspaceTemplateSpec) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"placement",
		"template",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV1beta1WorkspaceTemplateSpec := _V1beta1WorkspaceTemplateSpec{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV1beta1WorkspaceTemplateSpec)

	if err != nil {
		return err
	}

	*o = V1beta1WorkspaceTemplateSpec(varV1beta1WorkspaceTemplateSpec)

	return err
}

type NullableV1beta1WorkspaceTemplateSpec struct {
	value *V1beta1WorkspaceTemplateSpec
	isSet bool
}

func (v NullableV1beta1WorkspaceTemplateSpec) Get() *V1beta1WorkspaceTemplateSpec {
	return v.value
}

func (v *NullableV1beta1WorkspaceTemplateSpec) Set(val *V1beta1WorkspaceTemplateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableV1beta1WorkspaceTemplateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableV1beta1WorkspaceTemplateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1beta1WorkspaceTemplateSpec(val *V1beta1WorkspaceTemplateSpec) *NullableV1beta1WorkspaceTemplateSpec {
	return &NullableV1beta1WorkspaceTemplateSpec{value: val, isSet: true}
}

func (v NullableV1beta1WorkspaceTemplateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1beta1WorkspaceTemplateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


