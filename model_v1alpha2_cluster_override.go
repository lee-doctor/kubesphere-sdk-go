/*
KS API

KubeSphere OpenAPI

API version: v4.1.1
Contact: support@kubesphere.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the V1alpha2ClusterOverride type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1alpha2ClusterOverride{}

// V1alpha2ClusterOverride struct for V1alpha2ClusterOverride
type V1alpha2ClusterOverride struct {
	Op *string `json:"op,omitempty"`
	Path string `json:"path"`
	Value *string `json:"value,omitempty"`
}

type _V1alpha2ClusterOverride V1alpha2ClusterOverride

// NewV1alpha2ClusterOverride instantiates a new V1alpha2ClusterOverride object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha2ClusterOverride(path string) *V1alpha2ClusterOverride {
	this := V1alpha2ClusterOverride{}
	this.Path = path
	return &this
}

// NewV1alpha2ClusterOverrideWithDefaults instantiates a new V1alpha2ClusterOverride object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha2ClusterOverrideWithDefaults() *V1alpha2ClusterOverride {
	this := V1alpha2ClusterOverride{}
	return &this
}

// GetOp returns the Op field value if set, zero value otherwise.
func (o *V1alpha2ClusterOverride) GetOp() string {
	if o == nil || IsNil(o.Op) {
		var ret string
		return ret
	}
	return *o.Op
}

// GetOpOk returns a tuple with the Op field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha2ClusterOverride) GetOpOk() (*string, bool) {
	if o == nil || IsNil(o.Op) {
		return nil, false
	}
	return o.Op, true
}

// HasOp returns a boolean if a field has been set.
func (o *V1alpha2ClusterOverride) HasOp() bool {
	if o != nil && !IsNil(o.Op) {
		return true
	}

	return false
}

// SetOp gets a reference to the given string and assigns it to the Op field.
func (o *V1alpha2ClusterOverride) SetOp(v string) {
	o.Op = &v
}

// GetPath returns the Path field value
func (o *V1alpha2ClusterOverride) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *V1alpha2ClusterOverride) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *V1alpha2ClusterOverride) SetPath(v string) {
	o.Path = v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *V1alpha2ClusterOverride) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha2ClusterOverride) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *V1alpha2ClusterOverride) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *V1alpha2ClusterOverride) SetValue(v string) {
	o.Value = &v
}

func (o V1alpha2ClusterOverride) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1alpha2ClusterOverride) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Op) {
		toSerialize["op"] = o.Op
	}
	toSerialize["path"] = o.Path
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

func (o *V1alpha2ClusterOverride) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"path",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV1alpha2ClusterOverride := _V1alpha2ClusterOverride{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varV1alpha2ClusterOverride)

	if err != nil {
		return err
	}

	*o = V1alpha2ClusterOverride(varV1alpha2ClusterOverride)

	return err
}

type NullableV1alpha2ClusterOverride struct {
	value *V1alpha2ClusterOverride
	isSet bool
}

func (v NullableV1alpha2ClusterOverride) Get() *V1alpha2ClusterOverride {
	return v.value
}

func (v *NullableV1alpha2ClusterOverride) Set(val *V1alpha2ClusterOverride) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha2ClusterOverride) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha2ClusterOverride) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha2ClusterOverride(val *V1alpha2ClusterOverride) *NullableV1alpha2ClusterOverride {
	return &NullableV1alpha2ClusterOverride{value: val, isSet: true}
}

func (v NullableV1alpha2ClusterOverride) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha2ClusterOverride) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


