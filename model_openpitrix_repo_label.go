/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OpenpitrixRepoLabel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenpitrixRepoLabel{}

// OpenpitrixRepoLabel struct for OpenpitrixRepoLabel
type OpenpitrixRepoLabel struct {
	CreateTime *string `json:"create_time,omitempty"`
	LabelKey *string `json:"label_key,omitempty"`
	LabelValue *string `json:"label_value,omitempty"`
}

// NewOpenpitrixRepoLabel instantiates a new OpenpitrixRepoLabel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenpitrixRepoLabel() *OpenpitrixRepoLabel {
	this := OpenpitrixRepoLabel{}
	return &this
}

// NewOpenpitrixRepoLabelWithDefaults instantiates a new OpenpitrixRepoLabel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenpitrixRepoLabelWithDefaults() *OpenpitrixRepoLabel {
	this := OpenpitrixRepoLabel{}
	return &this
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *OpenpitrixRepoLabel) GetCreateTime() string {
	if o == nil || IsNil(o.CreateTime) {
		var ret string
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixRepoLabel) GetCreateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *OpenpitrixRepoLabel) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given string and assigns it to the CreateTime field.
func (o *OpenpitrixRepoLabel) SetCreateTime(v string) {
	o.CreateTime = &v
}

// GetLabelKey returns the LabelKey field value if set, zero value otherwise.
func (o *OpenpitrixRepoLabel) GetLabelKey() string {
	if o == nil || IsNil(o.LabelKey) {
		var ret string
		return ret
	}
	return *o.LabelKey
}

// GetLabelKeyOk returns a tuple with the LabelKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixRepoLabel) GetLabelKeyOk() (*string, bool) {
	if o == nil || IsNil(o.LabelKey) {
		return nil, false
	}
	return o.LabelKey, true
}

// HasLabelKey returns a boolean if a field has been set.
func (o *OpenpitrixRepoLabel) HasLabelKey() bool {
	if o != nil && !IsNil(o.LabelKey) {
		return true
	}

	return false
}

// SetLabelKey gets a reference to the given string and assigns it to the LabelKey field.
func (o *OpenpitrixRepoLabel) SetLabelKey(v string) {
	o.LabelKey = &v
}

// GetLabelValue returns the LabelValue field value if set, zero value otherwise.
func (o *OpenpitrixRepoLabel) GetLabelValue() string {
	if o == nil || IsNil(o.LabelValue) {
		var ret string
		return ret
	}
	return *o.LabelValue
}

// GetLabelValueOk returns a tuple with the LabelValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixRepoLabel) GetLabelValueOk() (*string, bool) {
	if o == nil || IsNil(o.LabelValue) {
		return nil, false
	}
	return o.LabelValue, true
}

// HasLabelValue returns a boolean if a field has been set.
func (o *OpenpitrixRepoLabel) HasLabelValue() bool {
	if o != nil && !IsNil(o.LabelValue) {
		return true
	}

	return false
}

// SetLabelValue gets a reference to the given string and assigns it to the LabelValue field.
func (o *OpenpitrixRepoLabel) SetLabelValue(v string) {
	o.LabelValue = &v
}

func (o OpenpitrixRepoLabel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenpitrixRepoLabel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreateTime) {
		toSerialize["create_time"] = o.CreateTime
	}
	if !IsNil(o.LabelKey) {
		toSerialize["label_key"] = o.LabelKey
	}
	if !IsNil(o.LabelValue) {
		toSerialize["label_value"] = o.LabelValue
	}
	return toSerialize, nil
}

type NullableOpenpitrixRepoLabel struct {
	value *OpenpitrixRepoLabel
	isSet bool
}

func (v NullableOpenpitrixRepoLabel) Get() *OpenpitrixRepoLabel {
	return v.value
}

func (v *NullableOpenpitrixRepoLabel) Set(val *OpenpitrixRepoLabel) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenpitrixRepoLabel) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenpitrixRepoLabel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenpitrixRepoLabel(val *OpenpitrixRepoLabel) *NullableOpenpitrixRepoLabel {
	return &NullableOpenpitrixRepoLabel{value: val, isSet: true}
}

func (v NullableOpenpitrixRepoLabel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenpitrixRepoLabel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


