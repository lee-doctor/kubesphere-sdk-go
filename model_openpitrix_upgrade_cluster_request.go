/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OpenpitrixUpgradeClusterRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenpitrixUpgradeClusterRequest{}

// OpenpitrixUpgradeClusterRequest struct for OpenpitrixUpgradeClusterRequest
type OpenpitrixUpgradeClusterRequest struct {
	AdvancedParam []string `json:"advanced_param"`
	ClusterId string `json:"cluster_id"`
	Conf *string `json:"conf,omitempty"`
	RuntimeId *string `json:"runtime_id,omitempty"`
	VersionId *string `json:"version_id,omitempty"`
}

type _OpenpitrixUpgradeClusterRequest OpenpitrixUpgradeClusterRequest

// NewOpenpitrixUpgradeClusterRequest instantiates a new OpenpitrixUpgradeClusterRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenpitrixUpgradeClusterRequest(advancedParam []string, clusterId string) *OpenpitrixUpgradeClusterRequest {
	this := OpenpitrixUpgradeClusterRequest{}
	this.AdvancedParam = advancedParam
	this.ClusterId = clusterId
	return &this
}

// NewOpenpitrixUpgradeClusterRequestWithDefaults instantiates a new OpenpitrixUpgradeClusterRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenpitrixUpgradeClusterRequestWithDefaults() *OpenpitrixUpgradeClusterRequest {
	this := OpenpitrixUpgradeClusterRequest{}
	return &this
}

// GetAdvancedParam returns the AdvancedParam field value
func (o *OpenpitrixUpgradeClusterRequest) GetAdvancedParam() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AdvancedParam
}

// GetAdvancedParamOk returns a tuple with the AdvancedParam field value
// and a boolean to check if the value has been set.
func (o *OpenpitrixUpgradeClusterRequest) GetAdvancedParamOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AdvancedParam, true
}

// SetAdvancedParam sets field value
func (o *OpenpitrixUpgradeClusterRequest) SetAdvancedParam(v []string) {
	o.AdvancedParam = v
}

// GetClusterId returns the ClusterId field value
func (o *OpenpitrixUpgradeClusterRequest) GetClusterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
func (o *OpenpitrixUpgradeClusterRequest) GetClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterId, true
}

// SetClusterId sets field value
func (o *OpenpitrixUpgradeClusterRequest) SetClusterId(v string) {
	o.ClusterId = v
}

// GetConf returns the Conf field value if set, zero value otherwise.
func (o *OpenpitrixUpgradeClusterRequest) GetConf() string {
	if o == nil || IsNil(o.Conf) {
		var ret string
		return ret
	}
	return *o.Conf
}

// GetConfOk returns a tuple with the Conf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixUpgradeClusterRequest) GetConfOk() (*string, bool) {
	if o == nil || IsNil(o.Conf) {
		return nil, false
	}
	return o.Conf, true
}

// HasConf returns a boolean if a field has been set.
func (o *OpenpitrixUpgradeClusterRequest) HasConf() bool {
	if o != nil && !IsNil(o.Conf) {
		return true
	}

	return false
}

// SetConf gets a reference to the given string and assigns it to the Conf field.
func (o *OpenpitrixUpgradeClusterRequest) SetConf(v string) {
	o.Conf = &v
}

// GetRuntimeId returns the RuntimeId field value if set, zero value otherwise.
func (o *OpenpitrixUpgradeClusterRequest) GetRuntimeId() string {
	if o == nil || IsNil(o.RuntimeId) {
		var ret string
		return ret
	}
	return *o.RuntimeId
}

// GetRuntimeIdOk returns a tuple with the RuntimeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixUpgradeClusterRequest) GetRuntimeIdOk() (*string, bool) {
	if o == nil || IsNil(o.RuntimeId) {
		return nil, false
	}
	return o.RuntimeId, true
}

// HasRuntimeId returns a boolean if a field has been set.
func (o *OpenpitrixUpgradeClusterRequest) HasRuntimeId() bool {
	if o != nil && !IsNil(o.RuntimeId) {
		return true
	}

	return false
}

// SetRuntimeId gets a reference to the given string and assigns it to the RuntimeId field.
func (o *OpenpitrixUpgradeClusterRequest) SetRuntimeId(v string) {
	o.RuntimeId = &v
}

// GetVersionId returns the VersionId field value if set, zero value otherwise.
func (o *OpenpitrixUpgradeClusterRequest) GetVersionId() string {
	if o == nil || IsNil(o.VersionId) {
		var ret string
		return ret
	}
	return *o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixUpgradeClusterRequest) GetVersionIdOk() (*string, bool) {
	if o == nil || IsNil(o.VersionId) {
		return nil, false
	}
	return o.VersionId, true
}

// HasVersionId returns a boolean if a field has been set.
func (o *OpenpitrixUpgradeClusterRequest) HasVersionId() bool {
	if o != nil && !IsNil(o.VersionId) {
		return true
	}

	return false
}

// SetVersionId gets a reference to the given string and assigns it to the VersionId field.
func (o *OpenpitrixUpgradeClusterRequest) SetVersionId(v string) {
	o.VersionId = &v
}

func (o OpenpitrixUpgradeClusterRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenpitrixUpgradeClusterRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["advanced_param"] = o.AdvancedParam
	toSerialize["cluster_id"] = o.ClusterId
	if !IsNil(o.Conf) {
		toSerialize["conf"] = o.Conf
	}
	if !IsNil(o.RuntimeId) {
		toSerialize["runtime_id"] = o.RuntimeId
	}
	if !IsNil(o.VersionId) {
		toSerialize["version_id"] = o.VersionId
	}
	return toSerialize, nil
}

func (o *OpenpitrixUpgradeClusterRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"advanced_param",
		"cluster_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOpenpitrixUpgradeClusterRequest := _OpenpitrixUpgradeClusterRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOpenpitrixUpgradeClusterRequest)

	if err != nil {
		return err
	}

	*o = OpenpitrixUpgradeClusterRequest(varOpenpitrixUpgradeClusterRequest)

	return err
}

type NullableOpenpitrixUpgradeClusterRequest struct {
	value *OpenpitrixUpgradeClusterRequest
	isSet bool
}

func (v NullableOpenpitrixUpgradeClusterRequest) Get() *OpenpitrixUpgradeClusterRequest {
	return v.value
}

func (v *NullableOpenpitrixUpgradeClusterRequest) Set(val *OpenpitrixUpgradeClusterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenpitrixUpgradeClusterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenpitrixUpgradeClusterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenpitrixUpgradeClusterRequest(val *OpenpitrixUpgradeClusterRequest) *NullableOpenpitrixUpgradeClusterRequest {
	return &NullableOpenpitrixUpgradeClusterRequest{value: val, isSet: true}
}

func (v NullableOpenpitrixUpgradeClusterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenpitrixUpgradeClusterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


