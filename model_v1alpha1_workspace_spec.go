/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1alpha1WorkspaceSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1alpha1WorkspaceSpec{}

// V1alpha1WorkspaceSpec struct for V1alpha1WorkspaceSpec
type V1alpha1WorkspaceSpec struct {
	Manager *string `json:"manager,omitempty"`
	NetworkIsolation *bool `json:"networkIsolation,omitempty"`
}

// NewV1alpha1WorkspaceSpec instantiates a new V1alpha1WorkspaceSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha1WorkspaceSpec() *V1alpha1WorkspaceSpec {
	this := V1alpha1WorkspaceSpec{}
	return &this
}

// NewV1alpha1WorkspaceSpecWithDefaults instantiates a new V1alpha1WorkspaceSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha1WorkspaceSpecWithDefaults() *V1alpha1WorkspaceSpec {
	this := V1alpha1WorkspaceSpec{}
	return &this
}

// GetManager returns the Manager field value if set, zero value otherwise.
func (o *V1alpha1WorkspaceSpec) GetManager() string {
	if o == nil || IsNil(o.Manager) {
		var ret string
		return ret
	}
	return *o.Manager
}

// GetManagerOk returns a tuple with the Manager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1WorkspaceSpec) GetManagerOk() (*string, bool) {
	if o == nil || IsNil(o.Manager) {
		return nil, false
	}
	return o.Manager, true
}

// HasManager returns a boolean if a field has been set.
func (o *V1alpha1WorkspaceSpec) HasManager() bool {
	if o != nil && !IsNil(o.Manager) {
		return true
	}

	return false
}

// SetManager gets a reference to the given string and assigns it to the Manager field.
func (o *V1alpha1WorkspaceSpec) SetManager(v string) {
	o.Manager = &v
}

// GetNetworkIsolation returns the NetworkIsolation field value if set, zero value otherwise.
func (o *V1alpha1WorkspaceSpec) GetNetworkIsolation() bool {
	if o == nil || IsNil(o.NetworkIsolation) {
		var ret bool
		return ret
	}
	return *o.NetworkIsolation
}

// GetNetworkIsolationOk returns a tuple with the NetworkIsolation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1WorkspaceSpec) GetNetworkIsolationOk() (*bool, bool) {
	if o == nil || IsNil(o.NetworkIsolation) {
		return nil, false
	}
	return o.NetworkIsolation, true
}

// HasNetworkIsolation returns a boolean if a field has been set.
func (o *V1alpha1WorkspaceSpec) HasNetworkIsolation() bool {
	if o != nil && !IsNil(o.NetworkIsolation) {
		return true
	}

	return false
}

// SetNetworkIsolation gets a reference to the given bool and assigns it to the NetworkIsolation field.
func (o *V1alpha1WorkspaceSpec) SetNetworkIsolation(v bool) {
	o.NetworkIsolation = &v
}

func (o V1alpha1WorkspaceSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1alpha1WorkspaceSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Manager) {
		toSerialize["manager"] = o.Manager
	}
	if !IsNil(o.NetworkIsolation) {
		toSerialize["networkIsolation"] = o.NetworkIsolation
	}
	return toSerialize, nil
}

type NullableV1alpha1WorkspaceSpec struct {
	value *V1alpha1WorkspaceSpec
	isSet bool
}

func (v NullableV1alpha1WorkspaceSpec) Get() *V1alpha1WorkspaceSpec {
	return v.value
}

func (v *NullableV1alpha1WorkspaceSpec) Set(val *V1alpha1WorkspaceSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha1WorkspaceSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha1WorkspaceSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha1WorkspaceSpec(val *V1alpha1WorkspaceSpec) *NullableV1alpha1WorkspaceSpec {
	return &NullableV1alpha1WorkspaceSpec{value: val, isSet: true}
}

func (v NullableV1alpha1WorkspaceSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha1WorkspaceSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


