/*
KubeSphere

KubeSphere OpenAPI

API version: v3.1.0
Contact: info@kubesphere.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OpenpitrixApp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenpitrixApp{}

// OpenpitrixApp struct for OpenpitrixApp
type OpenpitrixApp struct {
	Abstraction *string `json:"abstraction,omitempty"`
	Active *bool `json:"active,omitempty"`
	AppId *string `json:"app_id,omitempty"`
	AppVersionTypes *string `json:"app_version_types,omitempty"`
	CategorySet []OpenpitrixResourceCategory `json:"category_set"`
	ChartName *string `json:"chart_name,omitempty"`
	ClusterTotal *int32 `json:"cluster_total,omitempty"`
	CompanyJoinTime *string `json:"company_join_time,omitempty"`
	CompanyName *string `json:"company_name,omitempty"`
	CompanyProfile *string `json:"company_profile,omitempty"`
	CompanyWebsite *string `json:"company_website,omitempty"`
	CreateTime *string `json:"create_time,omitempty"`
	Description *string `json:"description,omitempty"`
	Home *string `json:"home,omitempty"`
	Icon *string `json:"icon,omitempty"`
	Isv *string `json:"isv,omitempty"`
	Keywords *string `json:"keywords,omitempty"`
	LatestAppVersion *OpenpitrixAppVersion `json:"latest_app_version,omitempty"`
	Maintainers *string `json:"maintainers,omitempty"`
	Name *string `json:"name,omitempty"`
	Owner *string `json:"owner,omitempty"`
	Readme *string `json:"readme,omitempty"`
	RepoId *string `json:"repo_id,omitempty"`
	Screenshots *string `json:"screenshots,omitempty"`
	Sources *string `json:"sources,omitempty"`
	Status *string `json:"status,omitempty"`
	StatusTime *string `json:"status_time,omitempty"`
	Tos *string `json:"tos,omitempty"`
	UpdateTime *string `json:"update_time,omitempty"`
}

type _OpenpitrixApp OpenpitrixApp

// NewOpenpitrixApp instantiates a new OpenpitrixApp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenpitrixApp(categorySet []OpenpitrixResourceCategory) *OpenpitrixApp {
	this := OpenpitrixApp{}
	this.CategorySet = categorySet
	return &this
}

// NewOpenpitrixAppWithDefaults instantiates a new OpenpitrixApp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenpitrixAppWithDefaults() *OpenpitrixApp {
	this := OpenpitrixApp{}
	return &this
}

// GetAbstraction returns the Abstraction field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetAbstraction() string {
	if o == nil || IsNil(o.Abstraction) {
		var ret string
		return ret
	}
	return *o.Abstraction
}

// GetAbstractionOk returns a tuple with the Abstraction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetAbstractionOk() (*string, bool) {
	if o == nil || IsNil(o.Abstraction) {
		return nil, false
	}
	return o.Abstraction, true
}

// HasAbstraction returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasAbstraction() bool {
	if o != nil && !IsNil(o.Abstraction) {
		return true
	}

	return false
}

// SetAbstraction gets a reference to the given string and assigns it to the Abstraction field.
func (o *OpenpitrixApp) SetAbstraction(v string) {
	o.Abstraction = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *OpenpitrixApp) SetActive(v bool) {
	o.Active = &v
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetAppId() string {
	if o == nil || IsNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasAppId() bool {
	if o != nil && !IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *OpenpitrixApp) SetAppId(v string) {
	o.AppId = &v
}

// GetAppVersionTypes returns the AppVersionTypes field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetAppVersionTypes() string {
	if o == nil || IsNil(o.AppVersionTypes) {
		var ret string
		return ret
	}
	return *o.AppVersionTypes
}

// GetAppVersionTypesOk returns a tuple with the AppVersionTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetAppVersionTypesOk() (*string, bool) {
	if o == nil || IsNil(o.AppVersionTypes) {
		return nil, false
	}
	return o.AppVersionTypes, true
}

// HasAppVersionTypes returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasAppVersionTypes() bool {
	if o != nil && !IsNil(o.AppVersionTypes) {
		return true
	}

	return false
}

// SetAppVersionTypes gets a reference to the given string and assigns it to the AppVersionTypes field.
func (o *OpenpitrixApp) SetAppVersionTypes(v string) {
	o.AppVersionTypes = &v
}

// GetCategorySet returns the CategorySet field value
func (o *OpenpitrixApp) GetCategorySet() []OpenpitrixResourceCategory {
	if o == nil {
		var ret []OpenpitrixResourceCategory
		return ret
	}

	return o.CategorySet
}

// GetCategorySetOk returns a tuple with the CategorySet field value
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetCategorySetOk() ([]OpenpitrixResourceCategory, bool) {
	if o == nil {
		return nil, false
	}
	return o.CategorySet, true
}

// SetCategorySet sets field value
func (o *OpenpitrixApp) SetCategorySet(v []OpenpitrixResourceCategory) {
	o.CategorySet = v
}

// GetChartName returns the ChartName field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetChartName() string {
	if o == nil || IsNil(o.ChartName) {
		var ret string
		return ret
	}
	return *o.ChartName
}

// GetChartNameOk returns a tuple with the ChartName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetChartNameOk() (*string, bool) {
	if o == nil || IsNil(o.ChartName) {
		return nil, false
	}
	return o.ChartName, true
}

// HasChartName returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasChartName() bool {
	if o != nil && !IsNil(o.ChartName) {
		return true
	}

	return false
}

// SetChartName gets a reference to the given string and assigns it to the ChartName field.
func (o *OpenpitrixApp) SetChartName(v string) {
	o.ChartName = &v
}

// GetClusterTotal returns the ClusterTotal field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetClusterTotal() int32 {
	if o == nil || IsNil(o.ClusterTotal) {
		var ret int32
		return ret
	}
	return *o.ClusterTotal
}

// GetClusterTotalOk returns a tuple with the ClusterTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetClusterTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.ClusterTotal) {
		return nil, false
	}
	return o.ClusterTotal, true
}

// HasClusterTotal returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasClusterTotal() bool {
	if o != nil && !IsNil(o.ClusterTotal) {
		return true
	}

	return false
}

// SetClusterTotal gets a reference to the given int32 and assigns it to the ClusterTotal field.
func (o *OpenpitrixApp) SetClusterTotal(v int32) {
	o.ClusterTotal = &v
}

// GetCompanyJoinTime returns the CompanyJoinTime field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetCompanyJoinTime() string {
	if o == nil || IsNil(o.CompanyJoinTime) {
		var ret string
		return ret
	}
	return *o.CompanyJoinTime
}

// GetCompanyJoinTimeOk returns a tuple with the CompanyJoinTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetCompanyJoinTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyJoinTime) {
		return nil, false
	}
	return o.CompanyJoinTime, true
}

// HasCompanyJoinTime returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasCompanyJoinTime() bool {
	if o != nil && !IsNil(o.CompanyJoinTime) {
		return true
	}

	return false
}

// SetCompanyJoinTime gets a reference to the given string and assigns it to the CompanyJoinTime field.
func (o *OpenpitrixApp) SetCompanyJoinTime(v string) {
	o.CompanyJoinTime = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *OpenpitrixApp) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetCompanyProfile returns the CompanyProfile field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetCompanyProfile() string {
	if o == nil || IsNil(o.CompanyProfile) {
		var ret string
		return ret
	}
	return *o.CompanyProfile
}

// GetCompanyProfileOk returns a tuple with the CompanyProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetCompanyProfileOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyProfile) {
		return nil, false
	}
	return o.CompanyProfile, true
}

// HasCompanyProfile returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasCompanyProfile() bool {
	if o != nil && !IsNil(o.CompanyProfile) {
		return true
	}

	return false
}

// SetCompanyProfile gets a reference to the given string and assigns it to the CompanyProfile field.
func (o *OpenpitrixApp) SetCompanyProfile(v string) {
	o.CompanyProfile = &v
}

// GetCompanyWebsite returns the CompanyWebsite field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetCompanyWebsite() string {
	if o == nil || IsNil(o.CompanyWebsite) {
		var ret string
		return ret
	}
	return *o.CompanyWebsite
}

// GetCompanyWebsiteOk returns a tuple with the CompanyWebsite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetCompanyWebsiteOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyWebsite) {
		return nil, false
	}
	return o.CompanyWebsite, true
}

// HasCompanyWebsite returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasCompanyWebsite() bool {
	if o != nil && !IsNil(o.CompanyWebsite) {
		return true
	}

	return false
}

// SetCompanyWebsite gets a reference to the given string and assigns it to the CompanyWebsite field.
func (o *OpenpitrixApp) SetCompanyWebsite(v string) {
	o.CompanyWebsite = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetCreateTime() string {
	if o == nil || IsNil(o.CreateTime) {
		var ret string
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetCreateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given string and assigns it to the CreateTime field.
func (o *OpenpitrixApp) SetCreateTime(v string) {
	o.CreateTime = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OpenpitrixApp) SetDescription(v string) {
	o.Description = &v
}

// GetHome returns the Home field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetHome() string {
	if o == nil || IsNil(o.Home) {
		var ret string
		return ret
	}
	return *o.Home
}

// GetHomeOk returns a tuple with the Home field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetHomeOk() (*string, bool) {
	if o == nil || IsNil(o.Home) {
		return nil, false
	}
	return o.Home, true
}

// HasHome returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasHome() bool {
	if o != nil && !IsNil(o.Home) {
		return true
	}

	return false
}

// SetHome gets a reference to the given string and assigns it to the Home field.
func (o *OpenpitrixApp) SetHome(v string) {
	o.Home = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *OpenpitrixApp) SetIcon(v string) {
	o.Icon = &v
}

// GetIsv returns the Isv field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetIsv() string {
	if o == nil || IsNil(o.Isv) {
		var ret string
		return ret
	}
	return *o.Isv
}

// GetIsvOk returns a tuple with the Isv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetIsvOk() (*string, bool) {
	if o == nil || IsNil(o.Isv) {
		return nil, false
	}
	return o.Isv, true
}

// HasIsv returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasIsv() bool {
	if o != nil && !IsNil(o.Isv) {
		return true
	}

	return false
}

// SetIsv gets a reference to the given string and assigns it to the Isv field.
func (o *OpenpitrixApp) SetIsv(v string) {
	o.Isv = &v
}

// GetKeywords returns the Keywords field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetKeywords() string {
	if o == nil || IsNil(o.Keywords) {
		var ret string
		return ret
	}
	return *o.Keywords
}

// GetKeywordsOk returns a tuple with the Keywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetKeywordsOk() (*string, bool) {
	if o == nil || IsNil(o.Keywords) {
		return nil, false
	}
	return o.Keywords, true
}

// HasKeywords returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasKeywords() bool {
	if o != nil && !IsNil(o.Keywords) {
		return true
	}

	return false
}

// SetKeywords gets a reference to the given string and assigns it to the Keywords field.
func (o *OpenpitrixApp) SetKeywords(v string) {
	o.Keywords = &v
}

// GetLatestAppVersion returns the LatestAppVersion field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetLatestAppVersion() OpenpitrixAppVersion {
	if o == nil || IsNil(o.LatestAppVersion) {
		var ret OpenpitrixAppVersion
		return ret
	}
	return *o.LatestAppVersion
}

// GetLatestAppVersionOk returns a tuple with the LatestAppVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetLatestAppVersionOk() (*OpenpitrixAppVersion, bool) {
	if o == nil || IsNil(o.LatestAppVersion) {
		return nil, false
	}
	return o.LatestAppVersion, true
}

// HasLatestAppVersion returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasLatestAppVersion() bool {
	if o != nil && !IsNil(o.LatestAppVersion) {
		return true
	}

	return false
}

// SetLatestAppVersion gets a reference to the given OpenpitrixAppVersion and assigns it to the LatestAppVersion field.
func (o *OpenpitrixApp) SetLatestAppVersion(v OpenpitrixAppVersion) {
	o.LatestAppVersion = &v
}

// GetMaintainers returns the Maintainers field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetMaintainers() string {
	if o == nil || IsNil(o.Maintainers) {
		var ret string
		return ret
	}
	return *o.Maintainers
}

// GetMaintainersOk returns a tuple with the Maintainers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetMaintainersOk() (*string, bool) {
	if o == nil || IsNil(o.Maintainers) {
		return nil, false
	}
	return o.Maintainers, true
}

// HasMaintainers returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasMaintainers() bool {
	if o != nil && !IsNil(o.Maintainers) {
		return true
	}

	return false
}

// SetMaintainers gets a reference to the given string and assigns it to the Maintainers field.
func (o *OpenpitrixApp) SetMaintainers(v string) {
	o.Maintainers = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OpenpitrixApp) SetName(v string) {
	o.Name = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetOwner() string {
	if o == nil || IsNil(o.Owner) {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *OpenpitrixApp) SetOwner(v string) {
	o.Owner = &v
}

// GetReadme returns the Readme field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetReadme() string {
	if o == nil || IsNil(o.Readme) {
		var ret string
		return ret
	}
	return *o.Readme
}

// GetReadmeOk returns a tuple with the Readme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetReadmeOk() (*string, bool) {
	if o == nil || IsNil(o.Readme) {
		return nil, false
	}
	return o.Readme, true
}

// HasReadme returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasReadme() bool {
	if o != nil && !IsNil(o.Readme) {
		return true
	}

	return false
}

// SetReadme gets a reference to the given string and assigns it to the Readme field.
func (o *OpenpitrixApp) SetReadme(v string) {
	o.Readme = &v
}

// GetRepoId returns the RepoId field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetRepoId() string {
	if o == nil || IsNil(o.RepoId) {
		var ret string
		return ret
	}
	return *o.RepoId
}

// GetRepoIdOk returns a tuple with the RepoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetRepoIdOk() (*string, bool) {
	if o == nil || IsNil(o.RepoId) {
		return nil, false
	}
	return o.RepoId, true
}

// HasRepoId returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasRepoId() bool {
	if o != nil && !IsNil(o.RepoId) {
		return true
	}

	return false
}

// SetRepoId gets a reference to the given string and assigns it to the RepoId field.
func (o *OpenpitrixApp) SetRepoId(v string) {
	o.RepoId = &v
}

// GetScreenshots returns the Screenshots field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetScreenshots() string {
	if o == nil || IsNil(o.Screenshots) {
		var ret string
		return ret
	}
	return *o.Screenshots
}

// GetScreenshotsOk returns a tuple with the Screenshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetScreenshotsOk() (*string, bool) {
	if o == nil || IsNil(o.Screenshots) {
		return nil, false
	}
	return o.Screenshots, true
}

// HasScreenshots returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasScreenshots() bool {
	if o != nil && !IsNil(o.Screenshots) {
		return true
	}

	return false
}

// SetScreenshots gets a reference to the given string and assigns it to the Screenshots field.
func (o *OpenpitrixApp) SetScreenshots(v string) {
	o.Screenshots = &v
}

// GetSources returns the Sources field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetSources() string {
	if o == nil || IsNil(o.Sources) {
		var ret string
		return ret
	}
	return *o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetSourcesOk() (*string, bool) {
	if o == nil || IsNil(o.Sources) {
		return nil, false
	}
	return o.Sources, true
}

// HasSources returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasSources() bool {
	if o != nil && !IsNil(o.Sources) {
		return true
	}

	return false
}

// SetSources gets a reference to the given string and assigns it to the Sources field.
func (o *OpenpitrixApp) SetSources(v string) {
	o.Sources = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OpenpitrixApp) SetStatus(v string) {
	o.Status = &v
}

// GetStatusTime returns the StatusTime field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetStatusTime() string {
	if o == nil || IsNil(o.StatusTime) {
		var ret string
		return ret
	}
	return *o.StatusTime
}

// GetStatusTimeOk returns a tuple with the StatusTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetStatusTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StatusTime) {
		return nil, false
	}
	return o.StatusTime, true
}

// HasStatusTime returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasStatusTime() bool {
	if o != nil && !IsNil(o.StatusTime) {
		return true
	}

	return false
}

// SetStatusTime gets a reference to the given string and assigns it to the StatusTime field.
func (o *OpenpitrixApp) SetStatusTime(v string) {
	o.StatusTime = &v
}

// GetTos returns the Tos field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetTos() string {
	if o == nil || IsNil(o.Tos) {
		var ret string
		return ret
	}
	return *o.Tos
}

// GetTosOk returns a tuple with the Tos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetTosOk() (*string, bool) {
	if o == nil || IsNil(o.Tos) {
		return nil, false
	}
	return o.Tos, true
}

// HasTos returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasTos() bool {
	if o != nil && !IsNil(o.Tos) {
		return true
	}

	return false
}

// SetTos gets a reference to the given string and assigns it to the Tos field.
func (o *OpenpitrixApp) SetTos(v string) {
	o.Tos = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *OpenpitrixApp) GetUpdateTime() string {
	if o == nil || IsNil(o.UpdateTime) {
		var ret string
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenpitrixApp) GetUpdateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *OpenpitrixApp) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given string and assigns it to the UpdateTime field.
func (o *OpenpitrixApp) SetUpdateTime(v string) {
	o.UpdateTime = &v
}

func (o OpenpitrixApp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenpitrixApp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Abstraction) {
		toSerialize["abstraction"] = o.Abstraction
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.AppId) {
		toSerialize["app_id"] = o.AppId
	}
	if !IsNil(o.AppVersionTypes) {
		toSerialize["app_version_types"] = o.AppVersionTypes
	}
	toSerialize["category_set"] = o.CategorySet
	if !IsNil(o.ChartName) {
		toSerialize["chart_name"] = o.ChartName
	}
	if !IsNil(o.ClusterTotal) {
		toSerialize["cluster_total"] = o.ClusterTotal
	}
	if !IsNil(o.CompanyJoinTime) {
		toSerialize["company_join_time"] = o.CompanyJoinTime
	}
	if !IsNil(o.CompanyName) {
		toSerialize["company_name"] = o.CompanyName
	}
	if !IsNil(o.CompanyProfile) {
		toSerialize["company_profile"] = o.CompanyProfile
	}
	if !IsNil(o.CompanyWebsite) {
		toSerialize["company_website"] = o.CompanyWebsite
	}
	if !IsNil(o.CreateTime) {
		toSerialize["create_time"] = o.CreateTime
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Home) {
		toSerialize["home"] = o.Home
	}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if !IsNil(o.Isv) {
		toSerialize["isv"] = o.Isv
	}
	if !IsNil(o.Keywords) {
		toSerialize["keywords"] = o.Keywords
	}
	if !IsNil(o.LatestAppVersion) {
		toSerialize["latest_app_version"] = o.LatestAppVersion
	}
	if !IsNil(o.Maintainers) {
		toSerialize["maintainers"] = o.Maintainers
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.Readme) {
		toSerialize["readme"] = o.Readme
	}
	if !IsNil(o.RepoId) {
		toSerialize["repo_id"] = o.RepoId
	}
	if !IsNil(o.Screenshots) {
		toSerialize["screenshots"] = o.Screenshots
	}
	if !IsNil(o.Sources) {
		toSerialize["sources"] = o.Sources
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusTime) {
		toSerialize["status_time"] = o.StatusTime
	}
	if !IsNil(o.Tos) {
		toSerialize["tos"] = o.Tos
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["update_time"] = o.UpdateTime
	}
	return toSerialize, nil
}

func (o *OpenpitrixApp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"category_set",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOpenpitrixApp := _OpenpitrixApp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOpenpitrixApp)

	if err != nil {
		return err
	}

	*o = OpenpitrixApp(varOpenpitrixApp)

	return err
}

type NullableOpenpitrixApp struct {
	value *OpenpitrixApp
	isSet bool
}

func (v NullableOpenpitrixApp) Get() *OpenpitrixApp {
	return v.value
}

func (v *NullableOpenpitrixApp) Set(val *OpenpitrixApp) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenpitrixApp) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenpitrixApp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenpitrixApp(val *OpenpitrixApp) *NullableOpenpitrixApp {
	return &NullableOpenpitrixApp{value: val, isSet: true}
}

func (v NullableOpenpitrixApp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenpitrixApp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


